ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_UART_Init:
  25              	.LFB65:
  26              		.file 1 "./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  13:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  14:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  17:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  19:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  23:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  25:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 2


  33:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.
  35:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  42:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  57:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  61:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  62:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  63:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  67:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ##### Callback registration #####
  68:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     ==================================
  69:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  71:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  74:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  75:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  76:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  77:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  88:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and a pointer to the user callback function.
  89:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 3


  90:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
  91:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     weak (surcharged) function.
  93:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and the Callback ID.
  95:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     respectively @ref HAL_UART_RegisterRxEventCallback() , @ref HAL_UART_UnRegisterRxEventCallback(
 110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     not defined, the callback registration feature is not available
 133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver :
 137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
 139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
 140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
 146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 4


 147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
 157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
 158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     where number of data to be received is unknown).
 179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         as triggers for updating reception status to caller :
 183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                for 1 frame time, after last received byte.
 186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two mode of transfer:
 188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            are returned by function after finishing transfer.
 192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            These API's return the HAL status.
 194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
 195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API:
 200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 5


 204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * All rights reserved.</center></h2>
 247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 6


 261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 7


 318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
 321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length
 327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     procedures (details for the procedures are available in reference manuals
 339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
  27              		.loc 1 353 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
 354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
  40              		.loc 1 355 6
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 002B     		cmp	r3, #0
  43 000c 01D1     		bne	.L2
 356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 8


  44              		.loc 1 357 12
  45 000e 0123     		movs	r3, #1
  46 0010 3FE0     		b	.L3
  47              	.L2:
 358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2 and USART3 */
 364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  48              		.loc 1 376 12
  49 0012 7B68     		ldr	r3, [r7, #4]
  50 0014 93F83D30 		ldrb	r3, [r3, #61]
  51 0018 DBB2     		uxtb	r3, r3
  52              		.loc 1 376 6
  53 001a 002B     		cmp	r3, #0
  54 001c 06D1     		bne	.L4
 377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  55              		.loc 1 379 17
  56 001e 7B68     		ldr	r3, [r7, #4]
  57 0020 0022     		movs	r2, #0
  58 0022 83F83C20 		strb	r2, [r3, #60]
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  59              		.loc 1 393 5
  60 0026 7868     		ldr	r0, [r7, #4]
  61 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  62              	.L4:
 394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 9


 396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  63              		.loc 1 397 17
  64 002c 7B68     		ldr	r3, [r7, #4]
  65 002e 2422     		movs	r2, #36
  66 0030 83F83D20 		strb	r2, [r3, #61]
 398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  67              		.loc 1 400 3
  68 0034 7B68     		ldr	r3, [r7, #4]
  69 0036 1B68     		ldr	r3, [r3]
  70 0038 DA68     		ldr	r2, [r3, #12]
  71 003a 7B68     		ldr	r3, [r7, #4]
  72 003c 1B68     		ldr	r3, [r3]
  73 003e 22F40052 		bic	r2, r2, #8192
  74 0042 DA60     		str	r2, [r3, #12]
 401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
  75              		.loc 1 403 3
  76 0044 7868     		ldr	r0, [r7, #4]
  77 0046 FFF7FEFF 		bl	UART_SetConfig
 404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  78              		.loc 1 408 3
  79 004a 7B68     		ldr	r3, [r7, #4]
  80 004c 1B68     		ldr	r3, [r3]
  81 004e 1A69     		ldr	r2, [r3, #16]
  82 0050 7B68     		ldr	r3, [r7, #4]
  83 0052 1B68     		ldr	r3, [r3]
  84 0054 22F49042 		bic	r2, r2, #18432
  85 0058 1A61     		str	r2, [r3, #16]
 409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  86              		.loc 1 409 3
  87 005a 7B68     		ldr	r3, [r7, #4]
  88 005c 1B68     		ldr	r3, [r3]
  89 005e 5A69     		ldr	r2, [r3, #20]
  90 0060 7B68     		ldr	r3, [r7, #4]
  91 0062 1B68     		ldr	r3, [r3]
  92 0064 22F02A02 		bic	r2, r2, #42
  93 0068 5A61     		str	r2, [r3, #20]
 410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  94              		.loc 1 412 3
  95 006a 7B68     		ldr	r3, [r7, #4]
  96 006c 1B68     		ldr	r3, [r3]
  97 006e DA68     		ldr	r2, [r3, #12]
  98 0070 7B68     		ldr	r3, [r7, #4]
  99 0072 1B68     		ldr	r3, [r3]
 100 0074 42F40052 		orr	r2, r2, #8192
 101 0078 DA60     		str	r2, [r3, #12]
 413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 10


 414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 102              		.loc 1 415 20
 103 007a 7B68     		ldr	r3, [r7, #4]
 104 007c 0022     		movs	r2, #0
 105 007e 1A64     		str	r2, [r3, #64]
 416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 106              		.loc 1 416 17
 107 0080 7B68     		ldr	r3, [r7, #4]
 108 0082 2022     		movs	r2, #32
 109 0084 83F83D20 		strb	r2, [r3, #61]
 417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 110              		.loc 1 417 18
 111 0088 7B68     		ldr	r3, [r7, #4]
 112 008a 2022     		movs	r2, #32
 113 008c 83F83E20 		strb	r2, [r3, #62]
 418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 114              		.loc 1 419 10
 115 0090 0023     		movs	r3, #0
 116              	.L3:
 420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 117              		.loc 1 420 1
 118 0092 1846     		mov	r0, r3
 119 0094 0837     		adds	r7, r7, #8
 120              		.cfi_def_cfa_offset 8
 121 0096 BD46     		mov	sp, r7
 122              		.cfi_def_cfa_register 13
 123              		@ sp needed
 124 0098 80BD     		pop	{r7, pc}
 125              		.cfi_endproc
 126              	.LFE65:
 128              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 129              		.align	1
 130              		.global	HAL_HalfDuplex_Init
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	HAL_HalfDuplex_Init:
 136              	.LFB66:
 421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 137              		.loc 1 430 1
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 8
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 11


 144              		.cfi_offset 14, -4
 145 0002 82B0     		sub	sp, sp, #8
 146              		.cfi_def_cfa_offset 16
 147 0004 00AF     		add	r7, sp, #0
 148              		.cfi_def_cfa_register 7
 149 0006 7860     		str	r0, [r7, #4]
 431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 150              		.loc 1 432 6
 151 0008 7B68     		ldr	r3, [r7, #4]
 152 000a 002B     		cmp	r3, #0
 153 000c 01D1     		bne	.L6
 433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 154              		.loc 1 434 12
 155 000e 0123     		movs	r3, #1
 156 0010 47E0     		b	.L7
 157              	.L6:
 435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 158              		.loc 1 444 12
 159 0012 7B68     		ldr	r3, [r7, #4]
 160 0014 93F83D30 		ldrb	r3, [r3, #61]
 161 0018 DBB2     		uxtb	r3, r3
 162              		.loc 1 444 6
 163 001a 002B     		cmp	r3, #0
 164 001c 06D1     		bne	.L8
 445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 165              		.loc 1 447 17
 166 001e 7B68     		ldr	r3, [r7, #4]
 167 0020 0022     		movs	r2, #0
 168 0022 83F83C20 		strb	r2, [r3, #60]
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 169              		.loc 1 461 5
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 12


 170 0026 7868     		ldr	r0, [r7, #4]
 171 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 172              	.L8:
 462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 173              		.loc 1 465 17
 174 002c 7B68     		ldr	r3, [r7, #4]
 175 002e 2422     		movs	r2, #36
 176 0030 83F83D20 		strb	r2, [r3, #61]
 466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 177              		.loc 1 468 3
 178 0034 7B68     		ldr	r3, [r7, #4]
 179 0036 1B68     		ldr	r3, [r3]
 180 0038 DA68     		ldr	r2, [r3, #12]
 181 003a 7B68     		ldr	r3, [r7, #4]
 182 003c 1B68     		ldr	r3, [r3]
 183 003e 22F40052 		bic	r2, r2, #8192
 184 0042 DA60     		str	r2, [r3, #12]
 469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 185              		.loc 1 471 3
 186 0044 7868     		ldr	r0, [r7, #4]
 187 0046 FFF7FEFF 		bl	UART_SetConfig
 472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 188              		.loc 1 476 3
 189 004a 7B68     		ldr	r3, [r7, #4]
 190 004c 1B68     		ldr	r3, [r3]
 191 004e 1A69     		ldr	r2, [r3, #16]
 192 0050 7B68     		ldr	r3, [r7, #4]
 193 0052 1B68     		ldr	r3, [r3]
 194 0054 22F49042 		bic	r2, r2, #18432
 195 0058 1A61     		str	r2, [r3, #16]
 477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 196              		.loc 1 477 3
 197 005a 7B68     		ldr	r3, [r7, #4]
 198 005c 1B68     		ldr	r3, [r3]
 199 005e 5A69     		ldr	r2, [r3, #20]
 200 0060 7B68     		ldr	r3, [r7, #4]
 201 0062 1B68     		ldr	r3, [r3]
 202 0064 22F02202 		bic	r2, r2, #34
 203 0068 5A61     		str	r2, [r3, #20]
 478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 204              		.loc 1 480 3
 205 006a 7B68     		ldr	r3, [r7, #4]
 206 006c 1B68     		ldr	r3, [r3]
 207 006e 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 13


 208 0070 7B68     		ldr	r3, [r7, #4]
 209 0072 1B68     		ldr	r3, [r3]
 210 0074 42F00802 		orr	r2, r2, #8
 211 0078 5A61     		str	r2, [r3, #20]
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 212              		.loc 1 483 3
 213 007a 7B68     		ldr	r3, [r7, #4]
 214 007c 1B68     		ldr	r3, [r3]
 215 007e DA68     		ldr	r2, [r3, #12]
 216 0080 7B68     		ldr	r3, [r7, #4]
 217 0082 1B68     		ldr	r3, [r3]
 218 0084 42F40052 		orr	r2, r2, #8192
 219 0088 DA60     		str	r2, [r3, #12]
 484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 220              		.loc 1 486 20
 221 008a 7B68     		ldr	r3, [r7, #4]
 222 008c 0022     		movs	r2, #0
 223 008e 1A64     		str	r2, [r3, #64]
 487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 224              		.loc 1 487 17
 225 0090 7B68     		ldr	r3, [r7, #4]
 226 0092 2022     		movs	r2, #32
 227 0094 83F83D20 		strb	r2, [r3, #61]
 488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 228              		.loc 1 488 18
 229 0098 7B68     		ldr	r3, [r7, #4]
 230 009a 2022     		movs	r2, #32
 231 009c 83F83E20 		strb	r2, [r3, #62]
 489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 232              		.loc 1 490 10
 233 00a0 0023     		movs	r3, #0
 234              	.L7:
 491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 235              		.loc 1 491 1
 236 00a2 1846     		mov	r0, r3
 237 00a4 0837     		adds	r7, r7, #8
 238              		.cfi_def_cfa_offset 8
 239 00a6 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 00a8 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE66:
 246              		.section	.text.HAL_LIN_Init,"ax",%progbits
 247              		.align	1
 248              		.global	HAL_LIN_Init
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	HAL_LIN_Init:
 254              	.LFB67:
 492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 14


 493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 255              		.loc 1 505 1
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 8
 258              		@ frame_needed = 1, uses_anonymous_args = 0
 259 0000 80B5     		push	{r7, lr}
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 7, -8
 262              		.cfi_offset 14, -4
 263 0002 82B0     		sub	sp, sp, #8
 264              		.cfi_def_cfa_offset 16
 265 0004 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 267 0006 7860     		str	r0, [r7, #4]
 268 0008 3960     		str	r1, [r7]
 506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 269              		.loc 1 507 6
 270 000a 7B68     		ldr	r3, [r7, #4]
 271 000c 002B     		cmp	r3, #0
 272 000e 01D1     		bne	.L10
 508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 273              		.loc 1 509 12
 274 0010 0123     		movs	r3, #1
 275 0012 57E0     		b	.L11
 276              	.L10:
 510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */
 513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 277              		.loc 1 522 12
 278 0014 7B68     		ldr	r3, [r7, #4]
 279 0016 93F83D30 		ldrb	r3, [r3, #61]
 280 001a DBB2     		uxtb	r3, r3
 281              		.loc 1 522 6
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 15


 282 001c 002B     		cmp	r3, #0
 283 001e 06D1     		bne	.L12
 523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 284              		.loc 1 525 17
 285 0020 7B68     		ldr	r3, [r7, #4]
 286 0022 0022     		movs	r2, #0
 287 0024 83F83C20 		strb	r2, [r3, #60]
 526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 288              		.loc 1 539 5
 289 0028 7868     		ldr	r0, [r7, #4]
 290 002a FFF7FEFF 		bl	HAL_UART_MspInit
 291              	.L12:
 540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 292              		.loc 1 543 17
 293 002e 7B68     		ldr	r3, [r7, #4]
 294 0030 2422     		movs	r2, #36
 295 0032 83F83D20 		strb	r2, [r3, #61]
 544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 296              		.loc 1 546 3
 297 0036 7B68     		ldr	r3, [r7, #4]
 298 0038 1B68     		ldr	r3, [r3]
 299 003a DA68     		ldr	r2, [r3, #12]
 300 003c 7B68     		ldr	r3, [r7, #4]
 301 003e 1B68     		ldr	r3, [r3]
 302 0040 22F40052 		bic	r2, r2, #8192
 303 0044 DA60     		str	r2, [r3, #12]
 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 304              		.loc 1 549 3
 305 0046 7868     		ldr	r0, [r7, #4]
 306 0048 FFF7FEFF 		bl	UART_SetConfig
 550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 16


 307              		.loc 1 554 3
 308 004c 7B68     		ldr	r3, [r7, #4]
 309 004e 1B68     		ldr	r3, [r3]
 310 0050 1A69     		ldr	r2, [r3, #16]
 311 0052 7B68     		ldr	r3, [r7, #4]
 312 0054 1B68     		ldr	r3, [r3]
 313 0056 22F40062 		bic	r2, r2, #2048
 314 005a 1A61     		str	r2, [r3, #16]
 555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 315              		.loc 1 555 3
 316 005c 7B68     		ldr	r3, [r7, #4]
 317 005e 1B68     		ldr	r3, [r3]
 318 0060 5A69     		ldr	r2, [r3, #20]
 319 0062 7B68     		ldr	r3, [r7, #4]
 320 0064 1B68     		ldr	r3, [r3]
 321 0066 22F02A02 		bic	r2, r2, #42
 322 006a 5A61     		str	r2, [r3, #20]
 556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 323              		.loc 1 558 3
 324 006c 7B68     		ldr	r3, [r7, #4]
 325 006e 1B68     		ldr	r3, [r3]
 326 0070 1A69     		ldr	r2, [r3, #16]
 327 0072 7B68     		ldr	r3, [r7, #4]
 328 0074 1B68     		ldr	r3, [r3]
 329 0076 42F48042 		orr	r2, r2, #16384
 330 007a 1A61     		str	r2, [r3, #16]
 559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 331              		.loc 1 561 3
 332 007c 7B68     		ldr	r3, [r7, #4]
 333 007e 1B68     		ldr	r3, [r3]
 334 0080 1A69     		ldr	r2, [r3, #16]
 335 0082 7B68     		ldr	r3, [r7, #4]
 336 0084 1B68     		ldr	r3, [r3]
 337 0086 22F02002 		bic	r2, r2, #32
 338 008a 1A61     		str	r2, [r3, #16]
 562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 339              		.loc 1 562 3
 340 008c 7B68     		ldr	r3, [r7, #4]
 341 008e 1B68     		ldr	r3, [r3]
 342 0090 1969     		ldr	r1, [r3, #16]
 343 0092 7B68     		ldr	r3, [r7, #4]
 344 0094 1B68     		ldr	r3, [r3]
 345 0096 3A68     		ldr	r2, [r7]
 346 0098 0A43     		orrs	r2, r2, r1
 347 009a 1A61     		str	r2, [r3, #16]
 563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 348              		.loc 1 565 3
 349 009c 7B68     		ldr	r3, [r7, #4]
 350 009e 1B68     		ldr	r3, [r3]
 351 00a0 DA68     		ldr	r2, [r3, #12]
 352 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 17


 353 00a4 1B68     		ldr	r3, [r3]
 354 00a6 42F40052 		orr	r2, r2, #8192
 355 00aa DA60     		str	r2, [r3, #12]
 566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 356              		.loc 1 568 20
 357 00ac 7B68     		ldr	r3, [r7, #4]
 358 00ae 0022     		movs	r2, #0
 359 00b0 1A64     		str	r2, [r3, #64]
 569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 360              		.loc 1 569 17
 361 00b2 7B68     		ldr	r3, [r7, #4]
 362 00b4 2022     		movs	r2, #32
 363 00b6 83F83D20 		strb	r2, [r3, #61]
 570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 364              		.loc 1 570 18
 365 00ba 7B68     		ldr	r3, [r7, #4]
 366 00bc 2022     		movs	r2, #32
 367 00be 83F83E20 		strb	r2, [r3, #62]
 571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 368              		.loc 1 572 10
 369 00c2 0023     		movs	r3, #0
 370              	.L11:
 573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 371              		.loc 1 573 1
 372 00c4 1846     		mov	r0, r3
 373 00c6 0837     		adds	r7, r7, #8
 374              		.cfi_def_cfa_offset 8
 375 00c8 BD46     		mov	sp, r7
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 00ca 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE67:
 382              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_MultiProcessor_Init
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	HAL_MultiProcessor_Init:
 390              	.LFB68:
 574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address USART address
 581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 18


 587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 391              		.loc 1 588 1
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 16
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395 0000 80B5     		push	{r7, lr}
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 399 0002 84B0     		sub	sp, sp, #16
 400              		.cfi_def_cfa_offset 24
 401 0004 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
 403 0006 F860     		str	r0, [r7, #12]
 404 0008 0B46     		mov	r3, r1
 405 000a 7A60     		str	r2, [r7, #4]
 406 000c FB72     		strb	r3, [r7, #11]
 589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 407              		.loc 1 590 6
 408 000e FB68     		ldr	r3, [r7, #12]
 409 0010 002B     		cmp	r3, #0
 410 0012 01D1     		bne	.L14
 591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 411              		.loc 1 592 12
 412 0014 0123     		movs	r3, #1
 413 0016 5FE0     		b	.L15
 414              	.L14:
 593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 415              		.loc 1 606 12
 416 0018 FB68     		ldr	r3, [r7, #12]
 417 001a 93F83D30 		ldrb	r3, [r3, #61]
 418 001e DBB2     		uxtb	r3, r3
 419              		.loc 1 606 6
 420 0020 002B     		cmp	r3, #0
 421 0022 06D1     		bne	.L16
 607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 422              		.loc 1 609 17
 423 0024 FB68     		ldr	r3, [r7, #12]
 424 0026 0022     		movs	r2, #0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 19


 425 0028 83F83C20 		strb	r2, [r3, #60]
 610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspInitCallback(huart);
 621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 426              		.loc 1 623 5
 427 002c F868     		ldr	r0, [r7, #12]
 428 002e FFF7FEFF 		bl	HAL_UART_MspInit
 429              	.L16:
 624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 430              		.loc 1 627 17
 431 0032 FB68     		ldr	r3, [r7, #12]
 432 0034 2422     		movs	r2, #36
 433 0036 83F83D20 		strb	r2, [r3, #61]
 628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 434              		.loc 1 630 3
 435 003a FB68     		ldr	r3, [r7, #12]
 436 003c 1B68     		ldr	r3, [r3]
 437 003e DA68     		ldr	r2, [r3, #12]
 438 0040 FB68     		ldr	r3, [r7, #12]
 439 0042 1B68     		ldr	r3, [r3]
 440 0044 22F40052 		bic	r2, r2, #8192
 441 0048 DA60     		str	r2, [r3, #12]
 631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 442              		.loc 1 633 3
 443 004a F868     		ldr	r0, [r7, #12]
 444 004c FFF7FEFF 		bl	UART_SetConfig
 634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 445              		.loc 1 638 3
 446 0050 FB68     		ldr	r3, [r7, #12]
 447 0052 1B68     		ldr	r3, [r3]
 448 0054 1A69     		ldr	r2, [r3, #16]
 449 0056 FB68     		ldr	r3, [r7, #12]
 450 0058 1B68     		ldr	r3, [r3]
 451 005a 22F49042 		bic	r2, r2, #18432
 452 005e 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 20


 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 453              		.loc 1 639 3
 454 0060 FB68     		ldr	r3, [r7, #12]
 455 0062 1B68     		ldr	r3, [r3]
 456 0064 5A69     		ldr	r2, [r3, #20]
 457 0066 FB68     		ldr	r3, [r7, #12]
 458 0068 1B68     		ldr	r3, [r3]
 459 006a 22F02A02 		bic	r2, r2, #42
 460 006e 5A61     		str	r2, [r3, #20]
 640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 461              		.loc 1 642 3
 462 0070 FB68     		ldr	r3, [r7, #12]
 463 0072 1B68     		ldr	r3, [r3]
 464 0074 1A69     		ldr	r2, [r3, #16]
 465 0076 FB68     		ldr	r3, [r7, #12]
 466 0078 1B68     		ldr	r3, [r3]
 467 007a 22F00F02 		bic	r2, r2, #15
 468 007e 1A61     		str	r2, [r3, #16]
 643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 469              		.loc 1 643 3
 470 0080 FB68     		ldr	r3, [r7, #12]
 471 0082 1B68     		ldr	r3, [r3]
 472 0084 1969     		ldr	r1, [r3, #16]
 473 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 474 0088 FB68     		ldr	r3, [r7, #12]
 475 008a 1B68     		ldr	r3, [r3]
 476 008c 0A43     		orrs	r2, r2, r1
 477 008e 1A61     		str	r2, [r3, #16]
 644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 478              		.loc 1 646 3
 479 0090 FB68     		ldr	r3, [r7, #12]
 480 0092 1B68     		ldr	r3, [r3]
 481 0094 DA68     		ldr	r2, [r3, #12]
 482 0096 FB68     		ldr	r3, [r7, #12]
 483 0098 1B68     		ldr	r3, [r3]
 484 009a 22F40062 		bic	r2, r2, #2048
 485 009e DA60     		str	r2, [r3, #12]
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 486              		.loc 1 647 3
 487 00a0 FB68     		ldr	r3, [r7, #12]
 488 00a2 1B68     		ldr	r3, [r3]
 489 00a4 D968     		ldr	r1, [r3, #12]
 490 00a6 FB68     		ldr	r3, [r7, #12]
 491 00a8 1B68     		ldr	r3, [r3]
 492 00aa 7A68     		ldr	r2, [r7, #4]
 493 00ac 0A43     		orrs	r2, r2, r1
 494 00ae DA60     		str	r2, [r3, #12]
 648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 495              		.loc 1 650 3
 496 00b0 FB68     		ldr	r3, [r7, #12]
 497 00b2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 21


 498 00b4 DA68     		ldr	r2, [r3, #12]
 499 00b6 FB68     		ldr	r3, [r7, #12]
 500 00b8 1B68     		ldr	r3, [r3]
 501 00ba 42F40052 		orr	r2, r2, #8192
 502 00be DA60     		str	r2, [r3, #12]
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 503              		.loc 1 653 20
 504 00c0 FB68     		ldr	r3, [r7, #12]
 505 00c2 0022     		movs	r2, #0
 506 00c4 1A64     		str	r2, [r3, #64]
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 507              		.loc 1 654 17
 508 00c6 FB68     		ldr	r3, [r7, #12]
 509 00c8 2022     		movs	r2, #32
 510 00ca 83F83D20 		strb	r2, [r3, #61]
 655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 511              		.loc 1 655 18
 512 00ce FB68     		ldr	r3, [r7, #12]
 513 00d0 2022     		movs	r2, #32
 514 00d2 83F83E20 		strb	r2, [r3, #62]
 656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 515              		.loc 1 657 10
 516 00d6 0023     		movs	r3, #0
 517              	.L15:
 658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 518              		.loc 1 658 1
 519 00d8 1846     		mov	r0, r3
 520 00da 1037     		adds	r7, r7, #16
 521              		.cfi_def_cfa_offset 8
 522 00dc BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 00de 80BD     		pop	{r7, pc}
 526              		.cfi_endproc
 527              	.LFE68:
 529              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 530              		.align	1
 531              		.global	HAL_UART_DeInit
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 536              	HAL_UART_DeInit:
 537              	.LFB69:
 659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 538              		.loc 1 667 1
 539              		.cfi_startproc
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 22


 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 0002 82B0     		sub	sp, sp, #8
 547              		.cfi_def_cfa_offset 16
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 550 0006 7860     		str	r0, [r7, #4]
 668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart == NULL)
 551              		.loc 1 669 6
 552 0008 7B68     		ldr	r3, [r7, #4]
 553 000a 002B     		cmp	r3, #0
 554 000c 01D1     		bne	.L18
 670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 555              		.loc 1 671 12
 556 000e 0123     		movs	r3, #1
 557 0010 21E0     		b	.L19
 558              	.L18:
 672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 559              		.loc 1 677 17
 560 0012 7B68     		ldr	r3, [r7, #4]
 561 0014 2422     		movs	r2, #36
 562 0016 83F83D20 		strb	r2, [r3, #61]
 678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the Peripheral */
 680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 563              		.loc 1 680 3
 564 001a 7B68     		ldr	r3, [r7, #4]
 565 001c 1B68     		ldr	r3, [r3]
 566 001e DA68     		ldr	r2, [r3, #12]
 567 0020 7B68     		ldr	r3, [r7, #4]
 568 0022 1B68     		ldr	r3, [r3]
 569 0024 22F40052 		bic	r2, r2, #8192
 570 0028 DA60     		str	r2, [r3, #12]
 681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
 690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 571              		.loc 1 691 3
 572 002a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 23


 573 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 574              		.loc 1 694 20
 575 0030 7B68     		ldr	r3, [r7, #4]
 576 0032 0022     		movs	r2, #0
 577 0034 1A64     		str	r2, [r3, #64]
 695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 578              		.loc 1 695 17
 579 0036 7B68     		ldr	r3, [r7, #4]
 580 0038 0022     		movs	r2, #0
 581 003a 83F83D20 		strb	r2, [r3, #61]
 696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 582              		.loc 1 696 18
 583 003e 7B68     		ldr	r3, [r7, #4]
 584 0040 0022     		movs	r2, #0
 585 0042 83F83E20 		strb	r2, [r3, #62]
 697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 586              		.loc 1 697 24
 587 0046 7B68     		ldr	r3, [r7, #4]
 588 0048 0022     		movs	r2, #0
 589 004a 1A63     		str	r2, [r3, #48]
 698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 590              		.loc 1 700 3
 591 004c 7B68     		ldr	r3, [r7, #4]
 592 004e 0022     		movs	r2, #0
 593 0050 83F83C20 		strb	r2, [r3, #60]
 701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 594              		.loc 1 702 10
 595 0054 0023     		movs	r3, #0
 596              	.L19:
 703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 597              		.loc 1 703 1
 598 0056 1846     		mov	r0, r3
 599 0058 0837     		adds	r7, r7, #8
 600              		.cfi_def_cfa_offset 8
 601 005a BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 005c 80BD     		pop	{r7, pc}
 605              		.cfi_endproc
 606              	.LFE69:
 608              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 609              		.align	1
 610              		.weak	HAL_UART_MspInit
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 615              	HAL_UART_MspInit:
 616              	.LFB70:
 704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 24


 707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 617              		.loc 1 712 1
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 8
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 80B4     		push	{r7}
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
 713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 630              		.loc 1 718 1
 631 0008 00BF     		nop
 632 000a 0C37     		adds	r7, r7, #12
 633              		.cfi_def_cfa_offset 4
 634 000c BD46     		mov	sp, r7
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 000e 80BC     		pop	{r7}
 638              		.cfi_restore 7
 639              		.cfi_def_cfa_offset 0
 640 0010 7047     		bx	lr
 641              		.cfi_endproc
 642              	.LFE70:
 644              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 645              		.align	1
 646              		.weak	HAL_UART_MspDeInit
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	HAL_UART_MspDeInit:
 652              	.LFB71:
 719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 653              		.loc 1 727 1
 654              		.cfi_startproc
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 25


 655              		@ args = 0, pretend = 0, frame = 8
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 83B0     		sub	sp, sp, #12
 662              		.cfi_def_cfa_offset 16
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 666              		.loc 1 733 1
 667 0008 00BF     		nop
 668 000a 0C37     		adds	r7, r7, #12
 669              		.cfi_def_cfa_offset 4
 670 000c BD46     		mov	sp, r7
 671              		.cfi_def_cfa_register 13
 672              		@ sp needed
 673 000e 80BC     		pop	{r7}
 674              		.cfi_restore 7
 675              		.cfi_def_cfa_offset 0
 676 0010 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE71:
 680              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 681              		.align	1
 682              		.global	HAL_UART_Transmit
 683              		.syntax unified
 684              		.thumb
 685              		.thumb_func
 687              	HAL_UART_Transmit:
 688              	.LFB72:
 734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Callback
 738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 26


 753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 27


 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
 853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart uart handle
 862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 28


 867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 29


 924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     switch (CallbackID)
 939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       default :
 949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Update the error code */
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Return error status */
 953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status =  HAL_ERROR;
 954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         break;
 955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Update the error code */
 960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Return error status */
 963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
 964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
 967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
 970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
 976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 30


 981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (pCallback == NULL)
 984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
 991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
1002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
1008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
1009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart     Uart handle
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
1018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process locked */
1021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  HAL_ERROR;
1032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Release Lock */
1035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return status;
1037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 31


1038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
1048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
1050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  ===============================================================================
1051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
1053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
1055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            after finishing transfer.
1058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            using DMA mode.
1063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 32


1095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Errors are handled as follows :
1108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 689              		.loc 1 1137 1
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 32
 692              		@ frame_needed = 1, uses_anonymous_args = 0
 693 0000 80B5     		push	{r7, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 8AB0     		sub	sp, sp, #40
 698              		.cfi_def_cfa_offset 48
 699 0004 02AF     		add	r7, sp, #8
 700              		.cfi_def_cfa 7, 40
 701 0006 F860     		str	r0, [r7, #12]
 702 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 33


 703 000a 3B60     		str	r3, [r7]
 704 000c 1346     		mov	r3, r2	@ movhi
 705 000e FB80     		strh	r3, [r7, #6]	@ movhi
1138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 706              		.loc 1 1140 12
 707 0010 0023     		movs	r3, #0
 708 0012 7B61     		str	r3, [r7, #20]
1141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 709              		.loc 1 1143 12
 710 0014 FB68     		ldr	r3, [r7, #12]
 711 0016 93F83D30 		ldrb	r3, [r3, #61]
 712 001a DBB2     		uxtb	r3, r3
 713              		.loc 1 1143 6
 714 001c 202B     		cmp	r3, #32
 715 001e 7CD1     		bne	.L23
1144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 716              		.loc 1 1145 8
 717 0020 BB68     		ldr	r3, [r7, #8]
 718 0022 002B     		cmp	r3, #0
 719 0024 02D0     		beq	.L24
 720              		.loc 1 1145 25 discriminator 1
 721 0026 FB88     		ldrh	r3, [r7, #6]
 722 0028 002B     		cmp	r3, #0
 723 002a 01D1     		bne	.L25
 724              	.L24:
1146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 725              		.loc 1 1147 15
 726 002c 0123     		movs	r3, #1
 727 002e 75E0     		b	.L26
 728              	.L25:
1148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 729              		.loc 1 1151 5
 730 0030 FB68     		ldr	r3, [r7, #12]
 731 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 732 0036 012B     		cmp	r3, #1
 733 0038 01D1     		bne	.L27
 734              		.loc 1 1151 5 is_stmt 0 discriminator 1
 735 003a 0223     		movs	r3, #2
 736 003c 6EE0     		b	.L26
 737              	.L27:
 738              		.loc 1 1151 5 discriminator 2
 739 003e FB68     		ldr	r3, [r7, #12]
 740 0040 0122     		movs	r2, #1
 741 0042 83F83C20 		strb	r2, [r3, #60]
1152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 742              		.loc 1 1153 22 is_stmt 1 discriminator 2
 743 0046 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 34


 744 0048 0022     		movs	r2, #0
 745 004a 1A64     		str	r2, [r3, #64]
1154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 746              		.loc 1 1154 19 discriminator 2
 747 004c FB68     		ldr	r3, [r7, #12]
 748 004e 2122     		movs	r2, #33
 749 0050 83F83D20 		strb	r2, [r3, #61]
1155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 750              		.loc 1 1157 17 discriminator 2
 751 0054 FFF7FEFF 		bl	HAL_GetTick
 752 0058 7861     		str	r0, [r7, #20]
1158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 753              		.loc 1 1159 23 discriminator 2
 754 005a FB68     		ldr	r3, [r7, #12]
 755 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 756 005e 9A84     		strh	r2, [r3, #36]	@ movhi
1160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 757              		.loc 1 1160 24 discriminator 2
 758 0060 FB68     		ldr	r3, [r7, #12]
 759 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 760 0064 DA84     		strh	r2, [r3, #38]	@ movhi
1161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 761              		.loc 1 1163 21 discriminator 2
 762 0066 FB68     		ldr	r3, [r7, #12]
 763 0068 9B68     		ldr	r3, [r3, #8]
 764              		.loc 1 1163 8 discriminator 2
 765 006a B3F5805F 		cmp	r3, #4096
 766 006e 08D1     		bne	.L28
 767              		.loc 1 1163 71 discriminator 1
 768 0070 FB68     		ldr	r3, [r7, #12]
 769 0072 1B69     		ldr	r3, [r3, #16]
 770              		.loc 1 1163 56 discriminator 1
 771 0074 002B     		cmp	r3, #0
 772 0076 04D1     		bne	.L28
1164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 773              		.loc 1 1165 19
 774 0078 0023     		movs	r3, #0
 775 007a FB61     		str	r3, [r7, #28]
1166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 776              		.loc 1 1166 19
 777 007c BB68     		ldr	r3, [r7, #8]
 778 007e BB61     		str	r3, [r7, #24]
 779 0080 03E0     		b	.L29
 780              	.L28:
1167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 781              		.loc 1 1170 19
 782 0082 BB68     		ldr	r3, [r7, #8]
 783 0084 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 35


1171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 784              		.loc 1 1171 19
 785 0086 0023     		movs	r3, #0
 786 0088 BB61     		str	r3, [r7, #24]
 787              	.L29:
1172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 788              		.loc 1 1175 5
 789 008a FB68     		ldr	r3, [r7, #12]
 790 008c 0022     		movs	r2, #0
 791 008e 83F83C20 		strb	r2, [r3, #60]
1176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 792              		.loc 1 1177 11
 793 0092 2AE0     		b	.L30
 794              	.L34:
1178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 795              		.loc 1 1179 11
 796 0094 3B68     		ldr	r3, [r7]
 797 0096 0093     		str	r3, [sp]
 798 0098 7B69     		ldr	r3, [r7, #20]
 799 009a 0022     		movs	r2, #0
 800 009c 8021     		movs	r1, #128
 801 009e F868     		ldr	r0, [r7, #12]
 802 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 803 00a4 0346     		mov	r3, r0
 804              		.loc 1 1179 10
 805 00a6 002B     		cmp	r3, #0
 806 00a8 01D0     		beq	.L31
1180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 807              		.loc 1 1181 16
 808 00aa 0323     		movs	r3, #3
 809 00ac 36E0     		b	.L26
 810              	.L31:
1182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
 811              		.loc 1 1183 10
 812 00ae FB69     		ldr	r3, [r7, #28]
 813 00b0 002B     		cmp	r3, #0
 814 00b2 0BD1     		bne	.L32
1184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 815              		.loc 1 1185 42
 816 00b4 BB69     		ldr	r3, [r7, #24]
 817 00b6 1B88     		ldrh	r3, [r3]
 818              		.loc 1 1185 31
 819 00b8 1A46     		mov	r2, r3
 820              		.loc 1 1185 14
 821 00ba FB68     		ldr	r3, [r7, #12]
 822 00bc 1B68     		ldr	r3, [r3]
 823              		.loc 1 1185 31
 824 00be C2F30802 		ubfx	r2, r2, #0, #9
 825              		.loc 1 1185 29
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 36


 826 00c2 5A60     		str	r2, [r3, #4]
1186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 827              		.loc 1 1186 20
 828 00c4 BB69     		ldr	r3, [r7, #24]
 829 00c6 0233     		adds	r3, r3, #2
 830 00c8 BB61     		str	r3, [r7, #24]
 831 00ca 07E0     		b	.L33
 832              	.L32:
1187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 833              		.loc 1 1190 41
 834 00cc FB69     		ldr	r3, [r7, #28]
 835 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 836              		.loc 1 1190 14
 837 00d0 FB68     		ldr	r3, [r7, #12]
 838 00d2 1B68     		ldr	r3, [r3]
 839              		.loc 1 1190 29
 840 00d4 5A60     		str	r2, [r3, #4]
1191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
 841              		.loc 1 1191 19
 842 00d6 FB69     		ldr	r3, [r7, #28]
 843 00d8 0133     		adds	r3, r3, #1
 844 00da FB61     		str	r3, [r7, #28]
 845              	.L33:
1192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 846              		.loc 1 1193 12
 847 00dc FB68     		ldr	r3, [r7, #12]
 848 00de DB8C     		ldrh	r3, [r3, #38]	@ movhi
 849 00e0 9BB2     		uxth	r3, r3
 850              		.loc 1 1193 25
 851 00e2 013B     		subs	r3, r3, #1
 852 00e4 9AB2     		uxth	r2, r3
 853 00e6 FB68     		ldr	r3, [r7, #12]
 854 00e8 DA84     		strh	r2, [r3, #38]	@ movhi
 855              	.L30:
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 856              		.loc 1 1177 17
 857 00ea FB68     		ldr	r3, [r7, #12]
 858 00ec DB8C     		ldrh	r3, [r3, #38]	@ movhi
 859 00ee 9BB2     		uxth	r3, r3
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 860              		.loc 1 1177 11
 861 00f0 002B     		cmp	r3, #0
 862 00f2 CFD1     		bne	.L34
1194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 863              		.loc 1 1196 9
 864 00f4 3B68     		ldr	r3, [r7]
 865 00f6 0093     		str	r3, [sp]
 866 00f8 7B69     		ldr	r3, [r7, #20]
 867 00fa 0022     		movs	r2, #0
 868 00fc 4021     		movs	r1, #64
 869 00fe F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 37


 870 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 871 0104 0346     		mov	r3, r0
 872              		.loc 1 1196 8
 873 0106 002B     		cmp	r3, #0
 874 0108 01D0     		beq	.L35
1197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 875              		.loc 1 1198 14
 876 010a 0323     		movs	r3, #3
 877 010c 06E0     		b	.L26
 878              	.L35:
1199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 879              		.loc 1 1202 19
 880 010e FB68     		ldr	r3, [r7, #12]
 881 0110 2022     		movs	r2, #32
 882 0112 83F83D20 		strb	r2, [r3, #61]
1203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 883              		.loc 1 1204 12
 884 0116 0023     		movs	r3, #0
 885 0118 00E0     		b	.L26
 886              	.L23:
1205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 887              		.loc 1 1208 12
 888 011a 0223     		movs	r3, #2
 889              	.L26:
1209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 890              		.loc 1 1210 1
 891 011c 1846     		mov	r0, r3
 892 011e 2037     		adds	r7, r7, #32
 893              		.cfi_def_cfa_offset 8
 894 0120 BD46     		mov	sp, r7
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 0122 80BD     		pop	{r7, pc}
 898              		.cfi_endproc
 899              	.LFE72:
 901              		.section	.text.HAL_UART_Receive,"ax",%progbits
 902              		.align	1
 903              		.global	HAL_UART_Receive
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	HAL_UART_Receive:
 909              	.LFB73:
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 38


1216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
1222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 910              		.loc 1 1225 1
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 32
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914 0000 80B5     		push	{r7, lr}
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 7, -8
 917              		.cfi_offset 14, -4
 918 0002 8AB0     		sub	sp, sp, #40
 919              		.cfi_def_cfa_offset 48
 920 0004 02AF     		add	r7, sp, #8
 921              		.cfi_def_cfa 7, 40
 922 0006 F860     		str	r0, [r7, #12]
 923 0008 B960     		str	r1, [r7, #8]
 924 000a 3B60     		str	r3, [r7]
 925 000c 1346     		mov	r3, r2	@ movhi
 926 000e FB80     		strh	r3, [r7, #6]	@ movhi
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 927              		.loc 1 1228 12
 928 0010 0023     		movs	r3, #0
 929 0012 7B61     		str	r3, [r7, #20]
1229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 930              		.loc 1 1231 12
 931 0014 FB68     		ldr	r3, [r7, #12]
 932 0016 93F83E30 		ldrb	r3, [r3, #62]
 933 001a DBB2     		uxtb	r3, r3
 934              		.loc 1 1231 6
 935 001c 202B     		cmp	r3, #32
 936 001e 40F08C80 		bne	.L37
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 937              		.loc 1 1233 8
 938 0022 BB68     		ldr	r3, [r7, #8]
 939 0024 002B     		cmp	r3, #0
 940 0026 02D0     		beq	.L38
 941              		.loc 1 1233 25 discriminator 1
 942 0028 FB88     		ldrh	r3, [r7, #6]
 943 002a 002B     		cmp	r3, #0
 944 002c 01D1     		bne	.L39
 945              	.L38:
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 946              		.loc 1 1235 15
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 39


 947 002e 0123     		movs	r3, #1
 948 0030 84E0     		b	.L40
 949              	.L39:
1236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 950              		.loc 1 1239 5
 951 0032 FB68     		ldr	r3, [r7, #12]
 952 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 953 0038 012B     		cmp	r3, #1
 954 003a 01D1     		bne	.L41
 955              		.loc 1 1239 5 is_stmt 0 discriminator 1
 956 003c 0223     		movs	r3, #2
 957 003e 7DE0     		b	.L40
 958              	.L41:
 959              		.loc 1 1239 5 discriminator 2
 960 0040 FB68     		ldr	r3, [r7, #12]
 961 0042 0122     		movs	r2, #1
 962 0044 83F83C20 		strb	r2, [r3, #60]
1240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 963              		.loc 1 1241 22 is_stmt 1 discriminator 2
 964 0048 FB68     		ldr	r3, [r7, #12]
 965 004a 0022     		movs	r2, #0
 966 004c 1A64     		str	r2, [r3, #64]
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 967              		.loc 1 1242 20 discriminator 2
 968 004e FB68     		ldr	r3, [r7, #12]
 969 0050 2222     		movs	r2, #34
 970 0052 83F83E20 		strb	r2, [r3, #62]
1243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 971              		.loc 1 1243 26 discriminator 2
 972 0056 FB68     		ldr	r3, [r7, #12]
 973 0058 0022     		movs	r2, #0
 974 005a 1A63     		str	r2, [r3, #48]
1244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 975              		.loc 1 1246 17 discriminator 2
 976 005c FFF7FEFF 		bl	HAL_GetTick
 977 0060 7861     		str	r0, [r7, #20]
1247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 978              		.loc 1 1248 23 discriminator 2
 979 0062 FB68     		ldr	r3, [r7, #12]
 980 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 981 0066 9A85     		strh	r2, [r3, #44]	@ movhi
1249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 982              		.loc 1 1249 24 discriminator 2
 983 0068 FB68     		ldr	r3, [r7, #12]
 984 006a FA88     		ldrh	r2, [r7, #6]	@ movhi
 985 006c DA85     		strh	r2, [r3, #46]	@ movhi
1250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 986              		.loc 1 1252 21 discriminator 2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 40


 987 006e FB68     		ldr	r3, [r7, #12]
 988 0070 9B68     		ldr	r3, [r3, #8]
 989              		.loc 1 1252 8 discriminator 2
 990 0072 B3F5805F 		cmp	r3, #4096
 991 0076 08D1     		bne	.L42
 992              		.loc 1 1252 71 discriminator 1
 993 0078 FB68     		ldr	r3, [r7, #12]
 994 007a 1B69     		ldr	r3, [r3, #16]
 995              		.loc 1 1252 56 discriminator 1
 996 007c 002B     		cmp	r3, #0
 997 007e 04D1     		bne	.L42
1253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 998              		.loc 1 1254 19
 999 0080 0023     		movs	r3, #0
 1000 0082 FB61     		str	r3, [r7, #28]
1255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1001              		.loc 1 1255 19
 1002 0084 BB68     		ldr	r3, [r7, #8]
 1003 0086 BB61     		str	r3, [r7, #24]
 1004 0088 03E0     		b	.L43
 1005              	.L42:
1256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 1006              		.loc 1 1259 19
 1007 008a BB68     		ldr	r3, [r7, #8]
 1008 008c FB61     		str	r3, [r7, #28]
1260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 1009              		.loc 1 1260 19
 1010 008e 0023     		movs	r3, #0
 1011 0090 BB61     		str	r3, [r7, #24]
 1012              	.L43:
1261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1013              		.loc 1 1264 5
 1014 0092 FB68     		ldr	r3, [r7, #12]
 1015 0094 0022     		movs	r2, #0
 1016 0096 83F83C20 		strb	r2, [r3, #60]
1265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
1267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1017              		.loc 1 1267 11
 1018 009a 43E0     		b	.L44
 1019              	.L51:
1268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1020              		.loc 1 1269 11
 1021 009c 3B68     		ldr	r3, [r7]
 1022 009e 0093     		str	r3, [sp]
 1023 00a0 7B69     		ldr	r3, [r7, #20]
 1024 00a2 0022     		movs	r2, #0
 1025 00a4 2021     		movs	r1, #32
 1026 00a6 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 41


 1027 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1028 00ac 0346     		mov	r3, r0
 1029              		.loc 1 1269 10
 1030 00ae 002B     		cmp	r3, #0
 1031 00b0 01D0     		beq	.L45
1270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 1032              		.loc 1 1271 16
 1033 00b2 0323     		movs	r3, #3
 1034 00b4 42E0     		b	.L40
 1035              	.L45:
1272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (pdata8bits == NULL)
 1036              		.loc 1 1273 10
 1037 00b6 FB69     		ldr	r3, [r7, #28]
 1038 00b8 002B     		cmp	r3, #0
 1039 00ba 0CD1     		bne	.L46
1274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 1040              		.loc 1 1275 40
 1041 00bc FB68     		ldr	r3, [r7, #12]
 1042 00be 1B68     		ldr	r3, [r3]
 1043              		.loc 1 1275 50
 1044 00c0 5B68     		ldr	r3, [r3, #4]
 1045              		.loc 1 1275 24
 1046 00c2 9BB2     		uxth	r3, r3
 1047 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1048 00c8 9AB2     		uxth	r2, r3
 1049              		.loc 1 1275 22
 1050 00ca BB69     		ldr	r3, [r7, #24]
 1051 00cc 1A80     		strh	r2, [r3]	@ movhi
1276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata16bits++;
 1052              		.loc 1 1276 20
 1053 00ce BB69     		ldr	r3, [r7, #24]
 1054 00d0 0233     		adds	r3, r3, #2
 1055 00d2 BB61     		str	r3, [r7, #24]
 1056 00d4 1FE0     		b	.L47
 1057              	.L46:
1277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1058              		.loc 1 1280 25
 1059 00d6 FB68     		ldr	r3, [r7, #12]
 1060 00d8 9B68     		ldr	r3, [r3, #8]
 1061              		.loc 1 1280 12
 1062 00da B3F5805F 		cmp	r3, #4096
 1063 00de 07D0     		beq	.L48
 1064              		.loc 1 1280 76 discriminator 1
 1065 00e0 FB68     		ldr	r3, [r7, #12]
 1066 00e2 9B68     		ldr	r3, [r3, #8]
 1067              		.loc 1 1280 60 discriminator 1
 1068 00e4 002B     		cmp	r3, #0
 1069 00e6 0AD1     		bne	.L49
 1070              		.loc 1 1280 126 discriminator 2
 1071 00e8 FB68     		ldr	r3, [r7, #12]
 1072 00ea 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 42


 1073              		.loc 1 1280 111 discriminator 2
 1074 00ec 002B     		cmp	r3, #0
 1075 00ee 06D1     		bne	.L49
 1076              	.L48:
1281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1077              		.loc 1 1282 40
 1078 00f0 FB68     		ldr	r3, [r7, #12]
 1079 00f2 1B68     		ldr	r3, [r3]
 1080              		.loc 1 1282 50
 1081 00f4 5B68     		ldr	r3, [r3, #4]
 1082              		.loc 1 1282 25
 1083 00f6 DAB2     		uxtb	r2, r3
 1084              		.loc 1 1282 23
 1085 00f8 FB69     		ldr	r3, [r7, #28]
 1086 00fa 1A70     		strb	r2, [r3]
 1087 00fc 08E0     		b	.L50
 1088              	.L49:
1283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1089              		.loc 1 1286 40
 1090 00fe FB68     		ldr	r3, [r7, #12]
 1091 0100 1B68     		ldr	r3, [r3]
 1092              		.loc 1 1286 50
 1093 0102 5B68     		ldr	r3, [r3, #4]
 1094              		.loc 1 1286 25
 1095 0104 DBB2     		uxtb	r3, r3
 1096 0106 03F07F03 		and	r3, r3, #127
 1097 010a DAB2     		uxtb	r2, r3
 1098              		.loc 1 1286 23
 1099 010c FB69     		ldr	r3, [r7, #28]
 1100 010e 1A70     		strb	r2, [r3]
 1101              	.L50:
1287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         pdata8bits++;
 1102              		.loc 1 1288 19
 1103 0110 FB69     		ldr	r3, [r7, #28]
 1104 0112 0133     		adds	r3, r3, #1
 1105 0114 FB61     		str	r3, [r7, #28]
 1106              	.L47:
1289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 1107              		.loc 1 1290 12
 1108 0116 FB68     		ldr	r3, [r7, #12]
 1109 0118 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1110 011a 9BB2     		uxth	r3, r3
 1111              		.loc 1 1290 25
 1112 011c 013B     		subs	r3, r3, #1
 1113 011e 9AB2     		uxth	r2, r3
 1114 0120 FB68     		ldr	r3, [r7, #12]
 1115 0122 DA85     		strh	r2, [r3, #46]	@ movhi
 1116              	.L44:
1267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1117              		.loc 1 1267 17
 1118 0124 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 43


 1119 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1120 0128 9BB2     		uxth	r3, r3
1267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1121              		.loc 1 1267 11
 1122 012a 002B     		cmp	r3, #0
 1123 012c B6D1     		bne	.L51
1291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1124              		.loc 1 1294 20
 1125 012e FB68     		ldr	r3, [r7, #12]
 1126 0130 2022     		movs	r2, #32
 1127 0132 83F83E20 		strb	r2, [r3, #62]
1295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1128              		.loc 1 1296 12
 1129 0136 0023     		movs	r3, #0
 1130 0138 00E0     		b	.L40
 1131              	.L37:
1297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1132              		.loc 1 1300 12
 1133 013a 0223     		movs	r3, #2
 1134              	.L40:
1301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1135              		.loc 1 1302 1
 1136 013c 1846     		mov	r0, r3
 1137 013e 2037     		adds	r7, r7, #32
 1138              		.cfi_def_cfa_offset 8
 1139 0140 BD46     		mov	sp, r7
 1140              		.cfi_def_cfa_register 13
 1141              		@ sp needed
 1142 0142 80BD     		pop	{r7, pc}
 1143              		.cfi_endproc
 1144              	.LFE73:
 1146              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1147              		.align	1
 1148              		.global	HAL_UART_Transmit_IT
 1149              		.syntax unified
 1150              		.thumb
 1151              		.thumb_func
 1153              	HAL_UART_Transmit_IT:
 1154              	.LFB74:
1303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 44


1313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1155              		.loc 1 1316 1
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159              		@ link register save eliminated.
 1160 0000 80B4     		push	{r7}
 1161              		.cfi_def_cfa_offset 4
 1162              		.cfi_offset 7, -4
 1163 0002 85B0     		sub	sp, sp, #20
 1164              		.cfi_def_cfa_offset 24
 1165 0004 00AF     		add	r7, sp, #0
 1166              		.cfi_def_cfa_register 7
 1167 0006 F860     		str	r0, [r7, #12]
 1168 0008 B960     		str	r1, [r7, #8]
 1169 000a 1346     		mov	r3, r2
 1170 000c FB80     		strh	r3, [r7, #6]	@ movhi
1317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1171              		.loc 1 1318 12
 1172 000e FB68     		ldr	r3, [r7, #12]
 1173 0010 93F83D30 		ldrb	r3, [r3, #61]
 1174 0014 DBB2     		uxtb	r3, r3
 1175              		.loc 1 1318 6
 1176 0016 202B     		cmp	r3, #32
 1177 0018 30D1     		bne	.L53
1319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1178              		.loc 1 1320 8
 1179 001a BB68     		ldr	r3, [r7, #8]
 1180 001c 002B     		cmp	r3, #0
 1181 001e 02D0     		beq	.L54
 1182              		.loc 1 1320 25 discriminator 1
 1183 0020 FB88     		ldrh	r3, [r7, #6]
 1184 0022 002B     		cmp	r3, #0
 1185 0024 01D1     		bne	.L55
 1186              	.L54:
1321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1187              		.loc 1 1322 14
 1188 0026 0123     		movs	r3, #1
 1189 0028 29E0     		b	.L56
 1190              	.L55:
1323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1191              		.loc 1 1326 5
 1192 002a FB68     		ldr	r3, [r7, #12]
 1193 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1194 0030 012B     		cmp	r3, #1
 1195 0032 01D1     		bne	.L57
 1196              		.loc 1 1326 5 is_stmt 0 discriminator 1
 1197 0034 0223     		movs	r3, #2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 45


 1198 0036 22E0     		b	.L56
 1199              	.L57:
 1200              		.loc 1 1326 5 discriminator 2
 1201 0038 FB68     		ldr	r3, [r7, #12]
 1202 003a 0122     		movs	r2, #1
 1203 003c 83F83C20 		strb	r2, [r3, #60]
1327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1204              		.loc 1 1328 23 is_stmt 1 discriminator 2
 1205 0040 FB68     		ldr	r3, [r7, #12]
 1206 0042 BA68     		ldr	r2, [r7, #8]
 1207 0044 1A62     		str	r2, [r3, #32]
1329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1208              		.loc 1 1329 23 discriminator 2
 1209 0046 FB68     		ldr	r3, [r7, #12]
 1210 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1211 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1212              		.loc 1 1330 24 discriminator 2
 1213 004c FB68     		ldr	r3, [r7, #12]
 1214 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1215 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1216              		.loc 1 1332 22 discriminator 2
 1217 0052 FB68     		ldr	r3, [r7, #12]
 1218 0054 0022     		movs	r2, #0
 1219 0056 1A64     		str	r2, [r3, #64]
1333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1220              		.loc 1 1333 19 discriminator 2
 1221 0058 FB68     		ldr	r3, [r7, #12]
 1222 005a 2122     		movs	r2, #33
 1223 005c 83F83D20 		strb	r2, [r3, #61]
1334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1224              		.loc 1 1336 5 discriminator 2
 1225 0060 FB68     		ldr	r3, [r7, #12]
 1226 0062 0022     		movs	r2, #0
 1227 0064 83F83C20 		strb	r2, [r3, #60]
1337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1228              		.loc 1 1339 5 discriminator 2
 1229 0068 FB68     		ldr	r3, [r7, #12]
 1230 006a 1B68     		ldr	r3, [r3]
 1231 006c DA68     		ldr	r2, [r3, #12]
 1232 006e FB68     		ldr	r3, [r7, #12]
 1233 0070 1B68     		ldr	r3, [r3]
 1234 0072 42F08002 		orr	r2, r2, #128
 1235 0076 DA60     		str	r2, [r3, #12]
1340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1236              		.loc 1 1341 12 discriminator 2
 1237 0078 0023     		movs	r3, #0
 1238 007a 00E0     		b	.L56
 1239              	.L53:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 46


1342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1240              		.loc 1 1345 12
 1241 007c 0223     		movs	r3, #2
 1242              	.L56:
1346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1243              		.loc 1 1347 1
 1244 007e 1846     		mov	r0, r3
 1245 0080 1437     		adds	r7, r7, #20
 1246              		.cfi_def_cfa_offset 4
 1247 0082 BD46     		mov	sp, r7
 1248              		.cfi_def_cfa_register 13
 1249              		@ sp needed
 1250 0084 80BC     		pop	{r7}
 1251              		.cfi_restore 7
 1252              		.cfi_def_cfa_offset 0
 1253 0086 7047     		bx	lr
 1254              		.cfi_endproc
 1255              	.LFE74:
 1257              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1258              		.align	1
 1259              		.global	HAL_UART_Receive_IT
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	HAL_UART_Receive_IT:
 1265              	.LFB75:
1348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1266              		.loc 1 1361 1
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 84B0     		sub	sp, sp, #16
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 1278 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 47


 1279 0008 B960     		str	r1, [r7, #8]
 1280 000a 1346     		mov	r3, r2
 1281 000c FB80     		strh	r3, [r7, #6]	@ movhi
1362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1282              		.loc 1 1363 12
 1283 000e FB68     		ldr	r3, [r7, #12]
 1284 0010 93F83E30 		ldrb	r3, [r3, #62]
 1285 0014 DBB2     		uxtb	r3, r3
 1286              		.loc 1 1363 6
 1287 0016 202B     		cmp	r3, #32
 1288 0018 1DD1     		bne	.L59
1364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1289              		.loc 1 1365 8
 1290 001a BB68     		ldr	r3, [r7, #8]
 1291 001c 002B     		cmp	r3, #0
 1292 001e 02D0     		beq	.L60
 1293              		.loc 1 1365 25 discriminator 1
 1294 0020 FB88     		ldrh	r3, [r7, #6]
 1295 0022 002B     		cmp	r3, #0
 1296 0024 01D1     		bne	.L61
 1297              	.L60:
1366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1298              		.loc 1 1367 14
 1299 0026 0123     		movs	r3, #1
 1300 0028 16E0     		b	.L62
 1301              	.L61:
1368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1302              		.loc 1 1371 5
 1303 002a FB68     		ldr	r3, [r7, #12]
 1304 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1305 0030 012B     		cmp	r3, #1
 1306 0032 01D1     		bne	.L63
 1307              		.loc 1 1371 5 is_stmt 0 discriminator 1
 1308 0034 0223     		movs	r3, #2
 1309 0036 0FE0     		b	.L62
 1310              	.L63:
 1311              		.loc 1 1371 5 discriminator 2
 1312 0038 FB68     		ldr	r3, [r7, #12]
 1313 003a 0122     		movs	r2, #1
 1314 003c 83F83C20 		strb	r2, [r3, #60]
1372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1315              		.loc 1 1374 26 is_stmt 1 discriminator 2
 1316 0040 FB68     		ldr	r3, [r7, #12]
 1317 0042 0022     		movs	r2, #0
 1318 0044 1A63     		str	r2, [r3, #48]
1375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return(UART_Start_Receive_IT(huart, pData, Size));
 1319              		.loc 1 1376 12 discriminator 2
 1320 0046 FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 48


 1321 0048 1A46     		mov	r2, r3
 1322 004a B968     		ldr	r1, [r7, #8]
 1323 004c F868     		ldr	r0, [r7, #12]
 1324 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 1325 0052 0346     		mov	r3, r0
 1326 0054 00E0     		b	.L62
 1327              	.L59:
1377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1328              		.loc 1 1380 12
 1329 0056 0223     		movs	r3, #2
 1330              	.L62:
1381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1331              		.loc 1 1382 1
 1332 0058 1846     		mov	r0, r3
 1333 005a 1037     		adds	r7, r7, #16
 1334              		.cfi_def_cfa_offset 8
 1335 005c BD46     		mov	sp, r7
 1336              		.cfi_def_cfa_register 13
 1337              		@ sp needed
 1338 005e 80BD     		pop	{r7, pc}
 1339              		.cfi_endproc
 1340              	.LFE75:
 1342              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1343              		.align	1
 1344              		.global	HAL_UART_Transmit_DMA
 1345              		.syntax unified
 1346              		.thumb
 1347              		.thumb_func
 1349              	HAL_UART_Transmit_DMA:
 1350              	.LFB76:
1383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 provided through pData.
1389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1351              		.loc 1 1396 1
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 24
 1354              		@ frame_needed = 1, uses_anonymous_args = 0
 1355 0000 80B5     		push	{r7, lr}
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 49


 1360              		.cfi_def_cfa_offset 32
 1361 0004 00AF     		add	r7, sp, #0
 1362              		.cfi_def_cfa_register 7
 1363 0006 F860     		str	r0, [r7, #12]
 1364 0008 B960     		str	r1, [r7, #8]
 1365 000a 1346     		mov	r3, r2
 1366 000c FB80     		strh	r3, [r7, #6]	@ movhi
1397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
1398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1367              		.loc 1 1400 12
 1368 000e FB68     		ldr	r3, [r7, #12]
 1369 0010 93F83D30 		ldrb	r3, [r3, #61]
 1370 0014 DBB2     		uxtb	r3, r3
 1371              		.loc 1 1400 6
 1372 0016 202B     		cmp	r3, #32
 1373 0018 53D1     		bne	.L65
1401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1374              		.loc 1 1402 16
 1375 001a BB68     		ldr	r3, [r7, #8]
 1376              		.loc 1 1402 8
 1377 001c 002B     		cmp	r3, #0
 1378 001e 02D0     		beq	.L66
 1379              		.loc 1 1402 25 discriminator 1
 1380 0020 FB88     		ldrh	r3, [r7, #6]
 1381 0022 002B     		cmp	r3, #0
 1382 0024 01D1     		bne	.L67
 1383              	.L66:
1403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1384              		.loc 1 1404 14
 1385 0026 0123     		movs	r3, #1
 1386 0028 4CE0     		b	.L68
 1387              	.L67:
1405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1388              		.loc 1 1408 5
 1389 002a FB68     		ldr	r3, [r7, #12]
 1390 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1391 0030 012B     		cmp	r3, #1
 1392 0032 01D1     		bne	.L69
 1393              		.loc 1 1408 5 is_stmt 0 discriminator 1
 1394 0034 0223     		movs	r3, #2
 1395 0036 45E0     		b	.L68
 1396              	.L69:
 1397              		.loc 1 1408 5 discriminator 2
 1398 0038 FB68     		ldr	r3, [r7, #12]
 1399 003a 0122     		movs	r2, #1
 1400 003c 83F83C20 		strb	r2, [r3, #60]
1409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1401              		.loc 1 1410 23 is_stmt 1 discriminator 2
 1402 0040 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 50


 1403 0042 FB68     		ldr	r3, [r7, #12]
 1404 0044 1A62     		str	r2, [r3, #32]
1411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1405              		.loc 1 1411 23 discriminator 2
 1406 0046 FB68     		ldr	r3, [r7, #12]
 1407 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1408 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1409              		.loc 1 1412 24 discriminator 2
 1410 004c FB68     		ldr	r3, [r7, #12]
 1411 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1412 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1413              		.loc 1 1414 22 discriminator 2
 1414 0052 FB68     		ldr	r3, [r7, #12]
 1415 0054 0022     		movs	r2, #0
 1416 0056 1A64     		str	r2, [r3, #64]
1415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1417              		.loc 1 1415 19 discriminator 2
 1418 0058 FB68     		ldr	r3, [r7, #12]
 1419 005a 2122     		movs	r2, #33
 1420 005c 83F83D20 		strb	r2, [r3, #61]
1416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1421              		.loc 1 1418 10 discriminator 2
 1422 0060 FB68     		ldr	r3, [r7, #12]
 1423 0062 5B6B     		ldr	r3, [r3, #52]
 1424              		.loc 1 1418 37 discriminator 2
 1425 0064 194A     		ldr	r2, .L70
 1426 0066 9A62     		str	r2, [r3, #40]
1419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1427              		.loc 1 1421 10 discriminator 2
 1428 0068 FB68     		ldr	r3, [r7, #12]
 1429 006a 5B6B     		ldr	r3, [r3, #52]
 1430              		.loc 1 1421 41 discriminator 2
 1431 006c 184A     		ldr	r2, .L70+4
 1432 006e DA62     		str	r2, [r3, #44]
1422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
1424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1433              		.loc 1 1424 10 discriminator 2
 1434 0070 FB68     		ldr	r3, [r7, #12]
 1435 0072 5B6B     		ldr	r3, [r3, #52]
 1436              		.loc 1 1424 38 discriminator 2
 1437 0074 174A     		ldr	r2, .L70+8
 1438 0076 1A63     		str	r2, [r3, #48]
1425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
1427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1439              		.loc 1 1427 10 discriminator 2
 1440 0078 FB68     		ldr	r3, [r7, #12]
 1441 007a 5B6B     		ldr	r3, [r3, #52]
 1442              		.loc 1 1427 38 discriminator 2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 51


 1443 007c 0022     		movs	r2, #0
 1444 007e 5A63     		str	r2, [r3, #52]
1428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
1430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1445              		.loc 1 1430 9 discriminator 2
 1446 0080 07F10803 		add	r3, r7, #8
 1447 0084 7B61     		str	r3, [r7, #20]
1431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1448              		.loc 1 1431 5 discriminator 2
 1449 0086 FB68     		ldr	r3, [r7, #12]
 1450 0088 586B     		ldr	r0, [r3, #52]
 1451 008a 7B69     		ldr	r3, [r7, #20]
 1452 008c 1968     		ldr	r1, [r3]
 1453              		.loc 1 1431 71 discriminator 2
 1454 008e FB68     		ldr	r3, [r7, #12]
 1455 0090 1B68     		ldr	r3, [r3]
 1456              		.loc 1 1431 65 discriminator 2
 1457 0092 0433     		adds	r3, r3, #4
 1458              		.loc 1 1431 5 discriminator 2
 1459 0094 1A46     		mov	r2, r3
 1460 0096 FB88     		ldrh	r3, [r7, #6]
 1461 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1462              		.loc 1 1434 5 discriminator 2
 1463 009c FB68     		ldr	r3, [r7, #12]
 1464 009e 1B68     		ldr	r3, [r3]
 1465 00a0 6FF04002 		mvn	r2, #64
 1466 00a4 1A60     		str	r2, [r3]
1435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1467              		.loc 1 1437 5 discriminator 2
 1468 00a6 FB68     		ldr	r3, [r7, #12]
 1469 00a8 0022     		movs	r2, #0
 1470 00aa 83F83C20 		strb	r2, [r3, #60]
1438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
1441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1471              		.loc 1 1441 5 discriminator 2
 1472 00ae FB68     		ldr	r3, [r7, #12]
 1473 00b0 1B68     		ldr	r3, [r3]
 1474 00b2 5A69     		ldr	r2, [r3, #20]
 1475 00b4 FB68     		ldr	r3, [r7, #12]
 1476 00b6 1B68     		ldr	r3, [r3]
 1477 00b8 42F08002 		orr	r2, r2, #128
 1478 00bc 5A61     		str	r2, [r3, #20]
1442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1479              		.loc 1 1443 12 discriminator 2
 1480 00be 0023     		movs	r3, #0
 1481 00c0 00E0     		b	.L68
 1482              	.L65:
1444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 52


1445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1483              		.loc 1 1447 12
 1484 00c2 0223     		movs	r3, #2
 1485              	.L68:
1448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1486              		.loc 1 1449 1
 1487 00c4 1846     		mov	r0, r3
 1488 00c6 1837     		adds	r7, r7, #24
 1489              		.cfi_def_cfa_offset 8
 1490 00c8 BD46     		mov	sp, r7
 1491              		.cfi_def_cfa_register 13
 1492              		@ sp needed
 1493 00ca 80BD     		pop	{r7, pc}
 1494              	.L71:
 1495              		.align	2
 1496              	.L70:
 1497 00cc 00000000 		.word	UART_DMATransmitCplt
 1498 00d0 00000000 		.word	UART_DMATxHalfCplt
 1499 00d4 00000000 		.word	UART_DMAError
 1500              		.cfi_endproc
 1501              	.LFE76:
 1503              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1504              		.align	1
 1505              		.global	HAL_UART_Receive_DMA
 1506              		.syntax unified
 1507              		.thumb
 1508              		.thumb_func
 1510              	HAL_UART_Receive_DMA:
 1511              	.LFB77:
1450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of u16 available through pData.
1456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1512              		.loc 1 1464 1
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 16
 1515              		@ frame_needed = 1, uses_anonymous_args = 0
 1516 0000 80B5     		push	{r7, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 7, -8
 1519              		.cfi_offset 14, -4
 1520 0002 84B0     		sub	sp, sp, #16
 1521              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 53


 1522 0004 00AF     		add	r7, sp, #0
 1523              		.cfi_def_cfa_register 7
 1524 0006 F860     		str	r0, [r7, #12]
 1525 0008 B960     		str	r1, [r7, #8]
 1526 000a 1346     		mov	r3, r2
 1527 000c FB80     		strh	r3, [r7, #6]	@ movhi
1465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1528              		.loc 1 1466 12
 1529 000e FB68     		ldr	r3, [r7, #12]
 1530 0010 93F83E30 		ldrb	r3, [r3, #62]
 1531 0014 DBB2     		uxtb	r3, r3
 1532              		.loc 1 1466 6
 1533 0016 202B     		cmp	r3, #32
 1534 0018 1DD1     		bne	.L73
1467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1535              		.loc 1 1468 8
 1536 001a BB68     		ldr	r3, [r7, #8]
 1537 001c 002B     		cmp	r3, #0
 1538 001e 02D0     		beq	.L74
 1539              		.loc 1 1468 25 discriminator 1
 1540 0020 FB88     		ldrh	r3, [r7, #6]
 1541 0022 002B     		cmp	r3, #0
 1542 0024 01D1     		bne	.L75
 1543              	.L74:
1469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1544              		.loc 1 1470 14
 1545 0026 0123     		movs	r3, #1
 1546 0028 16E0     		b	.L76
 1547              	.L75:
1471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
1474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1548              		.loc 1 1474 5
 1549 002a FB68     		ldr	r3, [r7, #12]
 1550 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1551 0030 012B     		cmp	r3, #1
 1552 0032 01D1     		bne	.L77
 1553              		.loc 1 1474 5 is_stmt 0 discriminator 1
 1554 0034 0223     		movs	r3, #2
 1555 0036 0FE0     		b	.L76
 1556              	.L77:
 1557              		.loc 1 1474 5 discriminator 2
 1558 0038 FB68     		ldr	r3, [r7, #12]
 1559 003a 0122     		movs	r2, #1
 1560 003c 83F83C20 		strb	r2, [r3, #60]
1475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1561              		.loc 1 1477 26 is_stmt 1 discriminator 2
 1562 0040 FB68     		ldr	r3, [r7, #12]
 1563 0042 0022     		movs	r2, #0
 1564 0044 1A63     		str	r2, [r3, #48]
1478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 54


1479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return(UART_Start_Receive_DMA(huart, pData, Size));
 1565              		.loc 1 1479 12 discriminator 2
 1566 0046 FB88     		ldrh	r3, [r7, #6]
 1567 0048 1A46     		mov	r2, r3
 1568 004a B968     		ldr	r1, [r7, #8]
 1569 004c F868     		ldr	r0, [r7, #12]
 1570 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 1571 0052 0346     		mov	r3, r0
 1572 0054 00E0     		b	.L76
 1573              	.L73:
1480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1574              		.loc 1 1483 12
 1575 0056 0223     		movs	r3, #2
 1576              	.L76:
1484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1577              		.loc 1 1485 1
 1578 0058 1846     		mov	r0, r3
 1579 005a 1037     		adds	r7, r7, #16
 1580              		.cfi_def_cfa_offset 8
 1581 005c BD46     		mov	sp, r7
 1582              		.cfi_def_cfa_register 13
 1583              		@ sp needed
 1584 005e 80BD     		pop	{r7, pc}
 1585              		.cfi_endproc
 1586              	.LFE77:
 1588              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1589              		.align	1
 1590              		.global	HAL_UART_DMAPause
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1595              	HAL_UART_DMAPause:
 1596              	.LFB78:
1486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1597              		.loc 1 1494 1
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 16
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 0000 80B4     		push	{r7}
 1603              		.cfi_def_cfa_offset 4
 1604              		.cfi_offset 7, -4
 1605 0002 85B0     		sub	sp, sp, #20
 1606              		.cfi_def_cfa_offset 24
 1607 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 55


 1608              		.cfi_def_cfa_register 7
 1609 0006 7860     		str	r0, [r7, #4]
1495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1610              		.loc 1 1495 12
 1611 0008 0023     		movs	r3, #0
 1612 000a FB60     		str	r3, [r7, #12]
1496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1613              		.loc 1 1498 3
 1614 000c 7B68     		ldr	r3, [r7, #4]
 1615 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1616 0012 012B     		cmp	r3, #1
 1617 0014 01D1     		bne	.L79
 1618              		.loc 1 1498 3 is_stmt 0 discriminator 1
 1619 0016 0223     		movs	r3, #2
 1620 0018 50E0     		b	.L80
 1621              	.L79:
 1622              		.loc 1 1498 3 discriminator 2
 1623 001a 7B68     		ldr	r3, [r7, #4]
 1624 001c 0122     		movs	r2, #1
 1625 001e 83F83C20 		strb	r2, [r3, #60]
1499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1626              		.loc 1 1500 16 is_stmt 1 discriminator 2
 1627 0022 7B68     		ldr	r3, [r7, #4]
 1628 0024 1B68     		ldr	r3, [r3]
 1629 0026 5B69     		ldr	r3, [r3, #20]
 1630 0028 03F08003 		and	r3, r3, #128
 1631 002c 002B     		cmp	r3, #0
 1632 002e 14BF     		ite	ne
 1633 0030 0123     		movne	r3, #1
 1634 0032 0023     		moveq	r3, #0
 1635 0034 DBB2     		uxtb	r3, r3
 1636              		.loc 1 1500 14 discriminator 2
 1637 0036 FB60     		str	r3, [r7, #12]
1501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1638              		.loc 1 1501 13 discriminator 2
 1639 0038 7B68     		ldr	r3, [r7, #4]
 1640 003a 93F83D30 		ldrb	r3, [r3, #61]
 1641 003e DBB2     		uxtb	r3, r3
 1642              		.loc 1 1501 6 discriminator 2
 1643 0040 212B     		cmp	r3, #33
 1644 0042 0AD1     		bne	.L81
 1645              		.loc 1 1501 49 discriminator 1
 1646 0044 FB68     		ldr	r3, [r7, #12]
 1647 0046 002B     		cmp	r3, #0
 1648 0048 07D0     		beq	.L81
1502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1649              		.loc 1 1504 5
 1650 004a 7B68     		ldr	r3, [r7, #4]
 1651 004c 1B68     		ldr	r3, [r3]
 1652 004e 5A69     		ldr	r2, [r3, #20]
 1653 0050 7B68     		ldr	r3, [r7, #4]
 1654 0052 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 56


 1655 0054 22F08002 		bic	r2, r2, #128
 1656 0058 5A61     		str	r2, [r3, #20]
 1657              	.L81:
1505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1658              		.loc 1 1507 16
 1659 005a 7B68     		ldr	r3, [r7, #4]
 1660 005c 1B68     		ldr	r3, [r3]
 1661 005e 5B69     		ldr	r3, [r3, #20]
 1662 0060 03F04003 		and	r3, r3, #64
 1663 0064 002B     		cmp	r3, #0
 1664 0066 14BF     		ite	ne
 1665 0068 0123     		movne	r3, #1
 1666 006a 0023     		moveq	r3, #0
 1667 006c DBB2     		uxtb	r3, r3
 1668              		.loc 1 1507 14
 1669 006e FB60     		str	r3, [r7, #12]
1508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1670              		.loc 1 1508 13
 1671 0070 7B68     		ldr	r3, [r7, #4]
 1672 0072 93F83E30 		ldrb	r3, [r3, #62]
 1673 0076 DBB2     		uxtb	r3, r3
 1674              		.loc 1 1508 6
 1675 0078 222B     		cmp	r3, #34
 1676 007a 1AD1     		bne	.L82
 1677              		.loc 1 1508 50 discriminator 1
 1678 007c FB68     		ldr	r3, [r7, #12]
 1679 007e 002B     		cmp	r3, #0
 1680 0080 17D0     		beq	.L82
1509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1681              		.loc 1 1511 5
 1682 0082 7B68     		ldr	r3, [r7, #4]
 1683 0084 1B68     		ldr	r3, [r3]
 1684 0086 DA68     		ldr	r2, [r3, #12]
 1685 0088 7B68     		ldr	r3, [r7, #4]
 1686 008a 1B68     		ldr	r3, [r3]
 1687 008c 22F48072 		bic	r2, r2, #256
 1688 0090 DA60     		str	r2, [r3, #12]
1512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1689              		.loc 1 1512 5
 1690 0092 7B68     		ldr	r3, [r7, #4]
 1691 0094 1B68     		ldr	r3, [r3]
 1692 0096 5A69     		ldr	r2, [r3, #20]
 1693 0098 7B68     		ldr	r3, [r7, #4]
 1694 009a 1B68     		ldr	r3, [r3]
 1695 009c 22F00102 		bic	r2, r2, #1
 1696 00a0 5A61     		str	r2, [r3, #20]
1513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1697              		.loc 1 1515 5
 1698 00a2 7B68     		ldr	r3, [r7, #4]
 1699 00a4 1B68     		ldr	r3, [r3]
 1700 00a6 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 57


 1701 00a8 7B68     		ldr	r3, [r7, #4]
 1702 00aa 1B68     		ldr	r3, [r3]
 1703 00ac 22F04002 		bic	r2, r2, #64
 1704 00b0 5A61     		str	r2, [r3, #20]
 1705              	.L82:
1516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1706              		.loc 1 1519 3
 1707 00b2 7B68     		ldr	r3, [r7, #4]
 1708 00b4 0022     		movs	r2, #0
 1709 00b6 83F83C20 		strb	r2, [r3, #60]
1520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 1710              		.loc 1 1521 10
 1711 00ba 0023     		movs	r3, #0
 1712              	.L80:
1522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1713              		.loc 1 1522 1
 1714 00bc 1846     		mov	r0, r3
 1715 00be 1437     		adds	r7, r7, #20
 1716              		.cfi_def_cfa_offset 4
 1717 00c0 BD46     		mov	sp, r7
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 00c2 80BC     		pop	{r7}
 1721              		.cfi_restore 7
 1722              		.cfi_def_cfa_offset 0
 1723 00c4 7047     		bx	lr
 1724              		.cfi_endproc
 1725              	.LFE78:
 1727              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1728              		.align	1
 1729              		.global	HAL_UART_DMAResume
 1730              		.syntax unified
 1731              		.thumb
 1732              		.thumb_func
 1734              	HAL_UART_DMAResume:
 1735              	.LFB79:
1523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1736              		.loc 1 1531 1
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 16
 1739              		@ frame_needed = 1, uses_anonymous_args = 0
 1740              		@ link register save eliminated.
 1741 0000 80B4     		push	{r7}
 1742              		.cfi_def_cfa_offset 4
 1743              		.cfi_offset 7, -4
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 58


 1744 0002 85B0     		sub	sp, sp, #20
 1745              		.cfi_def_cfa_offset 24
 1746 0004 00AF     		add	r7, sp, #0
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
1532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1749              		.loc 1 1533 3
 1750 0008 7B68     		ldr	r3, [r7, #4]
 1751 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1752 000e 012B     		cmp	r3, #1
 1753 0010 01D1     		bne	.L84
 1754              		.loc 1 1533 3 is_stmt 0 discriminator 1
 1755 0012 0223     		movs	r3, #2
 1756 0014 3FE0     		b	.L85
 1757              	.L84:
 1758              		.loc 1 1533 3 discriminator 2
 1759 0016 7B68     		ldr	r3, [r7, #4]
 1760 0018 0122     		movs	r2, #1
 1761 001a 83F83C20 		strb	r2, [r3, #60]
1534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1762              		.loc 1 1535 12 is_stmt 1 discriminator 2
 1763 001e 7B68     		ldr	r3, [r7, #4]
 1764 0020 93F83D30 		ldrb	r3, [r3, #61]
 1765 0024 DBB2     		uxtb	r3, r3
 1766              		.loc 1 1535 6 discriminator 2
 1767 0026 212B     		cmp	r3, #33
 1768 0028 07D1     		bne	.L86
1536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1769              		.loc 1 1538 5
 1770 002a 7B68     		ldr	r3, [r7, #4]
 1771 002c 1B68     		ldr	r3, [r3]
 1772 002e 5A69     		ldr	r2, [r3, #20]
 1773 0030 7B68     		ldr	r3, [r7, #4]
 1774 0032 1B68     		ldr	r3, [r3]
 1775 0034 42F08002 		orr	r2, r2, #128
 1776 0038 5A61     		str	r2, [r3, #20]
 1777              	.L86:
1539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1778              		.loc 1 1541 12
 1779 003a 7B68     		ldr	r3, [r7, #4]
 1780 003c 93F83E30 		ldrb	r3, [r3, #62]
 1781 0040 DBB2     		uxtb	r3, r3
 1782              		.loc 1 1541 6
 1783 0042 222B     		cmp	r3, #34
 1784 0044 22D1     		bne	.L87
 1785              	.LBB2:
1542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1786              		.loc 1 1544 5
 1787 0046 0023     		movs	r3, #0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 59


 1788 0048 FB60     		str	r3, [r7, #12]
 1789 004a 7B68     		ldr	r3, [r7, #4]
 1790 004c 1B68     		ldr	r3, [r3]
 1791 004e 1B68     		ldr	r3, [r3]
 1792 0050 FB60     		str	r3, [r7, #12]
 1793 0052 7B68     		ldr	r3, [r7, #4]
 1794 0054 1B68     		ldr	r3, [r3]
 1795 0056 5B68     		ldr	r3, [r3, #4]
 1796 0058 FB60     		str	r3, [r7, #12]
 1797 005a FB68     		ldr	r3, [r7, #12]
 1798              	.LBE2:
1545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1799              		.loc 1 1547 5
 1800 005c 7B68     		ldr	r3, [r7, #4]
 1801 005e 1B68     		ldr	r3, [r3]
 1802 0060 DA68     		ldr	r2, [r3, #12]
 1803 0062 7B68     		ldr	r3, [r7, #4]
 1804 0064 1B68     		ldr	r3, [r3]
 1805 0066 42F48072 		orr	r2, r2, #256
 1806 006a DA60     		str	r2, [r3, #12]
1548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1807              		.loc 1 1548 5
 1808 006c 7B68     		ldr	r3, [r7, #4]
 1809 006e 1B68     		ldr	r3, [r3]
 1810 0070 5A69     		ldr	r2, [r3, #20]
 1811 0072 7B68     		ldr	r3, [r7, #4]
 1812 0074 1B68     		ldr	r3, [r3]
 1813 0076 42F00102 		orr	r2, r2, #1
 1814 007a 5A61     		str	r2, [r3, #20]
1549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1815              		.loc 1 1551 5
 1816 007c 7B68     		ldr	r3, [r7, #4]
 1817 007e 1B68     		ldr	r3, [r3]
 1818 0080 5A69     		ldr	r2, [r3, #20]
 1819 0082 7B68     		ldr	r3, [r7, #4]
 1820 0084 1B68     		ldr	r3, [r3]
 1821 0086 42F04002 		orr	r2, r2, #64
 1822 008a 5A61     		str	r2, [r3, #20]
 1823              	.L87:
1552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1824              		.loc 1 1555 3
 1825 008c 7B68     		ldr	r3, [r7, #4]
 1826 008e 0022     		movs	r2, #0
 1827 0090 83F83C20 		strb	r2, [r3, #60]
1556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 1828              		.loc 1 1557 10
 1829 0094 0023     		movs	r3, #0
 1830              	.L85:
1558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 60


 1831              		.loc 1 1558 1
 1832 0096 1846     		mov	r0, r3
 1833 0098 1437     		adds	r7, r7, #20
 1834              		.cfi_def_cfa_offset 4
 1835 009a BD46     		mov	sp, r7
 1836              		.cfi_def_cfa_register 13
 1837              		@ sp needed
 1838 009c 80BC     		pop	{r7}
 1839              		.cfi_restore 7
 1840              		.cfi_def_cfa_offset 0
 1841 009e 7047     		bx	lr
 1842              		.cfi_endproc
 1843              	.LFE79:
 1845              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1846              		.align	1
 1847              		.global	HAL_UART_DMAStop
 1848              		.syntax unified
 1849              		.thumb
 1850              		.thumb_func
 1852              	HAL_UART_DMAStop:
 1853              	.LFB80:
1559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1854              		.loc 1 1567 1
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 16
 1857              		@ frame_needed = 1, uses_anonymous_args = 0
 1858 0000 80B5     		push	{r7, lr}
 1859              		.cfi_def_cfa_offset 8
 1860              		.cfi_offset 7, -8
 1861              		.cfi_offset 14, -4
 1862 0002 84B0     		sub	sp, sp, #16
 1863              		.cfi_def_cfa_offset 24
 1864 0004 00AF     		add	r7, sp, #0
 1865              		.cfi_def_cfa_register 7
 1866 0006 7860     		str	r0, [r7, #4]
1568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1867              		.loc 1 1568 12
 1868 0008 0023     		movs	r3, #0
 1869 000a FB60     		str	r3, [r7, #12]
1569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1870              		.loc 1 1576 16
 1871 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 61


 1872 000e 1B68     		ldr	r3, [r3]
 1873 0010 5B69     		ldr	r3, [r3, #20]
 1874 0012 03F08003 		and	r3, r3, #128
 1875 0016 002B     		cmp	r3, #0
 1876 0018 14BF     		ite	ne
 1877 001a 0123     		movne	r3, #1
 1878 001c 0023     		moveq	r3, #0
 1879 001e DBB2     		uxtb	r3, r3
 1880              		.loc 1 1576 14
 1881 0020 FB60     		str	r3, [r7, #12]
1577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1882              		.loc 1 1577 13
 1883 0022 7B68     		ldr	r3, [r7, #4]
 1884 0024 93F83D30 		ldrb	r3, [r3, #61]
 1885 0028 DBB2     		uxtb	r3, r3
 1886              		.loc 1 1577 6
 1887 002a 212B     		cmp	r3, #33
 1888 002c 16D1     		bne	.L89
 1889              		.loc 1 1577 49 discriminator 1
 1890 002e FB68     		ldr	r3, [r7, #12]
 1891 0030 002B     		cmp	r3, #0
 1892 0032 13D0     		beq	.L89
1578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1893              		.loc 1 1579 5
 1894 0034 7B68     		ldr	r3, [r7, #4]
 1895 0036 1B68     		ldr	r3, [r3]
 1896 0038 5A69     		ldr	r2, [r3, #20]
 1897 003a 7B68     		ldr	r3, [r7, #4]
 1898 003c 1B68     		ldr	r3, [r3]
 1899 003e 22F08002 		bic	r2, r2, #128
 1900 0042 5A61     		str	r2, [r3, #20]
1580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1901              		.loc 1 1582 14
 1902 0044 7B68     		ldr	r3, [r7, #4]
 1903 0046 5B6B     		ldr	r3, [r3, #52]
 1904              		.loc 1 1582 8
 1905 0048 002B     		cmp	r3, #0
 1906 004a 04D0     		beq	.L90
1583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 1907              		.loc 1 1584 7
 1908 004c 7B68     		ldr	r3, [r7, #4]
 1909 004e 5B6B     		ldr	r3, [r3, #52]
 1910 0050 1846     		mov	r0, r3
 1911 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 1912              	.L90:
1585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1913              		.loc 1 1586 5
 1914 0056 7868     		ldr	r0, [r7, #4]
 1915 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 1916              	.L89:
1587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 62


1589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1917              		.loc 1 1590 16
 1918 005c 7B68     		ldr	r3, [r7, #4]
 1919 005e 1B68     		ldr	r3, [r3]
 1920 0060 5B69     		ldr	r3, [r3, #20]
 1921 0062 03F04003 		and	r3, r3, #64
 1922 0066 002B     		cmp	r3, #0
 1923 0068 14BF     		ite	ne
 1924 006a 0123     		movne	r3, #1
 1925 006c 0023     		moveq	r3, #0
 1926 006e DBB2     		uxtb	r3, r3
 1927              		.loc 1 1590 14
 1928 0070 FB60     		str	r3, [r7, #12]
1591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1929              		.loc 1 1591 13
 1930 0072 7B68     		ldr	r3, [r7, #4]
 1931 0074 93F83E30 		ldrb	r3, [r3, #62]
 1932 0078 DBB2     		uxtb	r3, r3
 1933              		.loc 1 1591 6
 1934 007a 222B     		cmp	r3, #34
 1935 007c 16D1     		bne	.L91
 1936              		.loc 1 1591 50 discriminator 1
 1937 007e FB68     		ldr	r3, [r7, #12]
 1938 0080 002B     		cmp	r3, #0
 1939 0082 13D0     		beq	.L91
1592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1940              		.loc 1 1593 5
 1941 0084 7B68     		ldr	r3, [r7, #4]
 1942 0086 1B68     		ldr	r3, [r3]
 1943 0088 5A69     		ldr	r2, [r3, #20]
 1944 008a 7B68     		ldr	r3, [r7, #4]
 1945 008c 1B68     		ldr	r3, [r3]
 1946 008e 22F04002 		bic	r2, r2, #64
 1947 0092 5A61     		str	r2, [r3, #20]
1594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 1948              		.loc 1 1596 14
 1949 0094 7B68     		ldr	r3, [r7, #4]
 1950 0096 9B6B     		ldr	r3, [r3, #56]
 1951              		.loc 1 1596 8
 1952 0098 002B     		cmp	r3, #0
 1953 009a 04D0     		beq	.L92
1597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 1954              		.loc 1 1598 7
 1955 009c 7B68     		ldr	r3, [r7, #4]
 1956 009e 9B6B     		ldr	r3, [r3, #56]
 1957 00a0 1846     		mov	r0, r3
 1958 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 1959              	.L92:
1599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1960              		.loc 1 1600 5
 1961 00a6 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 63


 1962 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 1963              	.L91:
1601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 1964              		.loc 1 1603 10
 1965 00ac 0023     		movs	r3, #0
1604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1966              		.loc 1 1604 1
 1967 00ae 1846     		mov	r0, r3
 1968 00b0 1037     		adds	r7, r7, #16
 1969              		.cfi_def_cfa_offset 8
 1970 00b2 BD46     		mov	sp, r7
 1971              		.cfi_def_cfa_register 13
 1972              		@ sp needed
 1973 00b4 80BD     		pop	{r7, pc}
 1974              		.cfi_endproc
 1975              	.LFE80:
 1977              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 1978              		.align	1
 1979              		.global	HAL_UARTEx_ReceiveToIdle
 1980              		.syntax unified
 1981              		.thumb
 1982              		.thumb_func
 1984              	HAL_UARTEx_ReceiveToIdle:
 1985              	.LFB81:
1605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart   UART handle.
1615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1986              		.loc 1 1622 1
 1987              		.cfi_startproc
 1988              		@ args = 4, pretend = 0, frame = 32
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 88B0     		sub	sp, sp, #32
 1995              		.cfi_def_cfa_offset 40
 1996 0004 00AF     		add	r7, sp, #0
 1997              		.cfi_def_cfa_register 7
 1998 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 64


 1999 0008 B960     		str	r1, [r7, #8]
 2000 000a 3B60     		str	r3, [r7]
 2001 000c 1346     		mov	r3, r2	@ movhi
 2002 000e FB80     		strh	r3, [r7, #6]	@ movhi
1623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
1624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
1625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart;
1626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2003              		.loc 1 1628 12
 2004 0010 FB68     		ldr	r3, [r7, #12]
 2005 0012 93F83E30 		ldrb	r3, [r3, #62]
 2006 0016 DBB2     		uxtb	r3, r3
 2007              		.loc 1 1628 6
 2008 0018 202B     		cmp	r3, #32
 2009 001a 40F0C980 		bne	.L95
1629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2010              		.loc 1 1630 8
 2011 001e BB68     		ldr	r3, [r7, #8]
 2012 0020 002B     		cmp	r3, #0
 2013 0022 02D0     		beq	.L96
 2014              		.loc 1 1630 25 discriminator 1
 2015 0024 FB88     		ldrh	r3, [r7, #6]
 2016 0026 002B     		cmp	r3, #0
 2017 0028 01D1     		bne	.L97
 2018              	.L96:
1631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 2019              		.loc 1 1632 15
 2020 002a 0123     		movs	r3, #1
 2021 002c C1E0     		b	.L98
 2022              	.L97:
1633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2023              		.loc 1 1635 5
 2024 002e FB68     		ldr	r3, [r7, #12]
 2025 0030 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2026 0034 012B     		cmp	r3, #1
 2027 0036 01D1     		bne	.L99
 2028              		.loc 1 1635 5 is_stmt 0 discriminator 1
 2029 0038 0223     		movs	r3, #2
 2030 003a BAE0     		b	.L98
 2031              	.L99:
 2032              		.loc 1 1635 5 discriminator 2
 2033 003c FB68     		ldr	r3, [r7, #12]
 2034 003e 0122     		movs	r2, #1
 2035 0040 83F83C20 		strb	r2, [r3, #60]
1636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2036              		.loc 1 1637 22 is_stmt 1 discriminator 2
 2037 0044 FB68     		ldr	r3, [r7, #12]
 2038 0046 0022     		movs	r2, #0
 2039 0048 1A64     		str	r2, [r3, #64]
1638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 65


 2040              		.loc 1 1638 20 discriminator 2
 2041 004a FB68     		ldr	r3, [r7, #12]
 2042 004c 2222     		movs	r2, #34
 2043 004e 83F83E20 		strb	r2, [r3, #62]
1639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2044              		.loc 1 1639 26 discriminator 2
 2045 0052 FB68     		ldr	r3, [r7, #12]
 2046 0054 0122     		movs	r2, #1
 2047 0056 1A63     		str	r2, [r3, #48]
1640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout management */
1642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2048              		.loc 1 1642 17 discriminator 2
 2049 0058 FFF7FEFF 		bl	HAL_GetTick
 2050 005c 7861     		str	r0, [r7, #20]
1643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2051              		.loc 1 1644 24 discriminator 2
 2052 005e FB68     		ldr	r3, [r7, #12]
 2053 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2054 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 2055              		.loc 1 1645 24 discriminator 2
 2056 0064 FB68     		ldr	r3, [r7, #12]
 2057 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2058 0068 DA85     		strh	r2, [r3, #46]	@ movhi
1646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2059              		.loc 1 1648 21 discriminator 2
 2060 006a FB68     		ldr	r3, [r7, #12]
 2061 006c 9B68     		ldr	r3, [r3, #8]
 2062              		.loc 1 1648 8 discriminator 2
 2063 006e B3F5805F 		cmp	r3, #4096
 2064 0072 08D1     		bne	.L100
 2065              		.loc 1 1648 71 discriminator 1
 2066 0074 FB68     		ldr	r3, [r7, #12]
 2067 0076 1B69     		ldr	r3, [r3, #16]
 2068              		.loc 1 1648 56 discriminator 1
 2069 0078 002B     		cmp	r3, #0
 2070 007a 04D1     		bne	.L100
1649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 2071              		.loc 1 1650 19
 2072 007c 0023     		movs	r3, #0
 2073 007e FB61     		str	r3, [r7, #28]
1651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2074              		.loc 1 1651 19
 2075 0080 BB68     		ldr	r3, [r7, #8]
 2076 0082 BB61     		str	r3, [r7, #24]
 2077 0084 03E0     		b	.L101
 2078              	.L100:
1652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = pData;
 2079              		.loc 1 1655 19
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 66


 2080 0086 BB68     		ldr	r3, [r7, #8]
 2081 0088 FB61     		str	r3, [r7, #28]
1656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = NULL;
 2082              		.loc 1 1656 19
 2083 008a 0023     		movs	r3, #0
 2084 008c BB61     		str	r3, [r7, #24]
 2085              	.L101:
1657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2086              		.loc 1 1659 5
 2087 008e FB68     		ldr	r3, [r7, #12]
 2088 0090 0022     		movs	r2, #0
 2089 0092 83F83C20 		strb	r2, [r3, #60]
1660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Initialize output number of received elements */
1662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = 0U;
 2090              		.loc 1 1662 12
 2091 0096 3B68     		ldr	r3, [r7]
 2092 0098 0022     		movs	r2, #0
 2093 009a 1A80     		strh	r2, [r3]	@ movhi
1663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* as long as data have to be received */
1665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2094              		.loc 1 1665 11
 2095 009c 74E0     		b	.L102
 2096              	.L111:
1666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if IDLE flag is set */
1668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2097              		.loc 1 1668 11
 2098 009e FB68     		ldr	r3, [r7, #12]
 2099 00a0 1B68     		ldr	r3, [r3]
 2100 00a2 1B68     		ldr	r3, [r3]
 2101 00a4 03F01003 		and	r3, r3, #16
 2102              		.loc 1 1668 10
 2103 00a8 102B     		cmp	r3, #16
 2104 00aa 14D1     		bne	.L103
 2105              	.LBB3:
1669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2106              		.loc 1 1671 9
 2107 00ac 0023     		movs	r3, #0
 2108 00ae 3B61     		str	r3, [r7, #16]
 2109 00b0 FB68     		ldr	r3, [r7, #12]
 2110 00b2 1B68     		ldr	r3, [r3]
 2111 00b4 1B68     		ldr	r3, [r3]
 2112 00b6 3B61     		str	r3, [r7, #16]
 2113 00b8 FB68     		ldr	r3, [r7, #12]
 2114 00ba 1B68     		ldr	r3, [r3]
 2115 00bc 5B68     		ldr	r3, [r3, #4]
 2116 00be 3B61     		str	r3, [r7, #16]
 2117 00c0 3B69     		ldr	r3, [r7, #16]
 2118              	.LBE3:
1672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 67


1674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (*RxLen > 0U)
 2119              		.loc 1 1675 13
 2120 00c2 3B68     		ldr	r3, [r7]
 2121 00c4 1B88     		ldrh	r3, [r3]
 2122              		.loc 1 1675 12
 2123 00c6 002B     		cmp	r3, #0
 2124 00c8 05D0     		beq	.L103
1676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2125              		.loc 1 1677 26
 2126 00ca FB68     		ldr	r3, [r7, #12]
 2127 00cc 2022     		movs	r2, #32
 2128 00ce 83F83E20 		strb	r2, [r3, #62]
1678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_OK;
 2129              		.loc 1 1679 18
 2130 00d2 0023     		movs	r3, #0
 2131 00d4 6DE0     		b	.L98
 2132              	.L103:
1680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check if RXNE flag is set */
1684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2133              		.loc 1 1684 11
 2134 00d6 FB68     		ldr	r3, [r7, #12]
 2135 00d8 1B68     		ldr	r3, [r3]
 2136 00da 1B68     		ldr	r3, [r3]
 2137 00dc 03F02003 		and	r3, r3, #32
 2138              		.loc 1 1684 10
 2139 00e0 202B     		cmp	r3, #32
 2140 00e2 3CD1     		bne	.L104
1685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (pdata8bits == NULL)
 2141              		.loc 1 1686 12
 2142 00e4 FB69     		ldr	r3, [r7, #28]
 2143 00e6 002B     		cmp	r3, #0
 2144 00e8 0CD1     		bne	.L105
1687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2145              		.loc 1 1688 42
 2146 00ea FB68     		ldr	r3, [r7, #12]
 2147 00ec 1B68     		ldr	r3, [r3]
 2148              		.loc 1 1688 52
 2149 00ee 5B68     		ldr	r3, [r3, #4]
 2150              		.loc 1 1688 26
 2151 00f0 9BB2     		uxth	r3, r3
 2152 00f2 C3F30803 		ubfx	r3, r3, #0, #9
 2153 00f6 9AB2     		uxth	r2, r3
 2154              		.loc 1 1688 24
 2155 00f8 BB69     		ldr	r3, [r7, #24]
 2156 00fa 1A80     		strh	r2, [r3]	@ movhi
1689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata16bits++;
 2157              		.loc 1 1689 22
 2158 00fc BB69     		ldr	r3, [r7, #24]
 2159 00fe 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 68


 2160 0100 BB61     		str	r3, [r7, #24]
 2161 0102 1FE0     		b	.L106
 2162              	.L105:
1690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_W
 2163              		.loc 1 1693 28
 2164 0104 FB68     		ldr	r3, [r7, #12]
 2165 0106 9B68     		ldr	r3, [r3, #8]
 2166              		.loc 1 1693 15
 2167 0108 B3F5805F 		cmp	r3, #4096
 2168 010c 07D0     		beq	.L107
 2169              		.loc 1 1693 79 discriminator 1
 2170 010e FB68     		ldr	r3, [r7, #12]
 2171 0110 9B68     		ldr	r3, [r3, #8]
 2172              		.loc 1 1693 63 discriminator 1
 2173 0112 002B     		cmp	r3, #0
 2174 0114 0AD1     		bne	.L108
 2175              		.loc 1 1693 129 discriminator 2
 2176 0116 FB68     		ldr	r3, [r7, #12]
 2177 0118 1B69     		ldr	r3, [r3, #16]
 2178              		.loc 1 1693 114 discriminator 2
 2179 011a 002B     		cmp	r3, #0
 2180 011c 06D1     		bne	.L108
 2181              	.L107:
1694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            {
1695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2182              		.loc 1 1695 43
 2183 011e FB68     		ldr	r3, [r7, #12]
 2184 0120 1B68     		ldr	r3, [r3]
 2185              		.loc 1 1695 53
 2186 0122 5B68     		ldr	r3, [r3, #4]
 2187              		.loc 1 1695 28
 2188 0124 DAB2     		uxtb	r2, r3
 2189              		.loc 1 1695 26
 2190 0126 FB69     		ldr	r3, [r7, #28]
 2191 0128 1A70     		strb	r2, [r3]
 2192 012a 08E0     		b	.L109
 2193              	.L108:
1696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            }
1697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            else
1698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            {
1699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2194              		.loc 1 1699 43
 2195 012c FB68     		ldr	r3, [r7, #12]
 2196 012e 1B68     		ldr	r3, [r3]
 2197              		.loc 1 1699 53
 2198 0130 5B68     		ldr	r3, [r3, #4]
 2199              		.loc 1 1699 28
 2200 0132 DBB2     		uxtb	r3, r3
 2201 0134 03F07F03 		and	r3, r3, #127
 2202 0138 DAB2     		uxtb	r2, r3
 2203              		.loc 1 1699 26
 2204 013a FB69     		ldr	r3, [r7, #28]
 2205 013c 1A70     		strb	r2, [r3]
 2206              	.L109:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 69


1700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            }
1701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pdata8bits++;
 2207              		.loc 1 1702 21
 2208 013e FB69     		ldr	r3, [r7, #28]
 2209 0140 0133     		adds	r3, r3, #1
 2210 0142 FB61     		str	r3, [r7, #28]
 2211              	.L106:
1703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Increment number of received elements */
1705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *RxLen += 1U;
 2212              		.loc 1 1705 16
 2213 0144 3B68     		ldr	r3, [r7]
 2214 0146 1B88     		ldrh	r3, [r3]
 2215 0148 0133     		adds	r3, r3, #1
 2216 014a 9AB2     		uxth	r2, r3
 2217 014c 3B68     		ldr	r3, [r7]
 2218 014e 1A80     		strh	r2, [r3]	@ movhi
1706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount--;
 2219              		.loc 1 1706 14
 2220 0150 FB68     		ldr	r3, [r7, #12]
 2221 0152 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2222 0154 9BB2     		uxth	r3, r3
 2223              		.loc 1 1706 27
 2224 0156 013B     		subs	r3, r3, #1
 2225 0158 9AB2     		uxth	r2, r3
 2226 015a FB68     		ldr	r3, [r7, #12]
 2227 015c DA85     		strh	r2, [r3, #46]	@ movhi
 2228              	.L104:
1707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check for the Timeout */
1710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2229              		.loc 1 1710 10
 2230 015e BB6A     		ldr	r3, [r7, #40]
 2231 0160 B3F1FF3F 		cmp	r3, #-1
 2232 0164 10D0     		beq	.L102
1711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2233              		.loc 1 1712 15
 2234 0166 FFF7FEFF 		bl	HAL_GetTick
 2235 016a 0246     		mov	r2, r0
 2236              		.loc 1 1712 29
 2237 016c 7B69     		ldr	r3, [r7, #20]
 2238 016e D31A     		subs	r3, r2, r3
 2239              		.loc 1 1712 12
 2240 0170 BA6A     		ldr	r2, [r7, #40]
 2241 0172 9A42     		cmp	r2, r3
 2242 0174 02D3     		bcc	.L110
 2243              		.loc 1 1712 53 discriminator 1
 2244 0176 BB6A     		ldr	r3, [r7, #40]
 2245 0178 002B     		cmp	r3, #0
 2246 017a 05D1     		bne	.L102
 2247              	.L110:
1713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2248              		.loc 1 1714 26
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 70


 2249 017c FB68     		ldr	r3, [r7, #12]
 2250 017e 2022     		movs	r2, #32
 2251 0180 83F83E20 		strb	r2, [r3, #62]
1715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 2252              		.loc 1 1716 18
 2253 0184 0323     		movs	r3, #3
 2254 0186 14E0     		b	.L98
 2255              	.L102:
1665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2256              		.loc 1 1665 17
 2257 0188 FB68     		ldr	r3, [r7, #12]
 2258 018a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2259 018c 9BB2     		uxth	r3, r3
1665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 2260              		.loc 1 1665 11
 2261 018e 002B     		cmp	r3, #0
 2262 0190 85D1     		bne	.L111
1717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2263              		.loc 1 1722 19
 2264 0192 FB68     		ldr	r3, [r7, #12]
 2265 0194 9A8D     		ldrh	r2, [r3, #44]
 2266              		.loc 1 1722 39
 2267 0196 FB68     		ldr	r3, [r7, #12]
 2268 0198 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2269 019a 9BB2     		uxth	r3, r3
 2270              		.loc 1 1722 32
 2271 019c D31A     		subs	r3, r2, r3
 2272 019e 9AB2     		uxth	r2, r3
 2273              		.loc 1 1722 12
 2274 01a0 3B68     		ldr	r3, [r7]
 2275 01a2 1A80     		strh	r2, [r3]	@ movhi
1723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2276              		.loc 1 1724 20
 2277 01a4 FB68     		ldr	r3, [r7, #12]
 2278 01a6 2022     		movs	r2, #32
 2279 01a8 83F83E20 		strb	r2, [r3, #62]
1725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 2280              		.loc 1 1726 12
 2281 01ac 0023     		movs	r3, #0
 2282 01ae 00E0     		b	.L98
 2283              	.L95:
1727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2284              		.loc 1 1730 12
 2285 01b0 0223     		movs	r3, #2
 2286              	.L98:
1731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 71


1732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2287              		.loc 1 1732 1
 2288 01b2 1846     		mov	r0, r3
 2289 01b4 2037     		adds	r7, r7, #32
 2290              		.cfi_def_cfa_offset 8
 2291 01b6 BD46     		mov	sp, r7
 2292              		.cfi_def_cfa_register 13
 2293              		@ sp needed
 2294 01b8 80BD     		pop	{r7, pc}
 2295              		.cfi_endproc
 2296              	.LFE81:
 2298              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2299              		.align	1
 2300              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2305              	HAL_UARTEx_ReceiveToIdle_IT:
 2306              	.LFB82:
1733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         number of received data elements.
1739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2307              		.loc 1 1748 1
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 24
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 2311 0000 80B5     		push	{r7, lr}
 2312              		.cfi_def_cfa_offset 8
 2313              		.cfi_offset 7, -8
 2314              		.cfi_offset 14, -4
 2315 0002 86B0     		sub	sp, sp, #24
 2316              		.cfi_def_cfa_offset 32
 2317 0004 00AF     		add	r7, sp, #0
 2318              		.cfi_def_cfa_register 7
 2319 0006 F860     		str	r0, [r7, #12]
 2320 0008 B960     		str	r1, [r7, #8]
 2321 000a 1346     		mov	r3, r2
 2322 000c FB80     		strh	r3, [r7, #6]	@ movhi
1749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2323              		.loc 1 1752 12
 2324 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 72


 2325 0010 93F83E30 		ldrb	r3, [r3, #62]
 2326 0014 DBB2     		uxtb	r3, r3
 2327              		.loc 1 1752 6
 2328 0016 202B     		cmp	r3, #32
 2329 0018 3CD1     		bne	.L113
1753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2330              		.loc 1 1754 8
 2331 001a BB68     		ldr	r3, [r7, #8]
 2332 001c 002B     		cmp	r3, #0
 2333 001e 02D0     		beq	.L114
 2334              		.loc 1 1754 25 discriminator 1
 2335 0020 FB88     		ldrh	r3, [r7, #6]
 2336 0022 002B     		cmp	r3, #0
 2337 0024 01D1     		bne	.L115
 2338              	.L114:
1755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2339              		.loc 1 1756 14
 2340 0026 0123     		movs	r3, #1
 2341 0028 35E0     		b	.L116
 2342              	.L115:
1757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2343              		.loc 1 1759 5
 2344 002a FB68     		ldr	r3, [r7, #12]
 2345 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2346 0030 012B     		cmp	r3, #1
 2347 0032 01D1     		bne	.L117
 2348              		.loc 1 1759 5 is_stmt 0 discriminator 1
 2349 0034 0223     		movs	r3, #2
 2350 0036 2EE0     		b	.L116
 2351              	.L117:
 2352              		.loc 1 1759 5 discriminator 2
 2353 0038 FB68     		ldr	r3, [r7, #12]
 2354 003a 0122     		movs	r2, #1
 2355 003c 83F83C20 		strb	r2, [r3, #60]
1760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2356              		.loc 1 1762 26 is_stmt 1 discriminator 2
 2357 0040 FB68     		ldr	r3, [r7, #12]
 2358 0042 0122     		movs	r2, #1
 2359 0044 1A63     		str	r2, [r3, #48]
1763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2360              		.loc 1 1764 15 discriminator 2
 2361 0046 FB88     		ldrh	r3, [r7, #6]
 2362 0048 1A46     		mov	r2, r3
 2363 004a B968     		ldr	r1, [r7, #8]
 2364 004c F868     		ldr	r0, [r7, #12]
 2365 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 2366 0052 0346     		mov	r3, r0
 2367 0054 FB75     		strb	r3, [r7, #23]
1765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 73


1767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
 2368              		.loc 1 1767 8 discriminator 2
 2369 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2370 0058 002B     		cmp	r3, #0
 2371 005a 19D1     		bne	.L118
1768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2372              		.loc 1 1769 16
 2373 005c FB68     		ldr	r3, [r7, #12]
 2374 005e 1B6B     		ldr	r3, [r3, #48]
 2375              		.loc 1 1769 10
 2376 0060 012B     		cmp	r3, #1
 2377 0062 13D1     		bne	.L119
 2378              	.LBB4:
1770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2379              		.loc 1 1771 9
 2380 0064 0023     		movs	r3, #0
 2381 0066 3B61     		str	r3, [r7, #16]
 2382 0068 FB68     		ldr	r3, [r7, #12]
 2383 006a 1B68     		ldr	r3, [r3]
 2384 006c 1B68     		ldr	r3, [r3]
 2385 006e 3B61     		str	r3, [r7, #16]
 2386 0070 FB68     		ldr	r3, [r7, #12]
 2387 0072 1B68     		ldr	r3, [r3]
 2388 0074 5B68     		ldr	r3, [r3, #4]
 2389 0076 3B61     		str	r3, [r7, #16]
 2390 0078 3B69     		ldr	r3, [r7, #16]
 2391              	.LBE4:
1772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2392              		.loc 1 1772 9
 2393 007a FB68     		ldr	r3, [r7, #12]
 2394 007c 1B68     		ldr	r3, [r3]
 2395 007e DA68     		ldr	r2, [r3, #12]
 2396 0080 FB68     		ldr	r3, [r7, #12]
 2397 0082 1B68     		ldr	r3, [r3]
 2398 0084 42F01002 		orr	r2, r2, #16
 2399 0088 DA60     		str	r2, [r3, #12]
 2400 008a 01E0     		b	.L118
 2401              	.L119:
1773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
 2402              		.loc 1 1780 16
 2403 008c 0123     		movs	r3, #1
 2404 008e FB75     		strb	r3, [r7, #23]
 2405              	.L118:
1781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
 2406              		.loc 1 1784 12
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 74


 2407 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2408 0092 00E0     		b	.L116
 2409              	.L113:
1785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2410              		.loc 1 1788 12
 2411 0094 0223     		movs	r3, #2
 2412              	.L116:
1789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2413              		.loc 1 1790 1
 2414 0096 1846     		mov	r0, r3
 2415 0098 1837     		adds	r7, r7, #24
 2416              		.cfi_def_cfa_offset 8
 2417 009a BD46     		mov	sp, r7
 2418              		.cfi_def_cfa_register 13
 2419              		@ sp needed
 2420 009c 80BD     		pop	{r7, pc}
 2421              		.cfi_endproc
 2422              	.LFE82:
 2424              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 2425              		.align	1
 2426              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2431              	HAL_UARTEx_ReceiveToIdle_DMA:
 2432              	.LFB83:
1791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the parity bit (MSB position).
1800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         of uint16_t available through pData.
1803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param huart UART handle.
1804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2433              		.loc 1 1809 1
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 24
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437 0000 80B5     		push	{r7, lr}
 2438              		.cfi_def_cfa_offset 8
 2439              		.cfi_offset 7, -8
 2440              		.cfi_offset 14, -4
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 75


 2441 0002 86B0     		sub	sp, sp, #24
 2442              		.cfi_def_cfa_offset 32
 2443 0004 00AF     		add	r7, sp, #0
 2444              		.cfi_def_cfa_register 7
 2445 0006 F860     		str	r0, [r7, #12]
 2446 0008 B960     		str	r1, [r7, #8]
 2447 000a 1346     		mov	r3, r2
 2448 000c FB80     		strh	r3, [r7, #6]	@ movhi
1810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_StatusTypeDef status;
1811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2449              		.loc 1 1813 12
 2450 000e FB68     		ldr	r3, [r7, #12]
 2451 0010 93F83E30 		ldrb	r3, [r3, #62]
 2452 0014 DBB2     		uxtb	r3, r3
 2453              		.loc 1 1813 6
 2454 0016 202B     		cmp	r3, #32
 2455 0018 3CD1     		bne	.L121
1814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2456              		.loc 1 1815 8
 2457 001a BB68     		ldr	r3, [r7, #8]
 2458 001c 002B     		cmp	r3, #0
 2459 001e 02D0     		beq	.L122
 2460              		.loc 1 1815 25 discriminator 1
 2461 0020 FB88     		ldrh	r3, [r7, #6]
 2462 0022 002B     		cmp	r3, #0
 2463 0024 01D1     		bne	.L123
 2464              	.L122:
1816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 2465              		.loc 1 1817 14
 2466 0026 0123     		movs	r3, #1
 2467 0028 35E0     		b	.L124
 2468              	.L123:
1818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 2469              		.loc 1 1820 5
 2470 002a FB68     		ldr	r3, [r7, #12]
 2471 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2472 0030 012B     		cmp	r3, #1
 2473 0032 01D1     		bne	.L125
 2474              		.loc 1 1820 5 is_stmt 0 discriminator 1
 2475 0034 0223     		movs	r3, #2
 2476 0036 2EE0     		b	.L124
 2477              	.L125:
 2478              		.loc 1 1820 5 discriminator 2
 2479 0038 FB68     		ldr	r3, [r7, #12]
 2480 003a 0122     		movs	r2, #1
 2481 003c 83F83C20 		strb	r2, [r3, #60]
1821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2482              		.loc 1 1823 26 is_stmt 1 discriminator 2
 2483 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 76


 2484 0042 0122     		movs	r2, #1
 2485 0044 1A63     		str	r2, [r3, #48]
1824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 2486              		.loc 1 1825 15 discriminator 2
 2487 0046 FB88     		ldrh	r3, [r7, #6]
 2488 0048 1A46     		mov	r2, r3
 2489 004a B968     		ldr	r1, [r7, #8]
 2490 004c F868     		ldr	r0, [r7, #12]
 2491 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 2492 0052 0346     		mov	r3, r0
 2493 0054 FB75     		strb	r3, [r7, #23]
1826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (status == HAL_OK)
 2494              		.loc 1 1828 8 discriminator 2
 2495 0056 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2496 0058 002B     		cmp	r3, #0
 2497 005a 19D1     		bne	.L126
1829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2498              		.loc 1 1830 16
 2499 005c FB68     		ldr	r3, [r7, #12]
 2500 005e 1B6B     		ldr	r3, [r3, #48]
 2501              		.loc 1 1830 10
 2502 0060 012B     		cmp	r3, #1
 2503 0062 13D1     		bne	.L127
 2504              	.LBB5:
1831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2505              		.loc 1 1832 9
 2506 0064 0023     		movs	r3, #0
 2507 0066 3B61     		str	r3, [r7, #16]
 2508 0068 FB68     		ldr	r3, [r7, #12]
 2509 006a 1B68     		ldr	r3, [r3]
 2510 006c 1B68     		ldr	r3, [r3]
 2511 006e 3B61     		str	r3, [r7, #16]
 2512 0070 FB68     		ldr	r3, [r7, #12]
 2513 0072 1B68     		ldr	r3, [r3]
 2514 0074 5B68     		ldr	r3, [r3, #4]
 2515 0076 3B61     		str	r3, [r7, #16]
 2516 0078 3B69     		ldr	r3, [r7, #16]
 2517              	.LBE5:
1833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2518              		.loc 1 1833 9
 2519 007a FB68     		ldr	r3, [r7, #12]
 2520 007c 1B68     		ldr	r3, [r3]
 2521 007e DA68     		ldr	r2, [r3, #12]
 2522 0080 FB68     		ldr	r3, [r7, #12]
 2523 0082 1B68     		ldr	r3, [r3]
 2524 0084 42F01002 		orr	r2, r2, #16
 2525 0088 DA60     		str	r2, [r3, #12]
 2526 008a 01E0     		b	.L126
 2527              	.L127:
1834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 77


1837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            (Overrun error for instance).
1840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         status = HAL_ERROR;
 2528              		.loc 1 1841 16
 2529 008c 0123     		movs	r3, #1
 2530 008e FB75     		strb	r3, [r7, #23]
 2531              	.L126:
1842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return status;
 2532              		.loc 1 1845 12
 2533 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2534 0092 00E0     		b	.L124
 2535              	.L121:
1846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 2536              		.loc 1 1849 12
 2537 0094 0223     		movs	r3, #2
 2538              	.L124:
1850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2539              		.loc 1 1851 1
 2540 0096 1846     		mov	r0, r3
 2541 0098 1837     		adds	r7, r7, #24
 2542              		.cfi_def_cfa_offset 8
 2543 009a BD46     		mov	sp, r7
 2544              		.cfi_def_cfa_register 13
 2545              		@ sp needed
 2546 009c 80BD     		pop	{r7, pc}
 2547              		.cfi_endproc
 2548              	.LFE83:
 2550              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2551              		.align	1
 2552              		.global	HAL_UART_Abort
 2553              		.syntax unified
 2554              		.thumb
 2555              		.thumb_func
 2557              	HAL_UART_Abort:
 2558              	.LFB84:
1852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 78


1865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2559              		.loc 1 1866 1
 2560              		.cfi_startproc
 2561              		@ args = 0, pretend = 0, frame = 8
 2562              		@ frame_needed = 1, uses_anonymous_args = 0
 2563 0000 80B5     		push	{r7, lr}
 2564              		.cfi_def_cfa_offset 8
 2565              		.cfi_offset 7, -8
 2566              		.cfi_offset 14, -4
 2567 0002 82B0     		sub	sp, sp, #8
 2568              		.cfi_def_cfa_offset 16
 2569 0004 00AF     		add	r7, sp, #0
 2570              		.cfi_def_cfa_register 7
 2571 0006 7860     		str	r0, [r7, #4]
1867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2572              		.loc 1 1868 3
 2573 0008 7B68     		ldr	r3, [r7, #4]
 2574 000a 1B68     		ldr	r3, [r3]
 2575 000c DA68     		ldr	r2, [r3, #12]
 2576 000e 7B68     		ldr	r3, [r7, #4]
 2577 0010 1B68     		ldr	r3, [r3]
 2578 0012 22F4F072 		bic	r2, r2, #480
 2579 0016 DA60     		str	r2, [r3, #12]
1869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2580              		.loc 1 1869 3
 2581 0018 7B68     		ldr	r3, [r7, #4]
 2582 001a 1B68     		ldr	r3, [r3]
 2583 001c 5A69     		ldr	r2, [r3, #20]
 2584 001e 7B68     		ldr	r3, [r7, #4]
 2585 0020 1B68     		ldr	r3, [r3]
 2586 0022 22F00102 		bic	r2, r2, #1
 2587 0026 5A61     		str	r2, [r3, #20]
1870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2588              		.loc 1 1872 12
 2589 0028 7B68     		ldr	r3, [r7, #4]
 2590 002a 1B6B     		ldr	r3, [r3, #48]
 2591              		.loc 1 1872 6
 2592 002c 012B     		cmp	r3, #1
 2593 002e 07D1     		bne	.L129
1873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 2594              		.loc 1 1874 5
 2595 0030 7B68     		ldr	r3, [r7, #4]
 2596 0032 1B68     		ldr	r3, [r3]
 2597 0034 DA68     		ldr	r2, [r3, #12]
 2598 0036 7B68     		ldr	r3, [r7, #4]
 2599 0038 1B68     		ldr	r3, [r3]
 2600 003a 22F01002 		bic	r2, r2, #16
 2601 003e DA60     		str	r2, [r3, #12]
 2602              	.L129:
1875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 79


1878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2603              		.loc 1 1878 7
 2604 0040 7B68     		ldr	r3, [r7, #4]
 2605 0042 1B68     		ldr	r3, [r3]
 2606 0044 5B69     		ldr	r3, [r3, #20]
 2607 0046 03F08003 		and	r3, r3, #128
 2608              		.loc 1 1878 6
 2609 004a 002B     		cmp	r3, #0
 2610 004c 24D0     		beq	.L130
1879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2611              		.loc 1 1880 5
 2612 004e 7B68     		ldr	r3, [r7, #4]
 2613 0050 1B68     		ldr	r3, [r3]
 2614 0052 5A69     		ldr	r2, [r3, #20]
 2615 0054 7B68     		ldr	r3, [r7, #4]
 2616 0056 1B68     		ldr	r3, [r3]
 2617 0058 22F08002 		bic	r2, r2, #128
 2618 005c 5A61     		str	r2, [r3, #20]
1881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2619              		.loc 1 1883 14
 2620 005e 7B68     		ldr	r3, [r7, #4]
 2621 0060 5B6B     		ldr	r3, [r3, #52]
 2622              		.loc 1 1883 8
 2623 0062 002B     		cmp	r3, #0
 2624 0064 18D0     		beq	.L130
1884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2625              		.loc 1 1887 12
 2626 0066 7B68     		ldr	r3, [r7, #4]
 2627 0068 5B6B     		ldr	r3, [r3, #52]
 2628              		.loc 1 1887 40
 2629 006a 0022     		movs	r2, #0
 2630 006c 5A63     		str	r2, [r3, #52]
1888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2631              		.loc 1 1889 11
 2632 006e 7B68     		ldr	r3, [r7, #4]
 2633 0070 5B6B     		ldr	r3, [r3, #52]
 2634 0072 1846     		mov	r0, r3
 2635 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 2636 0078 0346     		mov	r3, r0
 2637              		.loc 1 1889 10
 2638 007a 002B     		cmp	r3, #0
 2639 007c 0CD0     		beq	.L130
1890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2640              		.loc 1 1891 13
 2641 007e 7B68     		ldr	r3, [r7, #4]
 2642 0080 5B6B     		ldr	r3, [r3, #52]
 2643 0082 1846     		mov	r0, r3
 2644 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2645 0088 0346     		mov	r3, r0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 80


 2646              		.loc 1 1891 12
 2647 008a 202B     		cmp	r3, #32
 2648 008c 04D1     		bne	.L130
1892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2649              		.loc 1 1894 28
 2650 008e 7B68     		ldr	r3, [r7, #4]
 2651 0090 1022     		movs	r2, #16
 2652 0092 1A64     		str	r2, [r3, #64]
1895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 2653              		.loc 1 1896 18
 2654 0094 0323     		movs	r3, #3
 2655 0096 40E0     		b	.L131
 2656              	.L130:
1897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2657              		.loc 1 1903 7
 2658 0098 7B68     		ldr	r3, [r7, #4]
 2659 009a 1B68     		ldr	r3, [r3]
 2660 009c 5B69     		ldr	r3, [r3, #20]
 2661 009e 03F04003 		and	r3, r3, #64
 2662              		.loc 1 1903 6
 2663 00a2 002B     		cmp	r3, #0
 2664 00a4 24D0     		beq	.L132
1904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2665              		.loc 1 1905 5
 2666 00a6 7B68     		ldr	r3, [r7, #4]
 2667 00a8 1B68     		ldr	r3, [r3]
 2668 00aa 5A69     		ldr	r2, [r3, #20]
 2669 00ac 7B68     		ldr	r3, [r7, #4]
 2670 00ae 1B68     		ldr	r3, [r3]
 2671 00b0 22F04002 		bic	r2, r2, #64
 2672 00b4 5A61     		str	r2, [r3, #20]
1906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2673              		.loc 1 1908 14
 2674 00b6 7B68     		ldr	r3, [r7, #4]
 2675 00b8 9B6B     		ldr	r3, [r3, #56]
 2676              		.loc 1 1908 8
 2677 00ba 002B     		cmp	r3, #0
 2678 00bc 18D0     		beq	.L132
1909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2679              		.loc 1 1912 12
 2680 00be 7B68     		ldr	r3, [r7, #4]
 2681 00c0 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 81


 2682              		.loc 1 1912 40
 2683 00c2 0022     		movs	r2, #0
 2684 00c4 5A63     		str	r2, [r3, #52]
1913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2685              		.loc 1 1914 11
 2686 00c6 7B68     		ldr	r3, [r7, #4]
 2687 00c8 9B6B     		ldr	r3, [r3, #56]
 2688 00ca 1846     		mov	r0, r3
 2689 00cc FFF7FEFF 		bl	HAL_DMA_Abort
 2690 00d0 0346     		mov	r3, r0
 2691              		.loc 1 1914 10
 2692 00d2 002B     		cmp	r3, #0
 2693 00d4 0CD0     		beq	.L132
1915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2694              		.loc 1 1916 13
 2695 00d6 7B68     		ldr	r3, [r7, #4]
 2696 00d8 9B6B     		ldr	r3, [r3, #56]
 2697 00da 1846     		mov	r0, r3
 2698 00dc FFF7FEFF 		bl	HAL_DMA_GetError
 2699 00e0 0346     		mov	r3, r0
 2700              		.loc 1 1916 12
 2701 00e2 202B     		cmp	r3, #32
 2702 00e4 04D1     		bne	.L132
1917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2703              		.loc 1 1919 28
 2704 00e6 7B68     		ldr	r3, [r7, #4]
 2705 00e8 1022     		movs	r2, #16
 2706 00ea 1A64     		str	r2, [r3, #64]
1920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 2707              		.loc 1 1921 18
 2708 00ec 0323     		movs	r3, #3
 2709 00ee 14E0     		b	.L131
 2710              	.L132:
1922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2711              		.loc 1 1928 22
 2712 00f0 7B68     		ldr	r3, [r7, #4]
 2713 00f2 0022     		movs	r2, #0
 2714 00f4 DA84     		strh	r2, [r3, #38]	@ movhi
1929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2715              		.loc 1 1929 22
 2716 00f6 7B68     		ldr	r3, [r7, #4]
 2717 00f8 0022     		movs	r2, #0
 2718 00fa DA85     		strh	r2, [r3, #46]	@ movhi
1930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 82


 2719              		.loc 1 1932 20
 2720 00fc 7B68     		ldr	r3, [r7, #4]
 2721 00fe 0022     		movs	r2, #0
 2722 0100 1A64     		str	r2, [r3, #64]
1933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2723              		.loc 1 1935 18
 2724 0102 7B68     		ldr	r3, [r7, #4]
 2725 0104 2022     		movs	r2, #32
 2726 0106 83F83E20 		strb	r2, [r3, #62]
1936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2727              		.loc 1 1936 17
 2728 010a 7B68     		ldr	r3, [r7, #4]
 2729 010c 2022     		movs	r2, #32
 2730 010e 83F83D20 		strb	r2, [r3, #61]
1937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2731              		.loc 1 1937 24
 2732 0112 7B68     		ldr	r3, [r7, #4]
 2733 0114 0022     		movs	r2, #0
 2734 0116 1A63     		str	r2, [r3, #48]
1938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2735              		.loc 1 1939 10
 2736 0118 0023     		movs	r3, #0
 2737              	.L131:
1940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2738              		.loc 1 1940 1
 2739 011a 1846     		mov	r0, r3
 2740 011c 0837     		adds	r7, r7, #8
 2741              		.cfi_def_cfa_offset 8
 2742 011e BD46     		mov	sp, r7
 2743              		.cfi_def_cfa_register 13
 2744              		@ sp needed
 2745 0120 80BD     		pop	{r7, pc}
 2746              		.cfi_endproc
 2747              	.LFE84:
 2749              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2750              		.align	1
 2751              		.global	HAL_UART_AbortTransmit
 2752              		.syntax unified
 2753              		.thumb
 2754              		.thumb_func
 2756              	HAL_UART_AbortTransmit:
 2757              	.LFB85:
1941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 83


1953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2758              		.loc 1 1955 1
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 8
 2761              		@ frame_needed = 1, uses_anonymous_args = 0
 2762 0000 80B5     		push	{r7, lr}
 2763              		.cfi_def_cfa_offset 8
 2764              		.cfi_offset 7, -8
 2765              		.cfi_offset 14, -4
 2766 0002 82B0     		sub	sp, sp, #8
 2767              		.cfi_def_cfa_offset 16
 2768 0004 00AF     		add	r7, sp, #0
 2769              		.cfi_def_cfa_register 7
 2770 0006 7860     		str	r0, [r7, #4]
1956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2771              		.loc 1 1957 3
 2772 0008 7B68     		ldr	r3, [r7, #4]
 2773 000a 1B68     		ldr	r3, [r3]
 2774 000c DA68     		ldr	r2, [r3, #12]
 2775 000e 7B68     		ldr	r3, [r7, #4]
 2776 0010 1B68     		ldr	r3, [r3]
 2777 0012 22F0C002 		bic	r2, r2, #192
 2778 0016 DA60     		str	r2, [r3, #12]
1958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2779              		.loc 1 1960 7
 2780 0018 7B68     		ldr	r3, [r7, #4]
 2781 001a 1B68     		ldr	r3, [r3]
 2782 001c 5B69     		ldr	r3, [r3, #20]
 2783 001e 03F08003 		and	r3, r3, #128
 2784              		.loc 1 1960 6
 2785 0022 002B     		cmp	r3, #0
 2786 0024 24D0     		beq	.L134
1961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2787              		.loc 1 1962 5
 2788 0026 7B68     		ldr	r3, [r7, #4]
 2789 0028 1B68     		ldr	r3, [r3]
 2790 002a 5A69     		ldr	r2, [r3, #20]
 2791 002c 7B68     		ldr	r3, [r7, #4]
 2792 002e 1B68     		ldr	r3, [r3]
 2793 0030 22F08002 		bic	r2, r2, #128
 2794 0034 5A61     		str	r2, [r3, #20]
1963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2795              		.loc 1 1965 14
 2796 0036 7B68     		ldr	r3, [r7, #4]
 2797 0038 5B6B     		ldr	r3, [r3, #52]
 2798              		.loc 1 1965 8
 2799 003a 002B     		cmp	r3, #0
 2800 003c 18D0     		beq	.L134
1966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 84


1967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2801              		.loc 1 1969 12
 2802 003e 7B68     		ldr	r3, [r7, #4]
 2803 0040 5B6B     		ldr	r3, [r3, #52]
 2804              		.loc 1 1969 40
 2805 0042 0022     		movs	r2, #0
 2806 0044 5A63     		str	r2, [r3, #52]
1970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2807              		.loc 1 1971 11
 2808 0046 7B68     		ldr	r3, [r7, #4]
 2809 0048 5B6B     		ldr	r3, [r3, #52]
 2810 004a 1846     		mov	r0, r3
 2811 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2812 0050 0346     		mov	r3, r0
 2813              		.loc 1 1971 10
 2814 0052 002B     		cmp	r3, #0
 2815 0054 0CD0     		beq	.L134
1972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2816              		.loc 1 1973 13
 2817 0056 7B68     		ldr	r3, [r7, #4]
 2818 0058 5B6B     		ldr	r3, [r3, #52]
 2819 005a 1846     		mov	r0, r3
 2820 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2821 0060 0346     		mov	r3, r0
 2822              		.loc 1 1973 12
 2823 0062 202B     		cmp	r3, #32
 2824 0064 04D1     		bne	.L134
1974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
1976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2825              		.loc 1 1976 28
 2826 0066 7B68     		ldr	r3, [r7, #4]
 2827 0068 1022     		movs	r2, #16
 2828 006a 1A64     		str	r2, [r3, #64]
1977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 2829              		.loc 1 1978 18
 2830 006c 0323     		movs	r3, #3
 2831 006e 07E0     		b	.L135
 2832              	.L134:
1979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2833              		.loc 1 1985 22
 2834 0070 7B68     		ldr	r3, [r7, #4]
 2835 0072 0022     		movs	r2, #0
 2836 0074 DA84     		strh	r2, [r3, #38]	@ movhi
1986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 85


1988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2837              		.loc 1 1988 17
 2838 0076 7B68     		ldr	r3, [r7, #4]
 2839 0078 2022     		movs	r2, #32
 2840 007a 83F83D20 		strb	r2, [r3, #61]
1989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2841              		.loc 1 1990 10
 2842 007e 0023     		movs	r3, #0
 2843              	.L135:
1991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2844              		.loc 1 1991 1
 2845 0080 1846     		mov	r0, r3
 2846 0082 0837     		adds	r7, r7, #8
 2847              		.cfi_def_cfa_offset 8
 2848 0084 BD46     		mov	sp, r7
 2849              		.cfi_def_cfa_register 13
 2850              		@ sp needed
 2851 0086 80BD     		pop	{r7, pc}
 2852              		.cfi_endproc
 2853              	.LFE85:
 2855              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2856              		.align	1
 2857              		.global	HAL_UART_AbortReceive
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2862              	HAL_UART_AbortReceive:
 2863              	.LFB86:
1992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2864              		.loc 1 2006 1
 2865              		.cfi_startproc
 2866              		@ args = 0, pretend = 0, frame = 8
 2867              		@ frame_needed = 1, uses_anonymous_args = 0
 2868 0000 80B5     		push	{r7, lr}
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 82B0     		sub	sp, sp, #8
 2873              		.cfi_def_cfa_offset 16
 2874 0004 00AF     		add	r7, sp, #0
 2875              		.cfi_def_cfa_register 7
 2876 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 86


2007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2877              		.loc 1 2008 3
 2878 0008 7B68     		ldr	r3, [r7, #4]
 2879 000a 1B68     		ldr	r3, [r3]
 2880 000c DA68     		ldr	r2, [r3, #12]
 2881 000e 7B68     		ldr	r3, [r7, #4]
 2882 0010 1B68     		ldr	r3, [r3]
 2883 0012 22F49072 		bic	r2, r2, #288
 2884 0016 DA60     		str	r2, [r3, #12]
2009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2885              		.loc 1 2009 3
 2886 0018 7B68     		ldr	r3, [r7, #4]
 2887 001a 1B68     		ldr	r3, [r3]
 2888 001c 5A69     		ldr	r2, [r3, #20]
 2889 001e 7B68     		ldr	r3, [r7, #4]
 2890 0020 1B68     		ldr	r3, [r3]
 2891 0022 22F00102 		bic	r2, r2, #1
 2892 0026 5A61     		str	r2, [r3, #20]
2010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2893              		.loc 1 2012 12
 2894 0028 7B68     		ldr	r3, [r7, #4]
 2895 002a 1B6B     		ldr	r3, [r3, #48]
 2896              		.loc 1 2012 6
 2897 002c 012B     		cmp	r3, #1
 2898 002e 07D1     		bne	.L137
2013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 2899              		.loc 1 2014 5
 2900 0030 7B68     		ldr	r3, [r7, #4]
 2901 0032 1B68     		ldr	r3, [r3]
 2902 0034 DA68     		ldr	r2, [r3, #12]
 2903 0036 7B68     		ldr	r3, [r7, #4]
 2904 0038 1B68     		ldr	r3, [r3]
 2905 003a 22F01002 		bic	r2, r2, #16
 2906 003e DA60     		str	r2, [r3, #12]
 2907              	.L137:
2015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2908              		.loc 1 2018 7
 2909 0040 7B68     		ldr	r3, [r7, #4]
 2910 0042 1B68     		ldr	r3, [r3]
 2911 0044 5B69     		ldr	r3, [r3, #20]
 2912 0046 03F04003 		and	r3, r3, #64
 2913              		.loc 1 2018 6
 2914 004a 002B     		cmp	r3, #0
 2915 004c 24D0     		beq	.L138
2019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2916              		.loc 1 2020 5
 2917 004e 7B68     		ldr	r3, [r7, #4]
 2918 0050 1B68     		ldr	r3, [r3]
 2919 0052 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 87


 2920 0054 7B68     		ldr	r3, [r7, #4]
 2921 0056 1B68     		ldr	r3, [r3]
 2922 0058 22F04002 		bic	r2, r2, #64
 2923 005c 5A61     		str	r2, [r3, #20]
2021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2924              		.loc 1 2023 14
 2925 005e 7B68     		ldr	r3, [r7, #4]
 2926 0060 9B6B     		ldr	r3, [r3, #56]
 2927              		.loc 1 2023 8
 2928 0062 002B     		cmp	r3, #0
 2929 0064 18D0     		beq	.L138
2024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2930              		.loc 1 2027 12
 2931 0066 7B68     		ldr	r3, [r7, #4]
 2932 0068 9B6B     		ldr	r3, [r3, #56]
 2933              		.loc 1 2027 40
 2934 006a 0022     		movs	r2, #0
 2935 006c 5A63     		str	r2, [r3, #52]
2028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2936              		.loc 1 2029 11
 2937 006e 7B68     		ldr	r3, [r7, #4]
 2938 0070 9B6B     		ldr	r3, [r3, #56]
 2939 0072 1846     		mov	r0, r3
 2940 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 2941 0078 0346     		mov	r3, r0
 2942              		.loc 1 2029 10
 2943 007a 002B     		cmp	r3, #0
 2944 007c 0CD0     		beq	.L138
2030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2945              		.loc 1 2031 13
 2946 007e 7B68     		ldr	r3, [r7, #4]
 2947 0080 9B6B     		ldr	r3, [r3, #56]
 2948 0082 1846     		mov	r0, r3
 2949 0084 FFF7FEFF 		bl	HAL_DMA_GetError
 2950 0088 0346     		mov	r3, r0
 2951              		.loc 1 2031 12
 2952 008a 202B     		cmp	r3, #32
 2953 008c 04D1     		bne	.L138
2032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Set error code to DMA */
2034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2954              		.loc 1 2034 28
 2955 008e 7B68     		ldr	r3, [r7, #4]
 2956 0090 1022     		movs	r2, #16
 2957 0092 1A64     		str	r2, [r3, #64]
2035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 2958              		.loc 1 2036 18
 2959 0094 0323     		movs	r3, #3
 2960 0096 0AE0     		b	.L139
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 88


 2961              	.L138:
2037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
2043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2962              		.loc 1 2043 22
 2963 0098 7B68     		ldr	r3, [r7, #4]
 2964 009a 0022     		movs	r2, #0
 2965 009c DA85     		strh	r2, [r3, #46]	@ movhi
2044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2966              		.loc 1 2046 18
 2967 009e 7B68     		ldr	r3, [r7, #4]
 2968 00a0 2022     		movs	r2, #32
 2969 00a2 83F83E20 		strb	r2, [r3, #62]
2047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2970              		.loc 1 2047 24
 2971 00a6 7B68     		ldr	r3, [r7, #4]
 2972 00a8 0022     		movs	r2, #0
 2973 00aa 1A63     		str	r2, [r3, #48]
2048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2974              		.loc 1 2049 10
 2975 00ac 0023     		movs	r3, #0
 2976              	.L139:
2050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2977              		.loc 1 2050 1
 2978 00ae 1846     		mov	r0, r3
 2979 00b0 0837     		adds	r7, r7, #8
 2980              		.cfi_def_cfa_offset 8
 2981 00b2 BD46     		mov	sp, r7
 2982              		.cfi_def_cfa_register 13
 2983              		@ sp needed
 2984 00b4 80BD     		pop	{r7, pc}
 2985              		.cfi_endproc
 2986              	.LFE86:
 2988              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2989              		.align	1
 2990              		.global	HAL_UART_Abort_IT
 2991              		.syntax unified
 2992              		.thumb
 2993              		.thumb_func
 2995              	HAL_UART_Abort_IT:
 2996              	.LFB87:
2051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 89


2060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2997              		.loc 1 2067 1
 2998              		.cfi_startproc
 2999              		@ args = 0, pretend = 0, frame = 16
 3000              		@ frame_needed = 1, uses_anonymous_args = 0
 3001 0000 80B5     		push	{r7, lr}
 3002              		.cfi_def_cfa_offset 8
 3003              		.cfi_offset 7, -8
 3004              		.cfi_offset 14, -4
 3005 0002 84B0     		sub	sp, sp, #16
 3006              		.cfi_def_cfa_offset 24
 3007 0004 00AF     		add	r7, sp, #0
 3008              		.cfi_def_cfa_register 7
 3009 0006 7860     		str	r0, [r7, #4]
2068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3010              		.loc 1 2068 12
 3011 0008 0123     		movs	r3, #1
 3012 000a FB60     		str	r3, [r7, #12]
2069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 3013              		.loc 1 2071 3
 3014 000c 7B68     		ldr	r3, [r7, #4]
 3015 000e 1B68     		ldr	r3, [r3]
 3016 0010 DA68     		ldr	r2, [r3, #12]
 3017 0012 7B68     		ldr	r3, [r7, #4]
 3018 0014 1B68     		ldr	r3, [r3]
 3019 0016 22F4F072 		bic	r2, r2, #480
 3020 001a DA60     		str	r2, [r3, #12]
2072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3021              		.loc 1 2072 3
 3022 001c 7B68     		ldr	r3, [r7, #4]
 3023 001e 1B68     		ldr	r3, [r3]
 3024 0020 5A69     		ldr	r2, [r3, #20]
 3025 0022 7B68     		ldr	r3, [r7, #4]
 3026 0024 1B68     		ldr	r3, [r3]
 3027 0026 22F00102 		bic	r2, r2, #1
 3028 002a 5A61     		str	r2, [r3, #20]
2073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3029              		.loc 1 2075 12
 3030 002c 7B68     		ldr	r3, [r7, #4]
 3031 002e 1B6B     		ldr	r3, [r3, #48]
 3032              		.loc 1 2075 6
 3033 0030 012B     		cmp	r3, #1
 3034 0032 07D1     		bne	.L141
2076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3035              		.loc 1 2077 5
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 90


 3036 0034 7B68     		ldr	r3, [r7, #4]
 3037 0036 1B68     		ldr	r3, [r3]
 3038 0038 DA68     		ldr	r2, [r3, #12]
 3039 003a 7B68     		ldr	r3, [r7, #4]
 3040 003c 1B68     		ldr	r3, [r3]
 3041 003e 22F01002 		bic	r2, r2, #16
 3042 0042 DA60     		str	r2, [r3, #12]
 3043              	.L141:
2078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
2082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 3044              		.loc 1 2083 12
 3045 0044 7B68     		ldr	r3, [r7, #4]
 3046 0046 5B6B     		ldr	r3, [r3, #52]
 3047              		.loc 1 2083 6
 3048 0048 002B     		cmp	r3, #0
 3049 004a 0FD0     		beq	.L142
2084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3050              		.loc 1 2087 9
 3051 004c 7B68     		ldr	r3, [r7, #4]
 3052 004e 1B68     		ldr	r3, [r3]
 3053 0050 5B69     		ldr	r3, [r3, #20]
 3054 0052 03F08003 		and	r3, r3, #128
 3055              		.loc 1 2087 8
 3056 0056 002B     		cmp	r3, #0
 3057 0058 04D0     		beq	.L143
2088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 3058              		.loc 1 2089 12
 3059 005a 7B68     		ldr	r3, [r7, #4]
 3060 005c 5B6B     		ldr	r3, [r3, #52]
 3061              		.loc 1 2089 40
 3062 005e 404A     		ldr	r2, .L152
 3063 0060 5A63     		str	r2, [r3, #52]
 3064 0062 03E0     		b	.L142
 3065              	.L143:
2090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3066              		.loc 1 2093 12
 3067 0064 7B68     		ldr	r3, [r7, #4]
 3068 0066 5B6B     		ldr	r3, [r3, #52]
 3069              		.loc 1 2093 40
 3070 0068 0022     		movs	r2, #0
 3071 006a 5A63     		str	r2, [r3, #52]
 3072              	.L142:
2094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 91


 3073              		.loc 1 2097 12
 3074 006c 7B68     		ldr	r3, [r7, #4]
 3075 006e 9B6B     		ldr	r3, [r3, #56]
 3076              		.loc 1 2097 6
 3077 0070 002B     		cmp	r3, #0
 3078 0072 0FD0     		beq	.L144
2098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
2101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3079              		.loc 1 2101 9
 3080 0074 7B68     		ldr	r3, [r7, #4]
 3081 0076 1B68     		ldr	r3, [r3]
 3082 0078 5B69     		ldr	r3, [r3, #20]
 3083 007a 03F04003 		and	r3, r3, #64
 3084              		.loc 1 2101 8
 3085 007e 002B     		cmp	r3, #0
 3086 0080 04D0     		beq	.L145
2102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 3087              		.loc 1 2103 12
 3088 0082 7B68     		ldr	r3, [r7, #4]
 3089 0084 9B6B     		ldr	r3, [r3, #56]
 3090              		.loc 1 2103 40
 3091 0086 374A     		ldr	r2, .L152+4
 3092 0088 5A63     		str	r2, [r3, #52]
 3093 008a 03E0     		b	.L144
 3094              	.L145:
2104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3095              		.loc 1 2107 12
 3096 008c 7B68     		ldr	r3, [r7, #4]
 3097 008e 9B6B     		ldr	r3, [r3, #56]
 3098              		.loc 1 2107 40
 3099 0090 0022     		movs	r2, #0
 3100 0092 5A63     		str	r2, [r3, #52]
 3101              	.L144:
2108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3102              		.loc 1 2112 7
 3103 0094 7B68     		ldr	r3, [r7, #4]
 3104 0096 1B68     		ldr	r3, [r3]
 3105 0098 5B69     		ldr	r3, [r3, #20]
 3106 009a 03F08003 		and	r3, r3, #128
 3107              		.loc 1 2112 6
 3108 009e 002B     		cmp	r3, #0
 3109 00a0 1AD0     		beq	.L146
2113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3110              		.loc 1 2115 5
 3111 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 92


 3112 00a4 1B68     		ldr	r3, [r3]
 3113 00a6 5A69     		ldr	r2, [r3, #20]
 3114 00a8 7B68     		ldr	r3, [r7, #4]
 3115 00aa 1B68     		ldr	r3, [r3]
 3116 00ac 22F08002 		bic	r2, r2, #128
 3117 00b0 5A61     		str	r2, [r3, #20]
2116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3118              		.loc 1 2118 14
 3119 00b2 7B68     		ldr	r3, [r7, #4]
 3120 00b4 5B6B     		ldr	r3, [r3, #52]
 3121              		.loc 1 2118 8
 3122 00b6 002B     		cmp	r3, #0
 3123 00b8 0ED0     		beq	.L146
2119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
2124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3124              		.loc 1 2124 11
 3125 00ba 7B68     		ldr	r3, [r7, #4]
 3126 00bc 5B6B     		ldr	r3, [r3, #52]
 3127 00be 1846     		mov	r0, r3
 3128 00c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3129 00c4 0346     		mov	r3, r0
 3130              		.loc 1 2124 10
 3131 00c6 002B     		cmp	r3, #0
 3132 00c8 04D0     		beq	.L147
2125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3133              		.loc 1 2126 14
 3134 00ca 7B68     		ldr	r3, [r7, #4]
 3135 00cc 5B6B     		ldr	r3, [r3, #52]
 3136              		.loc 1 2126 42
 3137 00ce 0022     		movs	r2, #0
 3138 00d0 5A63     		str	r2, [r3, #52]
 3139 00d2 01E0     		b	.L146
 3140              	.L147:
2127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
 3141              		.loc 1 2130 19
 3142 00d4 0023     		movs	r3, #0
 3143 00d6 FB60     		str	r3, [r7, #12]
 3144              	.L146:
2131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3145              		.loc 1 2136 7
 3146 00d8 7B68     		ldr	r3, [r7, #4]
 3147 00da 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 93


 3148 00dc 5B69     		ldr	r3, [r3, #20]
 3149 00de 03F04003 		and	r3, r3, #64
 3150              		.loc 1 2136 6
 3151 00e2 002B     		cmp	r3, #0
 3152 00e4 1CD0     		beq	.L148
2137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3153              		.loc 1 2138 5
 3154 00e6 7B68     		ldr	r3, [r7, #4]
 3155 00e8 1B68     		ldr	r3, [r3]
 3156 00ea 5A69     		ldr	r2, [r3, #20]
 3157 00ec 7B68     		ldr	r3, [r7, #4]
 3158 00ee 1B68     		ldr	r3, [r3]
 3159 00f0 22F04002 		bic	r2, r2, #64
 3160 00f4 5A61     		str	r2, [r3, #20]
2139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3161              		.loc 1 2141 14
 3162 00f6 7B68     		ldr	r3, [r7, #4]
 3163 00f8 9B6B     		ldr	r3, [r3, #56]
 3164              		.loc 1 2141 8
 3165 00fa 002B     		cmp	r3, #0
 3166 00fc 10D0     		beq	.L148
2142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3167              		.loc 1 2147 11
 3168 00fe 7B68     		ldr	r3, [r7, #4]
 3169 0100 9B6B     		ldr	r3, [r3, #56]
 3170 0102 1846     		mov	r0, r3
 3171 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3172 0108 0346     		mov	r3, r0
 3173              		.loc 1 2147 10
 3174 010a 002B     		cmp	r3, #0
 3175 010c 06D0     		beq	.L149
2148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3176              		.loc 1 2149 14
 3177 010e 7B68     		ldr	r3, [r7, #4]
 3178 0110 9B6B     		ldr	r3, [r3, #56]
 3179              		.loc 1 2149 42
 3180 0112 0022     		movs	r2, #0
 3181 0114 5A63     		str	r2, [r3, #52]
2150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 3182              		.loc 1 2150 19
 3183 0116 0123     		movs	r3, #1
 3184 0118 FB60     		str	r3, [r7, #12]
 3185 011a 01E0     		b	.L148
 3186              	.L149:
2151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 94


 3187              		.loc 1 2154 19
 3188 011c 0023     		movs	r3, #0
 3189 011e FB60     		str	r3, [r7, #12]
 3190              	.L148:
2155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 3191              		.loc 1 2160 6
 3192 0120 FB68     		ldr	r3, [r7, #12]
 3193 0122 012B     		cmp	r3, #1
 3194 0124 16D1     		bne	.L150
2161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 3195              		.loc 1 2163 24
 3196 0126 7B68     		ldr	r3, [r7, #4]
 3197 0128 0022     		movs	r2, #0
 3198 012a DA84     		strh	r2, [r3, #38]	@ movhi
2164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3199              		.loc 1 2164 24
 3200 012c 7B68     		ldr	r3, [r7, #4]
 3201 012e 0022     		movs	r2, #0
 3202 0130 DA85     		strh	r2, [r3, #46]	@ movhi
2165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
2167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3203              		.loc 1 2167 22
 3204 0132 7B68     		ldr	r3, [r7, #4]
 3205 0134 0022     		movs	r2, #0
 3206 0136 1A64     		str	r2, [r3, #64]
2168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3207              		.loc 1 2170 20
 3208 0138 7B68     		ldr	r3, [r7, #4]
 3209 013a 2022     		movs	r2, #32
 3210 013c 83F83D20 		strb	r2, [r3, #61]
2171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3211              		.loc 1 2171 20
 3212 0140 7B68     		ldr	r3, [r7, #4]
 3213 0142 2022     		movs	r2, #32
 3214 0144 83F83E20 		strb	r2, [r3, #62]
2172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3215              		.loc 1 2172 26
 3216 0148 7B68     		ldr	r3, [r7, #4]
 3217 014a 0022     		movs	r2, #0
 3218 014c 1A63     		str	r2, [r3, #48]
2173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort complete callback */
2177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 95


2180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3219              		.loc 1 2180 5
 3220 014e 7868     		ldr	r0, [r7, #4]
 3221 0150 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3222              	.L150:
2181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3223              		.loc 1 2184 10
 3224 0154 0023     		movs	r3, #0
2185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3225              		.loc 1 2185 1
 3226 0156 1846     		mov	r0, r3
 3227 0158 1037     		adds	r7, r7, #16
 3228              		.cfi_def_cfa_offset 8
 3229 015a BD46     		mov	sp, r7
 3230              		.cfi_def_cfa_register 13
 3231              		@ sp needed
 3232 015c 80BD     		pop	{r7, pc}
 3233              	.L153:
 3234 015e 00BF     		.align	2
 3235              	.L152:
 3236 0160 00000000 		.word	UART_DMATxAbortCallback
 3237 0164 00000000 		.word	UART_DMARxAbortCallback
 3238              		.cfi_endproc
 3239              	.LFE87:
 3241              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3242              		.align	1
 3243              		.global	HAL_UART_AbortTransmit_IT
 3244              		.syntax unified
 3245              		.thumb
 3246              		.thumb_func
 3248              	HAL_UART_AbortTransmit_IT:
 3249              	.LFB88:
2186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3250              		.loc 1 2202 1
 3251              		.cfi_startproc
 3252              		@ args = 0, pretend = 0, frame = 8
 3253              		@ frame_needed = 1, uses_anonymous_args = 0
 3254 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 96


 3255              		.cfi_def_cfa_offset 8
 3256              		.cfi_offset 7, -8
 3257              		.cfi_offset 14, -4
 3258 0002 82B0     		sub	sp, sp, #8
 3259              		.cfi_def_cfa_offset 16
 3260 0004 00AF     		add	r7, sp, #0
 3261              		.cfi_def_cfa_register 7
 3262 0006 7860     		str	r0, [r7, #4]
2203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3263              		.loc 1 2204 3
 3264 0008 7B68     		ldr	r3, [r7, #4]
 3265 000a 1B68     		ldr	r3, [r3]
 3266 000c DA68     		ldr	r2, [r3, #12]
 3267 000e 7B68     		ldr	r3, [r7, #4]
 3268 0010 1B68     		ldr	r3, [r3]
 3269 0012 22F0C002 		bic	r2, r2, #192
 3270 0016 DA60     		str	r2, [r3, #12]
2205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3271              		.loc 1 2207 7
 3272 0018 7B68     		ldr	r3, [r7, #4]
 3273 001a 1B68     		ldr	r3, [r3]
 3274 001c 5B69     		ldr	r3, [r3, #20]
 3275 001e 03F08003 		and	r3, r3, #128
 3276              		.loc 1 2207 6
 3277 0022 002B     		cmp	r3, #0
 3278 0024 2AD0     		beq	.L155
2208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3279              		.loc 1 2209 5
 3280 0026 7B68     		ldr	r3, [r7, #4]
 3281 0028 1B68     		ldr	r3, [r3]
 3282 002a 5A69     		ldr	r2, [r3, #20]
 3283 002c 7B68     		ldr	r3, [r7, #4]
 3284 002e 1B68     		ldr	r3, [r3]
 3285 0030 22F08002 		bic	r2, r2, #128
 3286 0034 5A61     		str	r2, [r3, #20]
2210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
2212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3287              		.loc 1 2212 14
 3288 0036 7B68     		ldr	r3, [r7, #4]
 3289 0038 5B6B     		ldr	r3, [r3, #52]
 3290              		.loc 1 2212 8
 3291 003a 002B     		cmp	r3, #0
 3292 003c 13D0     		beq	.L156
2213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3293              		.loc 1 2216 12
 3294 003e 7B68     		ldr	r3, [r7, #4]
 3295 0040 5B6B     		ldr	r3, [r3, #52]
 3296              		.loc 1 2216 40
 3297 0042 164A     		ldr	r2, .L159
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 97


 3298 0044 5A63     		str	r2, [r3, #52]
2217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
2219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3299              		.loc 1 2219 11
 3300 0046 7B68     		ldr	r3, [r7, #4]
 3301 0048 5B6B     		ldr	r3, [r3, #52]
 3302 004a 1846     		mov	r0, r3
 3303 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3304 0050 0346     		mov	r3, r0
 3305              		.loc 1 2219 10
 3306 0052 002B     		cmp	r3, #0
 3307 0054 1CD0     		beq	.L157
2220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3308              		.loc 1 2222 14
 3309 0056 7B68     		ldr	r3, [r7, #4]
 3310 0058 5B6B     		ldr	r3, [r3, #52]
 3311              		.loc 1 2222 22
 3312 005a 5B6B     		ldr	r3, [r3, #52]
 3313              		.loc 1 2222 47
 3314 005c 7A68     		ldr	r2, [r7, #4]
 3315 005e 526B     		ldr	r2, [r2, #52]
 3316              		.loc 1 2222 9
 3317 0060 1046     		mov	r0, r2
 3318 0062 9847     		blx	r3
 3319              	.LVL0:
 3320 0064 14E0     		b	.L157
 3321              	.L156:
2223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
2228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 3322              		.loc 1 2228 26
 3323 0066 7B68     		ldr	r3, [r7, #4]
 3324 0068 0022     		movs	r2, #0
 3325 006a DA84     		strh	r2, [r3, #38]	@ movhi
2229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3326              		.loc 1 2231 21
 3327 006c 7B68     		ldr	r3, [r7, #4]
 3328 006e 2022     		movs	r2, #32
 3329 0070 83F83D20 		strb	r2, [r3, #61]
2232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3330              		.loc 1 2239 7
 3331 0074 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 98


 3332 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3333 007a 09E0     		b	.L157
 3334              	.L155:
2240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
2246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 3335              		.loc 1 2246 24
 3336 007c 7B68     		ldr	r3, [r7, #4]
 3337 007e 0022     		movs	r2, #0
 3338 0080 DA84     		strh	r2, [r3, #38]	@ movhi
2247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3339              		.loc 1 2249 19
 3340 0082 7B68     		ldr	r3, [r7, #4]
 3341 0084 2022     		movs	r2, #32
 3342 0086 83F83D20 		strb	r2, [r3, #61]
2250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3343              		.loc 1 2257 5
 3344 008a 7868     		ldr	r0, [r7, #4]
 3345 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3346              	.L157:
2258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3347              		.loc 1 2261 10
 3348 0090 0023     		movs	r3, #0
2262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3349              		.loc 1 2262 1
 3350 0092 1846     		mov	r0, r3
 3351 0094 0837     		adds	r7, r7, #8
 3352              		.cfi_def_cfa_offset 8
 3353 0096 BD46     		mov	sp, r7
 3354              		.cfi_def_cfa_register 13
 3355              		@ sp needed
 3356 0098 80BD     		pop	{r7, pc}
 3357              	.L160:
 3358 009a 00BF     		.align	2
 3359              	.L159:
 3360 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 3361              		.cfi_endproc
 3362              	.LFE88:
 3364              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3365              		.align	1
 3366              		.global	HAL_UART_AbortReceive_IT
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 99


 3367              		.syntax unified
 3368              		.thumb
 3369              		.thumb_func
 3371              	HAL_UART_AbortReceive_IT:
 3372              	.LFB89:
2263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
2269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
2273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
2278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3373              		.loc 1 2279 1
 3374              		.cfi_startproc
 3375              		@ args = 0, pretend = 0, frame = 8
 3376              		@ frame_needed = 1, uses_anonymous_args = 0
 3377 0000 80B5     		push	{r7, lr}
 3378              		.cfi_def_cfa_offset 8
 3379              		.cfi_offset 7, -8
 3380              		.cfi_offset 14, -4
 3381 0002 82B0     		sub	sp, sp, #8
 3382              		.cfi_def_cfa_offset 16
 3383 0004 00AF     		add	r7, sp, #0
 3384              		.cfi_def_cfa_register 7
 3385 0006 7860     		str	r0, [r7, #4]
2280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3386              		.loc 1 2281 3
 3387 0008 7B68     		ldr	r3, [r7, #4]
 3388 000a 1B68     		ldr	r3, [r3]
 3389 000c DA68     		ldr	r2, [r3, #12]
 3390 000e 7B68     		ldr	r3, [r7, #4]
 3391 0010 1B68     		ldr	r3, [r3]
 3392 0012 22F49072 		bic	r2, r2, #288
 3393 0016 DA60     		str	r2, [r3, #12]
2282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3394              		.loc 1 2282 3
 3395 0018 7B68     		ldr	r3, [r7, #4]
 3396 001a 1B68     		ldr	r3, [r3]
 3397 001c 5A69     		ldr	r2, [r3, #20]
 3398 001e 7B68     		ldr	r3, [r7, #4]
 3399 0020 1B68     		ldr	r3, [r3]
 3400 0022 22F00102 		bic	r2, r2, #1
 3401 0026 5A61     		str	r2, [r3, #20]
2283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 100


 3402              		.loc 1 2285 12
 3403 0028 7B68     		ldr	r3, [r7, #4]
 3404 002a 1B6B     		ldr	r3, [r3, #48]
 3405              		.loc 1 2285 6
 3406 002c 012B     		cmp	r3, #1
 3407 002e 07D1     		bne	.L162
2286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3408              		.loc 1 2287 5
 3409 0030 7B68     		ldr	r3, [r7, #4]
 3410 0032 1B68     		ldr	r3, [r3]
 3411 0034 DA68     		ldr	r2, [r3, #12]
 3412 0036 7B68     		ldr	r3, [r7, #4]
 3413 0038 1B68     		ldr	r3, [r3]
 3414 003a 22F01002 		bic	r2, r2, #16
 3415 003e DA60     		str	r2, [r3, #12]
 3416              	.L162:
2288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3417              		.loc 1 2291 7
 3418 0040 7B68     		ldr	r3, [r7, #4]
 3419 0042 1B68     		ldr	r3, [r3]
 3420 0044 5B69     		ldr	r3, [r3, #20]
 3421 0046 03F04003 		and	r3, r3, #64
 3422              		.loc 1 2291 6
 3423 004a 002B     		cmp	r3, #0
 3424 004c 2DD0     		beq	.L163
2292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3425              		.loc 1 2293 5
 3426 004e 7B68     		ldr	r3, [r7, #4]
 3427 0050 1B68     		ldr	r3, [r3]
 3428 0052 5A69     		ldr	r2, [r3, #20]
 3429 0054 7B68     		ldr	r3, [r7, #4]
 3430 0056 1B68     		ldr	r3, [r3]
 3431 0058 22F04002 		bic	r2, r2, #64
 3432 005c 5A61     		str	r2, [r3, #20]
2294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
2296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3433              		.loc 1 2296 14
 3434 005e 7B68     		ldr	r3, [r7, #4]
 3435 0060 9B6B     		ldr	r3, [r3, #56]
 3436              		.loc 1 2296 8
 3437 0062 002B     		cmp	r3, #0
 3438 0064 13D0     		beq	.L164
2297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3439              		.loc 1 2300 12
 3440 0066 7B68     		ldr	r3, [r7, #4]
 3441 0068 9B6B     		ldr	r3, [r3, #56]
 3442              		.loc 1 2300 40
 3443 006a 194A     		ldr	r2, .L167
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 101


 3444 006c 5A63     		str	r2, [r3, #52]
2301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
2303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3445              		.loc 1 2303 11
 3446 006e 7B68     		ldr	r3, [r7, #4]
 3447 0070 9B6B     		ldr	r3, [r3, #56]
 3448 0072 1846     		mov	r0, r3
 3449 0074 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3450 0078 0346     		mov	r3, r0
 3451              		.loc 1 2303 10
 3452 007a 002B     		cmp	r3, #0
 3453 007c 22D0     		beq	.L165
2304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3454              		.loc 1 2306 14
 3455 007e 7B68     		ldr	r3, [r7, #4]
 3456 0080 9B6B     		ldr	r3, [r3, #56]
 3457              		.loc 1 2306 22
 3458 0082 5B6B     		ldr	r3, [r3, #52]
 3459              		.loc 1 2306 47
 3460 0084 7A68     		ldr	r2, [r7, #4]
 3461 0086 926B     		ldr	r2, [r2, #56]
 3462              		.loc 1 2306 9
 3463 0088 1046     		mov	r0, r2
 3464 008a 9847     		blx	r3
 3465              	.LVL1:
 3466 008c 1AE0     		b	.L165
 3467              	.L164:
2307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
2312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 3468              		.loc 1 2312 26
 3469 008e 7B68     		ldr	r3, [r7, #4]
 3470 0090 0022     		movs	r2, #0
 3471 0092 DA85     		strh	r2, [r3, #46]	@ movhi
2313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3472              		.loc 1 2315 22
 3473 0094 7B68     		ldr	r3, [r7, #4]
 3474 0096 2022     		movs	r2, #32
 3475 0098 83F83E20 		strb	r2, [r3, #62]
2316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3476              		.loc 1 2316 28
 3477 009c 7B68     		ldr	r3, [r7, #4]
 3478 009e 0022     		movs	r2, #0
 3479 00a0 1A63     		str	r2, [r3, #48]
2317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 102


2322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3480              		.loc 1 2324 7
 3481 00a2 7868     		ldr	r0, [r7, #4]
 3482 00a4 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3483 00a8 0CE0     		b	.L165
 3484              	.L163:
2325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
2331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3485              		.loc 1 2331 24
 3486 00aa 7B68     		ldr	r3, [r7, #4]
 3487 00ac 0022     		movs	r2, #0
 3488 00ae DA85     		strh	r2, [r3, #46]	@ movhi
2332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3489              		.loc 1 2334 20
 3490 00b0 7B68     		ldr	r3, [r7, #4]
 3491 00b2 2022     		movs	r2, #32
 3492 00b4 83F83E20 		strb	r2, [r3, #62]
2335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3493              		.loc 1 2335 26
 3494 00b8 7B68     		ldr	r3, [r7, #4]
 3495 00ba 0022     		movs	r2, #0
 3496 00bc 1A63     		str	r2, [r3, #48]
2336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3497              		.loc 1 2343 5
 3498 00be 7868     		ldr	r0, [r7, #4]
 3499 00c0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3500              	.L165:
2344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 3501              		.loc 1 2347 10
 3502 00c4 0023     		movs	r3, #0
2348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3503              		.loc 1 2348 1
 3504 00c6 1846     		mov	r0, r3
 3505 00c8 0837     		adds	r7, r7, #8
 3506              		.cfi_def_cfa_offset 8
 3507 00ca BD46     		mov	sp, r7
 3508              		.cfi_def_cfa_register 13
 3509              		@ sp needed
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 103


 3510 00cc 80BD     		pop	{r7, pc}
 3511              	.L168:
 3512 00ce 00BF     		.align	2
 3513              	.L167:
 3514 00d0 00000000 		.word	UART_DMARxOnlyAbortCallback
 3515              		.cfi_endproc
 3516              	.LFE89:
 3518              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3519              		.align	1
 3520              		.global	HAL_UART_IRQHandler
 3521              		.syntax unified
 3522              		.thumb
 3523              		.thumb_func
 3525              	HAL_UART_IRQHandler:
 3526              	.LFB90:
2349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3527              		.loc 1 2357 1
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 40
 3530              		@ frame_needed = 1, uses_anonymous_args = 0
 3531 0000 80B5     		push	{r7, lr}
 3532              		.cfi_def_cfa_offset 8
 3533              		.cfi_offset 7, -8
 3534              		.cfi_offset 14, -4
 3535 0002 8AB0     		sub	sp, sp, #40
 3536              		.cfi_def_cfa_offset 48
 3537 0004 00AF     		add	r7, sp, #0
 3538              		.cfi_def_cfa_register 7
 3539 0006 7860     		str	r0, [r7, #4]
2358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3540              		.loc 1 2358 25
 3541 0008 7B68     		ldr	r3, [r7, #4]
 3542 000a 1B68     		ldr	r3, [r3]
 3543              		.loc 1 2358 12
 3544 000c 1B68     		ldr	r3, [r3]
 3545 000e 7B62     		str	r3, [r7, #36]
2359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3546              		.loc 1 2359 25
 3547 0010 7B68     		ldr	r3, [r7, #4]
 3548 0012 1B68     		ldr	r3, [r3]
 3549              		.loc 1 2359 12
 3550 0014 DB68     		ldr	r3, [r3, #12]
 3551 0016 3B62     		str	r3, [r7, #32]
2360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3552              		.loc 1 2360 25
 3553 0018 7B68     		ldr	r3, [r7, #4]
 3554 001a 1B68     		ldr	r3, [r3]
 3555              		.loc 1 2360 12
 3556 001c 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 104


 3557 001e FB61     		str	r3, [r7, #28]
2361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 3558              		.loc 1 2361 12
 3559 0020 0023     		movs	r3, #0
 3560 0022 BB61     		str	r3, [r7, #24]
2362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3561              		.loc 1 2362 12
 3562 0024 0023     		movs	r3, #0
 3563 0026 7B61     		str	r3, [r7, #20]
2363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
2365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 3564              		.loc 1 2365 14
 3565 0028 7B6A     		ldr	r3, [r7, #36]
 3566 002a 03F00F03 		and	r3, r3, #15
 3567 002e BB61     		str	r3, [r7, #24]
2366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (errorflags == RESET)
 3568              		.loc 1 2366 6
 3569 0030 BB69     		ldr	r3, [r7, #24]
 3570 0032 002B     		cmp	r3, #0
 3571 0034 0DD1     		bne	.L170
2367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3572              		.loc 1 2369 20
 3573 0036 7B6A     		ldr	r3, [r7, #36]
 3574 0038 03F02003 		and	r3, r3, #32
 3575              		.loc 1 2369 8
 3576 003c 002B     		cmp	r3, #0
 3577 003e 08D0     		beq	.L170
 3578              		.loc 1 2369 59 discriminator 1
 3579 0040 3B6A     		ldr	r3, [r7, #32]
 3580 0042 03F02003 		and	r3, r3, #32
 3581              		.loc 1 2369 47 discriminator 1
 3582 0046 002B     		cmp	r3, #0
 3583 0048 03D0     		beq	.L170
2370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
 3584              		.loc 1 2371 7
 3585 004a 7868     		ldr	r0, [r7, #4]
 3586 004c FFF7FEFF 		bl	UART_Receive_IT
2372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 3587              		.loc 1 2372 7
 3588 0050 7BE1     		b	.L169
 3589              	.L170:
2373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
2377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE
 3590              		.loc 1 2377 6
 3591 0052 BB69     		ldr	r3, [r7, #24]
 3592 0054 002B     		cmp	r3, #0
 3593 0056 00F0B180 		beq	.L172
 3594              		.loc 1 2377 42 discriminator 1
 3595 005a FB69     		ldr	r3, [r7, #28]
 3596 005c 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 105


 3597              		.loc 1 2377 29 discriminator 1
 3598 0060 002B     		cmp	r3, #0
 3599 0062 05D1     		bne	.L173
 3600              		.loc 1 2377 81 discriminator 2
 3601 0064 3B6A     		ldr	r3, [r7, #32]
 3602 0066 03F49073 		and	r3, r3, #288
 3603              		.loc 1 2377 69 discriminator 2
 3604 006a 002B     		cmp	r3, #0
 3605 006c 00F0A680 		beq	.L172
 3606              	.L173:
2378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3607              		.loc 1 2380 20
 3608 0070 7B6A     		ldr	r3, [r7, #36]
 3609 0072 03F00103 		and	r3, r3, #1
 3610              		.loc 1 2380 8
 3611 0076 002B     		cmp	r3, #0
 3612 0078 0AD0     		beq	.L174
 3613              		.loc 1 2380 57 discriminator 1
 3614 007a 3B6A     		ldr	r3, [r7, #32]
 3615 007c 03F48073 		and	r3, r3, #256
 3616              		.loc 1 2380 45 discriminator 1
 3617 0080 002B     		cmp	r3, #0
 3618 0082 05D0     		beq	.L174
2381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3619              		.loc 1 2382 24
 3620 0084 7B68     		ldr	r3, [r7, #4]
 3621 0086 1B6C     		ldr	r3, [r3, #64]
 3622 0088 43F00102 		orr	r2, r3, #1
 3623 008c 7B68     		ldr	r3, [r7, #4]
 3624 008e 1A64     		str	r2, [r3, #64]
 3625              	.L174:
2383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3626              		.loc 1 2386 20
 3627 0090 7B6A     		ldr	r3, [r7, #36]
 3628 0092 03F00403 		and	r3, r3, #4
 3629              		.loc 1 2386 8
 3630 0096 002B     		cmp	r3, #0
 3631 0098 0AD0     		beq	.L175
 3632              		.loc 1 2386 57 discriminator 1
 3633 009a FB69     		ldr	r3, [r7, #28]
 3634 009c 03F00103 		and	r3, r3, #1
 3635              		.loc 1 2386 45 discriminator 1
 3636 00a0 002B     		cmp	r3, #0
 3637 00a2 05D0     		beq	.L175
2387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3638              		.loc 1 2388 24
 3639 00a4 7B68     		ldr	r3, [r7, #4]
 3640 00a6 1B6C     		ldr	r3, [r3, #64]
 3641 00a8 43F00202 		orr	r2, r3, #2
 3642 00ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 106


 3643 00ae 1A64     		str	r2, [r3, #64]
 3644              	.L175:
2389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3645              		.loc 1 2392 20
 3646 00b0 7B6A     		ldr	r3, [r7, #36]
 3647 00b2 03F00203 		and	r3, r3, #2
 3648              		.loc 1 2392 8
 3649 00b6 002B     		cmp	r3, #0
 3650 00b8 0AD0     		beq	.L176
 3651              		.loc 1 2392 57 discriminator 1
 3652 00ba FB69     		ldr	r3, [r7, #28]
 3653 00bc 03F00103 		and	r3, r3, #1
 3654              		.loc 1 2392 45 discriminator 1
 3655 00c0 002B     		cmp	r3, #0
 3656 00c2 05D0     		beq	.L176
2393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3657              		.loc 1 2394 24
 3658 00c4 7B68     		ldr	r3, [r7, #4]
 3659 00c6 1B6C     		ldr	r3, [r3, #64]
 3660 00c8 43F00402 		orr	r2, r3, #4
 3661 00cc 7B68     		ldr	r3, [r7, #4]
 3662 00ce 1A64     		str	r2, [r3, #64]
 3663              	.L176:
2395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its
 3664              		.loc 1 2398 20
 3665 00d0 7B6A     		ldr	r3, [r7, #36]
 3666 00d2 03F00803 		and	r3, r3, #8
 3667              		.loc 1 2398 8
 3668 00d6 002B     		cmp	r3, #0
 3669 00d8 0FD0     		beq	.L177
 3670              		.loc 1 2398 59 discriminator 1
 3671 00da 3B6A     		ldr	r3, [r7, #32]
 3672 00dc 03F02003 		and	r3, r3, #32
 3673              		.loc 1 2398 46 discriminator 1
 3674 00e0 002B     		cmp	r3, #0
 3675 00e2 04D1     		bne	.L178
 3676              		.loc 1 2398 101 discriminator 2
 3677 00e4 FB69     		ldr	r3, [r7, #28]
 3678 00e6 03F00103 		and	r3, r3, #1
 3679              		.loc 1 2398 89 discriminator 2
 3680 00ea 002B     		cmp	r3, #0
 3681 00ec 05D0     		beq	.L177
 3682              	.L178:
2399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3683              		.loc 1 2400 24
 3684 00ee 7B68     		ldr	r3, [r7, #4]
 3685 00f0 1B6C     		ldr	r3, [r3, #64]
 3686 00f2 43F00802 		orr	r2, r3, #8
 3687 00f6 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 107


 3688 00f8 1A64     		str	r2, [r3, #64]
 3689              	.L177:
2401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3690              		.loc 1 2404 14
 3691 00fa 7B68     		ldr	r3, [r7, #4]
 3692 00fc 1B6C     		ldr	r3, [r3, #64]
 3693              		.loc 1 2404 8
 3694 00fe 002B     		cmp	r3, #0
 3695 0100 00F01E81 		beq	.L192
2405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3696              		.loc 1 2407 22
 3697 0104 7B6A     		ldr	r3, [r7, #36]
 3698 0106 03F02003 		and	r3, r3, #32
 3699              		.loc 1 2407 10
 3700 010a 002B     		cmp	r3, #0
 3701 010c 07D0     		beq	.L180
 3702              		.loc 1 2407 61 discriminator 1
 3703 010e 3B6A     		ldr	r3, [r7, #32]
 3704 0110 03F02003 		and	r3, r3, #32
 3705              		.loc 1 2407 49 discriminator 1
 3706 0114 002B     		cmp	r3, #0
 3707 0116 02D0     		beq	.L180
2408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
 3708              		.loc 1 2409 9
 3709 0118 7868     		ldr	r0, [r7, #4]
 3710 011a FFF7FEFF 		bl	UART_Receive_IT
 3711              	.L180:
2410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
2414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3712              		.loc 1 2414 20
 3713 011e 7B68     		ldr	r3, [r7, #4]
 3714 0120 1B68     		ldr	r3, [r3]
 3715 0122 5B69     		ldr	r3, [r3, #20]
 3716 0124 03F04003 		and	r3, r3, #64
 3717 0128 002B     		cmp	r3, #0
 3718 012a 14BF     		ite	ne
 3719 012c 0123     		movne	r3, #1
 3720 012e 0023     		moveq	r3, #0
 3721 0130 DBB2     		uxtb	r3, r3
 3722              		.loc 1 2414 18
 3723 0132 7B61     		str	r3, [r7, #20]
2415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3724              		.loc 1 2415 18
 3725 0134 7B68     		ldr	r3, [r7, #4]
 3726 0136 1B6C     		ldr	r3, [r3, #64]
 3727              		.loc 1 2415 30
 3728 0138 03F00803 		and	r3, r3, #8
 3729              		.loc 1 2415 10
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 108


 3730 013c 002B     		cmp	r3, #0
 3731 013e 02D1     		bne	.L181
 3732              		.loc 1 2415 62 discriminator 1
 3733 0140 7B69     		ldr	r3, [r7, #20]
 3734 0142 002B     		cmp	r3, #0
 3735 0144 31D0     		beq	.L182
 3736              	.L181:
2416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3737              		.loc 1 2420 9
 3738 0146 7868     		ldr	r0, [r7, #4]
 3739 0148 FFF7FEFF 		bl	UART_EndRxTransfer
2421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3740              		.loc 1 2423 13
 3741 014c 7B68     		ldr	r3, [r7, #4]
 3742 014e 1B68     		ldr	r3, [r3]
 3743 0150 5B69     		ldr	r3, [r3, #20]
 3744 0152 03F04003 		and	r3, r3, #64
 3745              		.loc 1 2423 12
 3746 0156 002B     		cmp	r3, #0
 3747 0158 23D0     		beq	.L183
2424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3748              		.loc 1 2425 11
 3749 015a 7B68     		ldr	r3, [r7, #4]
 3750 015c 1B68     		ldr	r3, [r3]
 3751 015e 5A69     		ldr	r2, [r3, #20]
 3752 0160 7B68     		ldr	r3, [r7, #4]
 3753 0162 1B68     		ldr	r3, [r3]
 3754 0164 22F04002 		bic	r2, r2, #64
 3755 0168 5A61     		str	r2, [r3, #20]
2426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3756              		.loc 1 2428 20
 3757 016a 7B68     		ldr	r3, [r7, #4]
 3758 016c 9B6B     		ldr	r3, [r3, #56]
 3759              		.loc 1 2428 14
 3760 016e 002B     		cmp	r3, #0
 3761 0170 13D0     		beq	.L184
2429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3762              		.loc 1 2432 18
 3763 0172 7B68     		ldr	r3, [r7, #4]
 3764 0174 9B6B     		ldr	r3, [r3, #56]
 3765              		.loc 1 2432 46
 3766 0176 764A     		ldr	r2, .L196
 3767 0178 5A63     		str	r2, [r3, #52]
2433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3768              		.loc 1 2433 17
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 109


 3769 017a 7B68     		ldr	r3, [r7, #4]
 3770 017c 9B6B     		ldr	r3, [r3, #56]
 3771 017e 1846     		mov	r0, r3
 3772 0180 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3773 0184 0346     		mov	r3, r0
 3774              		.loc 1 2433 16
 3775 0186 002B     		cmp	r3, #0
 3776 0188 16D0     		beq	.L193
2434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
2435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3777              		.loc 1 2436 20
 3778 018a 7B68     		ldr	r3, [r7, #4]
 3779 018c 9B6B     		ldr	r3, [r3, #56]
 3780              		.loc 1 2436 28
 3781 018e 5B6B     		ldr	r3, [r3, #52]
 3782              		.loc 1 2436 53
 3783 0190 7A68     		ldr	r2, [r7, #4]
 3784 0192 926B     		ldr	r2, [r2, #56]
 3785              		.loc 1 2436 15
 3786 0194 1046     		mov	r0, r2
 3787 0196 9847     		blx	r3
 3788              	.LVL2:
2423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3789              		.loc 1 2423 12
 3790 0198 0EE0     		b	.L193
 3791              	.L184:
2437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
2438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
2440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
2441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
2442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call registered error callback*/
2444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->ErrorCallback(huart);
2445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /*Call legacy weak error callback*/
2447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3792              		.loc 1 2447 13
 3793 019a 7868     		ldr	r0, [r7, #4]
 3794 019c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3795              		.loc 1 2423 12
 3796 01a0 0AE0     		b	.L193
 3797              	.L183:
2448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
2450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
2452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
2454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call registered error callback*/
2456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ErrorCallback(huart);
2457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /*Call legacy weak error callback*/
2459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 110


 3798              		.loc 1 2459 11
 3799 01a2 7868     		ldr	r0, [r7, #4]
 3800 01a4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3801              		.loc 1 2423 12
 3802 01a8 06E0     		b	.L193
 3803              	.L182:
2460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
2467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered error callback*/
2469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCallback(huart);
2470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak error callback*/
2472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3804              		.loc 1 2472 9
 3805 01aa 7868     		ldr	r0, [r7, #4]
 3806 01ac FFF7FEFF 		bl	HAL_UART_ErrorCallback
2473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3807              		.loc 1 2475 26
 3808 01b0 7B68     		ldr	r3, [r7, #4]
 3809 01b2 0022     		movs	r2, #0
 3810 01b4 1A64     		str	r2, [r3, #64]
2476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3811              		.loc 1 2478 5
 3812 01b6 C3E0     		b	.L192
 3813              	.L193:
2423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3814              		.loc 1 2423 12
 3815 01b8 00BF     		nop
 3816              		.loc 1 2478 5
 3817 01ba C1E0     		b	.L192
 3818              	.L172:
2479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
2480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
2482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (  (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3819              		.loc 1 2483 15
 3820 01bc 7B68     		ldr	r3, [r7, #4]
 3821 01be 1B6B     		ldr	r3, [r3, #48]
 3822              		.loc 1 2483 6
 3823 01c0 012B     		cmp	r3, #1
 3824 01c2 40F0A180 		bne	.L186
2484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       &&((isrflags & USART_SR_IDLE) != 0U)
 3825              		.loc 1 2484 20
 3826 01c6 7B6A     		ldr	r3, [r7, #36]
 3827 01c8 03F01003 		and	r3, r3, #16
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 111


 3828              		.loc 1 2484 7
 3829 01cc 002B     		cmp	r3, #0
 3830 01ce 00F09B80 		beq	.L186
2485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       &&((cr1its & USART_SR_IDLE) != 0U))
 3831              		.loc 1 2485 18
 3832 01d2 3B6A     		ldr	r3, [r7, #32]
 3833 01d4 03F01003 		and	r3, r3, #16
 3834              		.loc 1 2485 7
 3835 01d8 002B     		cmp	r3, #0
 3836 01da 00F09580 		beq	.L186
 3837              	.LBB6:
2486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 3838              		.loc 1 2487 5
 3839 01de 0023     		movs	r3, #0
 3840 01e0 FB60     		str	r3, [r7, #12]
 3841 01e2 7B68     		ldr	r3, [r7, #4]
 3842 01e4 1B68     		ldr	r3, [r3]
 3843 01e6 1B68     		ldr	r3, [r3]
 3844 01e8 FB60     		str	r3, [r7, #12]
 3845 01ea 7B68     		ldr	r3, [r7, #4]
 3846 01ec 1B68     		ldr	r3, [r3]
 3847 01ee 5B68     		ldr	r3, [r3, #4]
 3848 01f0 FB60     		str	r3, [r7, #12]
 3849 01f2 FB68     		ldr	r3, [r7, #12]
 3850              	.LBE6:
2488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3851              		.loc 1 2490 9
 3852 01f4 7B68     		ldr	r3, [r7, #4]
 3853 01f6 1B68     		ldr	r3, [r3]
 3854 01f8 5B69     		ldr	r3, [r3, #20]
 3855 01fa 03F04003 		and	r3, r3, #64
 3856              		.loc 1 2490 8
 3857 01fe 002B     		cmp	r3, #0
 3858 0200 4ED0     		beq	.L187
 3859              	.LBB7:
2491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode enabled */
2493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          (DMA cplt callback will be called).
2495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 3860              		.loc 1 2496 50
 3861 0202 7B68     		ldr	r3, [r7, #4]
 3862 0204 9B6B     		ldr	r3, [r3, #56]
 3863 0206 1B68     		ldr	r3, [r3]
 3864 0208 5B68     		ldr	r3, [r3, #4]
 3865              		.loc 1 2496 16
 3866 020a 3B82     		strh	r3, [r7, #16]	@ movhi
2497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (  (nb_remaining_rx_data > 0U)
 3867              		.loc 1 2497 10
 3868 020c 3B8A     		ldrh	r3, [r7, #16]
 3869 020e 002B     		cmp	r3, #0
 3870 0210 00F09880 		beq	.L194
2498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           &&(nb_remaining_rx_data < huart->RxXferSize))
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 112


 3871              		.loc 1 2498 42
 3872 0214 7B68     		ldr	r3, [r7, #4]
 3873 0216 9B8D     		ldrh	r3, [r3, #44]
 3874              		.loc 1 2498 11
 3875 0218 3A8A     		ldrh	r2, [r7, #16]
 3876 021a 9A42     		cmp	r2, r3
 3877 021c 80F09280 		bcs	.L194
2499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Reception is not complete */
2501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 3878              		.loc 1 2501 28
 3879 0220 7B68     		ldr	r3, [r7, #4]
 3880 0222 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 3881 0224 DA85     		strh	r2, [r3, #46]	@ movhi
2502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 3882              		.loc 1 2504 18
 3883 0226 7B68     		ldr	r3, [r7, #4]
 3884 0228 9B6B     		ldr	r3, [r3, #56]
 3885              		.loc 1 2504 32
 3886 022a 9B69     		ldr	r3, [r3, #24]
 3887              		.loc 1 2504 12
 3888 022c 202B     		cmp	r3, #32
 3889 022e 2BD0     		beq	.L189
2505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
2506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 3890              		.loc 1 2507 11
 3891 0230 7B68     		ldr	r3, [r7, #4]
 3892 0232 1B68     		ldr	r3, [r3]
 3893 0234 DA68     		ldr	r2, [r3, #12]
 3894 0236 7B68     		ldr	r3, [r7, #4]
 3895 0238 1B68     		ldr	r3, [r3]
 3896 023a 22F48072 		bic	r2, r2, #256
 3897 023e DA60     		str	r2, [r3, #12]
2508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3898              		.loc 1 2508 11
 3899 0240 7B68     		ldr	r3, [r7, #4]
 3900 0242 1B68     		ldr	r3, [r3]
 3901 0244 5A69     		ldr	r2, [r3, #20]
 3902 0246 7B68     		ldr	r3, [r7, #4]
 3903 0248 1B68     		ldr	r3, [r3]
 3904 024a 22F00102 		bic	r2, r2, #1
 3905 024e 5A61     		str	r2, [r3, #20]
2509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the UART CR3 register */
2512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3906              		.loc 1 2512 11
 3907 0250 7B68     		ldr	r3, [r7, #4]
 3908 0252 1B68     		ldr	r3, [r3]
 3909 0254 5A69     		ldr	r2, [r3, #20]
 3910 0256 7B68     		ldr	r3, [r7, #4]
 3911 0258 1B68     		ldr	r3, [r3]
 3912 025a 22F04002 		bic	r2, r2, #64
 3913 025e 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 113


2513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 3914              		.loc 1 2515 26
 3915 0260 7B68     		ldr	r3, [r7, #4]
 3916 0262 2022     		movs	r2, #32
 3917 0264 83F83E20 		strb	r2, [r3, #62]
2516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3918              		.loc 1 2516 32
 3919 0268 7B68     		ldr	r3, [r7, #4]
 3920 026a 0022     		movs	r2, #0
 3921 026c 1A63     		str	r2, [r3, #48]
2517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3922              		.loc 1 2518 11
 3923 026e 7B68     		ldr	r3, [r7, #4]
 3924 0270 1B68     		ldr	r3, [r3]
 3925 0272 DA68     		ldr	r2, [r3, #12]
 3926 0274 7B68     		ldr	r3, [r7, #4]
 3927 0276 1B68     		ldr	r3, [r3]
 3928 0278 22F01002 		bic	r2, r2, #16
 3929 027c DA60     		str	r2, [r3, #12]
2519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 3930              		.loc 1 2521 17
 3931 027e 7B68     		ldr	r3, [r7, #4]
 3932 0280 9B6B     		ldr	r3, [r3, #56]
 3933 0282 1846     		mov	r0, r3
 3934 0284 FFF7FEFF 		bl	HAL_DMA_Abort
 3935              	.L189:
2522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
2523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 3936              		.loc 1 2528 49
 3937 0288 7B68     		ldr	r3, [r7, #4]
 3938 028a 9A8D     		ldrh	r2, [r3, #44]
 3939              		.loc 1 2528 69
 3940 028c 7B68     		ldr	r3, [r7, #4]
 3941 028e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3942 0290 9BB2     		uxth	r3, r3
 3943              		.loc 1 2528 9
 3944 0292 D31A     		subs	r3, r2, r3
 3945 0294 9BB2     		uxth	r3, r3
 3946 0296 1946     		mov	r1, r3
 3947 0298 7868     		ldr	r0, [r7, #4]
 3948 029a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
2530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 3949              		.loc 1 2531 7
 3950 029e 51E0     		b	.L194
 3951              	.L187:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 114


 3952              	.LBE7:
 3953              	.LBB8:
2532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* DMA mode not enabled */
2536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 3954              		.loc 1 2538 34
 3955 02a0 7B68     		ldr	r3, [r7, #4]
 3956 02a2 9A8D     		ldrh	r2, [r3, #44]
 3957              		.loc 1 2538 54
 3958 02a4 7B68     		ldr	r3, [r7, #4]
 3959 02a6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3960 02a8 9BB2     		uxth	r3, r3
 3961              		.loc 1 2538 16
 3962 02aa D31A     		subs	r3, r2, r3
 3963 02ac 7B82     		strh	r3, [r7, #18]	@ movhi
2539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (  (huart->RxXferCount > 0U)
 3964              		.loc 1 2539 19
 3965 02ae 7B68     		ldr	r3, [r7, #4]
 3966 02b0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 3967 02b2 9BB2     		uxth	r3, r3
 3968              		.loc 1 2539 10
 3969 02b4 002B     		cmp	r3, #0
 3970 02b6 47D0     		beq	.L195
2540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           &&(nb_rx_data > 0U) )
 3971              		.loc 1 2540 11
 3972 02b8 7B8A     		ldrh	r3, [r7, #18]
 3973 02ba 002B     		cmp	r3, #0
 3974 02bc 44D0     		beq	.L195
2541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3975              		.loc 1 2543 9
 3976 02be 7B68     		ldr	r3, [r7, #4]
 3977 02c0 1B68     		ldr	r3, [r3]
 3978 02c2 DA68     		ldr	r2, [r3, #12]
 3979 02c4 7B68     		ldr	r3, [r7, #4]
 3980 02c6 1B68     		ldr	r3, [r3]
 3981 02c8 22F49072 		bic	r2, r2, #288
 3982 02cc DA60     		str	r2, [r3, #12]
2544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3983              		.loc 1 2546 9
 3984 02ce 7B68     		ldr	r3, [r7, #4]
 3985 02d0 1B68     		ldr	r3, [r3]
 3986 02d2 5A69     		ldr	r2, [r3, #20]
 3987 02d4 7B68     		ldr	r3, [r7, #4]
 3988 02d6 1B68     		ldr	r3, [r3]
 3989 02d8 22F00102 		bic	r2, r2, #1
 3990 02dc 5A61     		str	r2, [r3, #20]
2547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 115


 3991              		.loc 1 2549 24
 3992 02de 7B68     		ldr	r3, [r7, #4]
 3993 02e0 2022     		movs	r2, #32
 3994 02e2 83F83E20 		strb	r2, [r3, #62]
2550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3995              		.loc 1 2550 30
 3996 02e6 7B68     		ldr	r3, [r7, #4]
 3997 02e8 0022     		movs	r2, #0
 3998 02ea 1A63     		str	r2, [r3, #48]
2551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3999              		.loc 1 2552 9
 4000 02ec 7B68     		ldr	r3, [r7, #4]
 4001 02ee 1B68     		ldr	r3, [r3]
 4002 02f0 DA68     		ldr	r2, [r3, #12]
 4003 02f2 7B68     		ldr	r3, [r7, #4]
 4004 02f4 1B68     		ldr	r3, [r3]
 4005 02f6 22F01002 		bic	r2, r2, #16
 4006 02fa DA60     		str	r2, [r3, #12]
2553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 4007              		.loc 1 2558 9
 4008 02fc 7B8A     		ldrh	r3, [r7, #18]
 4009 02fe 1946     		mov	r1, r3
 4010 0300 7868     		ldr	r0, [r7, #4]
 4011 0302 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
2560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4012              		.loc 1 2561 7
 4013 0306 1FE0     		b	.L195
 4014              	.L186:
 4015              	.LBE8:
2562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 4016              		.loc 1 2566 18
 4017 0308 7B6A     		ldr	r3, [r7, #36]
 4018 030a 03F08003 		and	r3, r3, #128
 4019              		.loc 1 2566 6
 4020 030e 002B     		cmp	r3, #0
 4021 0310 08D0     		beq	.L191
 4022              		.loc 1 2566 56 discriminator 1
 4023 0312 3B6A     		ldr	r3, [r7, #32]
 4024 0314 03F08003 		and	r3, r3, #128
 4025              		.loc 1 2566 44 discriminator 1
 4026 0318 002B     		cmp	r3, #0
 4027 031a 03D0     		beq	.L191
2567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
 4028              		.loc 1 2568 5
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 116


 4029 031c 7868     		ldr	r0, [r7, #4]
 4030 031e FFF7FEFF 		bl	UART_Transmit_IT
2569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 4031              		.loc 1 2569 5
 4032 0322 12E0     		b	.L169
 4033              	.L191:
2570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 4034              		.loc 1 2573 18
 4035 0324 7B6A     		ldr	r3, [r7, #36]
 4036 0326 03F04003 		and	r3, r3, #64
 4037              		.loc 1 2573 6
 4038 032a 002B     		cmp	r3, #0
 4039 032c 0DD0     		beq	.L169
 4040              		.loc 1 2573 55 discriminator 1
 4041 032e 3B6A     		ldr	r3, [r7, #32]
 4042 0330 03F04003 		and	r3, r3, #64
 4043              		.loc 1 2573 43 discriminator 1
 4044 0334 002B     		cmp	r3, #0
 4045 0336 08D0     		beq	.L169
2574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 4046              		.loc 1 2575 5
 4047 0338 7868     		ldr	r0, [r7, #4]
 4048 033a FFF7FEFF 		bl	UART_EndTransmit_IT
2576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 4049              		.loc 1 2576 5
 4050 033e 04E0     		b	.L169
 4051              	.L192:
2478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
 4052              		.loc 1 2478 5
 4053 0340 00BF     		nop
 4054 0342 02E0     		b	.L169
 4055              	.L194:
 4056              	.LBB9:
2531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4057              		.loc 1 2531 7
 4058 0344 00BF     		nop
 4059 0346 00E0     		b	.L169
 4060              	.L195:
 4061              	.LBE9:
 4062              	.LBB10:
2561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 4063              		.loc 1 2561 7
 4064 0348 00BF     		nop
 4065              	.L169:
 4066              	.LBE10:
2577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4067              		.loc 1 2578 1
 4068 034a 2837     		adds	r7, r7, #40
 4069              		.cfi_def_cfa_offset 8
 4070 034c BD46     		mov	sp, r7
 4071              		.cfi_def_cfa_register 13
 4072              		@ sp needed
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 117


 4073 034e 80BD     		pop	{r7, pc}
 4074              	.L197:
 4075              		.align	2
 4076              	.L196:
 4077 0350 00000000 		.word	UART_DMAAbortOnError
 4078              		.cfi_endproc
 4079              	.LFE90:
 4081              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 4082              		.align	1
 4083              		.weak	HAL_UART_TxCpltCallback
 4084              		.syntax unified
 4085              		.thumb
 4086              		.thumb_func
 4088              	HAL_UART_TxCpltCallback:
 4089              	.LFB91:
2579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4090              		.loc 1 2587 1
 4091              		.cfi_startproc
 4092              		@ args = 0, pretend = 0, frame = 8
 4093              		@ frame_needed = 1, uses_anonymous_args = 0
 4094              		@ link register save eliminated.
 4095 0000 80B4     		push	{r7}
 4096              		.cfi_def_cfa_offset 4
 4097              		.cfi_offset 7, -4
 4098 0002 83B0     		sub	sp, sp, #12
 4099              		.cfi_def_cfa_offset 16
 4100 0004 00AF     		add	r7, sp, #0
 4101              		.cfi_def_cfa_register 7
 4102 0006 7860     		str	r0, [r7, #4]
2588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4103              		.loc 1 2593 1
 4104 0008 00BF     		nop
 4105 000a 0C37     		adds	r7, r7, #12
 4106              		.cfi_def_cfa_offset 4
 4107 000c BD46     		mov	sp, r7
 4108              		.cfi_def_cfa_register 13
 4109              		@ sp needed
 4110 000e 80BC     		pop	{r7}
 4111              		.cfi_restore 7
 4112              		.cfi_def_cfa_offset 0
 4113 0010 7047     		bx	lr
 4114              		.cfi_endproc
 4115              	.LFE91:
 4117              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 118


 4118              		.align	1
 4119              		.weak	HAL_UART_TxHalfCpltCallback
 4120              		.syntax unified
 4121              		.thumb
 4122              		.thumb_func
 4124              	HAL_UART_TxHalfCpltCallback:
 4125              	.LFB92:
2594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4126              		.loc 1 2602 1
 4127              		.cfi_startproc
 4128              		@ args = 0, pretend = 0, frame = 8
 4129              		@ frame_needed = 1, uses_anonymous_args = 0
 4130              		@ link register save eliminated.
 4131 0000 80B4     		push	{r7}
 4132              		.cfi_def_cfa_offset 4
 4133              		.cfi_offset 7, -4
 4134 0002 83B0     		sub	sp, sp, #12
 4135              		.cfi_def_cfa_offset 16
 4136 0004 00AF     		add	r7, sp, #0
 4137              		.cfi_def_cfa_register 7
 4138 0006 7860     		str	r0, [r7, #4]
2603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4139              		.loc 1 2608 1
 4140 0008 00BF     		nop
 4141 000a 0C37     		adds	r7, r7, #12
 4142              		.cfi_def_cfa_offset 4
 4143 000c BD46     		mov	sp, r7
 4144              		.cfi_def_cfa_register 13
 4145              		@ sp needed
 4146 000e 80BC     		pop	{r7}
 4147              		.cfi_restore 7
 4148              		.cfi_def_cfa_offset 0
 4149 0010 7047     		bx	lr
 4150              		.cfi_endproc
 4151              	.LFE92:
 4153              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 4154              		.align	1
 4155              		.weak	HAL_UART_RxCpltCallback
 4156              		.syntax unified
 4157              		.thumb
 4158              		.thumb_func
 4160              	HAL_UART_RxCpltCallback:
 4161              	.LFB93:
2609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 119


2610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4162              		.loc 1 2617 1
 4163              		.cfi_startproc
 4164              		@ args = 0, pretend = 0, frame = 8
 4165              		@ frame_needed = 1, uses_anonymous_args = 0
 4166              		@ link register save eliminated.
 4167 0000 80B4     		push	{r7}
 4168              		.cfi_def_cfa_offset 4
 4169              		.cfi_offset 7, -4
 4170 0002 83B0     		sub	sp, sp, #12
 4171              		.cfi_def_cfa_offset 16
 4172 0004 00AF     		add	r7, sp, #0
 4173              		.cfi_def_cfa_register 7
 4174 0006 7860     		str	r0, [r7, #4]
2618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4175              		.loc 1 2623 1
 4176 0008 00BF     		nop
 4177 000a 0C37     		adds	r7, r7, #12
 4178              		.cfi_def_cfa_offset 4
 4179 000c BD46     		mov	sp, r7
 4180              		.cfi_def_cfa_register 13
 4181              		@ sp needed
 4182 000e 80BC     		pop	{r7}
 4183              		.cfi_restore 7
 4184              		.cfi_def_cfa_offset 0
 4185 0010 7047     		bx	lr
 4186              		.cfi_endproc
 4187              	.LFE93:
 4189              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4190              		.align	1
 4191              		.weak	HAL_UART_RxHalfCpltCallback
 4192              		.syntax unified
 4193              		.thumb
 4194              		.thumb_func
 4196              	HAL_UART_RxHalfCpltCallback:
 4197              	.LFB94:
2624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 120


 4198              		.loc 1 2632 1
 4199              		.cfi_startproc
 4200              		@ args = 0, pretend = 0, frame = 8
 4201              		@ frame_needed = 1, uses_anonymous_args = 0
 4202              		@ link register save eliminated.
 4203 0000 80B4     		push	{r7}
 4204              		.cfi_def_cfa_offset 4
 4205              		.cfi_offset 7, -4
 4206 0002 83B0     		sub	sp, sp, #12
 4207              		.cfi_def_cfa_offset 16
 4208 0004 00AF     		add	r7, sp, #0
 4209              		.cfi_def_cfa_register 7
 4210 0006 7860     		str	r0, [r7, #4]
2633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4211              		.loc 1 2638 1
 4212 0008 00BF     		nop
 4213 000a 0C37     		adds	r7, r7, #12
 4214              		.cfi_def_cfa_offset 4
 4215 000c BD46     		mov	sp, r7
 4216              		.cfi_def_cfa_register 13
 4217              		@ sp needed
 4218 000e 80BC     		pop	{r7}
 4219              		.cfi_restore 7
 4220              		.cfi_def_cfa_offset 0
 4221 0010 7047     		bx	lr
 4222              		.cfi_endproc
 4223              	.LFE94:
 4225              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4226              		.align	1
 4227              		.weak	HAL_UART_ErrorCallback
 4228              		.syntax unified
 4229              		.thumb
 4230              		.thumb_func
 4232              	HAL_UART_ErrorCallback:
 4233              	.LFB95:
2639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
2642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4234              		.loc 1 2647 1
 4235              		.cfi_startproc
 4236              		@ args = 0, pretend = 0, frame = 8
 4237              		@ frame_needed = 1, uses_anonymous_args = 0
 4238              		@ link register save eliminated.
 4239 0000 80B4     		push	{r7}
 4240              		.cfi_def_cfa_offset 4
 4241              		.cfi_offset 7, -4
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 121


 4242 0002 83B0     		sub	sp, sp, #12
 4243              		.cfi_def_cfa_offset 16
 4244 0004 00AF     		add	r7, sp, #0
 4245              		.cfi_def_cfa_register 7
 4246 0006 7860     		str	r0, [r7, #4]
2648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4247              		.loc 1 2653 1
 4248 0008 00BF     		nop
 4249 000a 0C37     		adds	r7, r7, #12
 4250              		.cfi_def_cfa_offset 4
 4251 000c BD46     		mov	sp, r7
 4252              		.cfi_def_cfa_register 13
 4253              		@ sp needed
 4254 000e 80BC     		pop	{r7}
 4255              		.cfi_restore 7
 4256              		.cfi_def_cfa_offset 0
 4257 0010 7047     		bx	lr
 4258              		.cfi_endproc
 4259              	.LFE95:
 4261              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4262              		.align	1
 4263              		.weak	HAL_UART_AbortCpltCallback
 4264              		.syntax unified
 4265              		.thumb
 4266              		.thumb_func
 4268              	HAL_UART_AbortCpltCallback:
 4269              	.LFB96:
2654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4270              		.loc 1 2661 1
 4271              		.cfi_startproc
 4272              		@ args = 0, pretend = 0, frame = 8
 4273              		@ frame_needed = 1, uses_anonymous_args = 0
 4274              		@ link register save eliminated.
 4275 0000 80B4     		push	{r7}
 4276              		.cfi_def_cfa_offset 4
 4277              		.cfi_offset 7, -4
 4278 0002 83B0     		sub	sp, sp, #12
 4279              		.cfi_def_cfa_offset 16
 4280 0004 00AF     		add	r7, sp, #0
 4281              		.cfi_def_cfa_register 7
 4282 0006 7860     		str	r0, [r7, #4]
2662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 122


2666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4283              		.loc 1 2668 1
 4284 0008 00BF     		nop
 4285 000a 0C37     		adds	r7, r7, #12
 4286              		.cfi_def_cfa_offset 4
 4287 000c BD46     		mov	sp, r7
 4288              		.cfi_def_cfa_register 13
 4289              		@ sp needed
 4290 000e 80BC     		pop	{r7}
 4291              		.cfi_restore 7
 4292              		.cfi_def_cfa_offset 0
 4293 0010 7047     		bx	lr
 4294              		.cfi_endproc
 4295              	.LFE96:
 4297              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4298              		.align	1
 4299              		.weak	HAL_UART_AbortTransmitCpltCallback
 4300              		.syntax unified
 4301              		.thumb
 4302              		.thumb_func
 4304              	HAL_UART_AbortTransmitCpltCallback:
 4305              	.LFB97:
2669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4306              		.loc 1 2676 1
 4307              		.cfi_startproc
 4308              		@ args = 0, pretend = 0, frame = 8
 4309              		@ frame_needed = 1, uses_anonymous_args = 0
 4310              		@ link register save eliminated.
 4311 0000 80B4     		push	{r7}
 4312              		.cfi_def_cfa_offset 4
 4313              		.cfi_offset 7, -4
 4314 0002 83B0     		sub	sp, sp, #12
 4315              		.cfi_def_cfa_offset 16
 4316 0004 00AF     		add	r7, sp, #0
 4317              		.cfi_def_cfa_register 7
 4318 0006 7860     		str	r0, [r7, #4]
2677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4319              		.loc 1 2683 1
 4320 0008 00BF     		nop
 4321 000a 0C37     		adds	r7, r7, #12
 4322              		.cfi_def_cfa_offset 4
 4323 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 123


 4324              		.cfi_def_cfa_register 13
 4325              		@ sp needed
 4326 000e 80BC     		pop	{r7}
 4327              		.cfi_restore 7
 4328              		.cfi_def_cfa_offset 0
 4329 0010 7047     		bx	lr
 4330              		.cfi_endproc
 4331              	.LFE97:
 4333              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4334              		.align	1
 4335              		.weak	HAL_UART_AbortReceiveCpltCallback
 4336              		.syntax unified
 4337              		.thumb
 4338              		.thumb_func
 4340              	HAL_UART_AbortReceiveCpltCallback:
 4341              	.LFB98:
2684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4342              		.loc 1 2691 1
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 8
 4345              		@ frame_needed = 1, uses_anonymous_args = 0
 4346              		@ link register save eliminated.
 4347 0000 80B4     		push	{r7}
 4348              		.cfi_def_cfa_offset 4
 4349              		.cfi_offset 7, -4
 4350 0002 83B0     		sub	sp, sp, #12
 4351              		.cfi_def_cfa_offset 16
 4352 0004 00AF     		add	r7, sp, #0
 4353              		.cfi_def_cfa_register 7
 4354 0006 7860     		str	r0, [r7, #4]
2692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4355              		.loc 1 2698 1
 4356 0008 00BF     		nop
 4357 000a 0C37     		adds	r7, r7, #12
 4358              		.cfi_def_cfa_offset 4
 4359 000c BD46     		mov	sp, r7
 4360              		.cfi_def_cfa_register 13
 4361              		@ sp needed
 4362 000e 80BC     		pop	{r7}
 4363              		.cfi_restore 7
 4364              		.cfi_def_cfa_offset 0
 4365 0010 7047     		bx	lr
 4366              		.cfi_endproc
 4367              	.LFE98:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 124


 4369              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4370              		.align	1
 4371              		.weak	HAL_UARTEx_RxEventCallback
 4372              		.syntax unified
 4373              		.thumb
 4374              		.thumb_func
 4376              	HAL_UARTEx_RxEventCallback:
 4377              	.LFB99:
2699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle
2703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               reception buffer until which, data are available)
2705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4378              		.loc 1 2708 1
 4379              		.cfi_startproc
 4380              		@ args = 0, pretend = 0, frame = 8
 4381              		@ frame_needed = 1, uses_anonymous_args = 0
 4382              		@ link register save eliminated.
 4383 0000 80B4     		push	{r7}
 4384              		.cfi_def_cfa_offset 4
 4385              		.cfi_offset 7, -4
 4386 0002 83B0     		sub	sp, sp, #12
 4387              		.cfi_def_cfa_offset 16
 4388 0004 00AF     		add	r7, sp, #0
 4389              		.cfi_def_cfa_register 7
 4390 0006 7860     		str	r0, [r7, #4]
 4391 0008 0B46     		mov	r3, r1
 4392 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
2711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(Size);
2712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
2716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4393              		.loc 1 2716 1
 4394 000c 00BF     		nop
 4395 000e 0C37     		adds	r7, r7, #12
 4396              		.cfi_def_cfa_offset 4
 4397 0010 BD46     		mov	sp, r7
 4398              		.cfi_def_cfa_register 13
 4399              		@ sp needed
 4400 0012 80BC     		pop	{r7}
 4401              		.cfi_restore 7
 4402              		.cfi_def_cfa_offset 0
 4403 0014 7047     		bx	lr
 4404              		.cfi_endproc
 4405              	.LFE99:
 4407              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4408              		.align	1
 4409              		.global	HAL_LIN_SendBreak
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 125


 4410              		.syntax unified
 4411              		.thumb
 4412              		.thumb_func
 4414              	HAL_LIN_SendBreak:
 4415              	.LFB100:
2717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions
2724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
2730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
2743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4416              		.loc 1 2748 1
 4417              		.cfi_startproc
 4418              		@ args = 0, pretend = 0, frame = 8
 4419              		@ frame_needed = 1, uses_anonymous_args = 0
 4420              		@ link register save eliminated.
 4421 0000 80B4     		push	{r7}
 4422              		.cfi_def_cfa_offset 4
 4423              		.cfi_offset 7, -4
 4424 0002 83B0     		sub	sp, sp, #12
 4425              		.cfi_def_cfa_offset 16
 4426 0004 00AF     		add	r7, sp, #0
 4427              		.cfi_def_cfa_register 7
 4428 0006 7860     		str	r0, [r7, #4]
2749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 4429              		.loc 1 2753 3
 4430 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 126


 4431 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4432 000e 012B     		cmp	r3, #1
 4433 0010 01D1     		bne	.L208
 4434              		.loc 1 2753 3 is_stmt 0 discriminator 1
 4435 0012 0223     		movs	r3, #2
 4436 0014 18E0     		b	.L209
 4437              	.L208:
 4438              		.loc 1 2753 3 discriminator 2
 4439 0016 7B68     		ldr	r3, [r7, #4]
 4440 0018 0122     		movs	r2, #1
 4441 001a 83F83C20 		strb	r2, [r3, #60]
2754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4442              		.loc 1 2755 17 is_stmt 1 discriminator 2
 4443 001e 7B68     		ldr	r3, [r7, #4]
 4444 0020 2422     		movs	r2, #36
 4445 0022 83F83D20 		strb	r2, [r3, #61]
2756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
2758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 4446              		.loc 1 2758 3 discriminator 2
 4447 0026 7B68     		ldr	r3, [r7, #4]
 4448 0028 1B68     		ldr	r3, [r3]
 4449 002a DA68     		ldr	r2, [r3, #12]
 4450 002c 7B68     		ldr	r3, [r7, #4]
 4451 002e 1B68     		ldr	r3, [r3]
 4452 0030 42F00102 		orr	r2, r2, #1
 4453 0034 DA60     		str	r2, [r3, #12]
2759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4454              		.loc 1 2760 17 discriminator 2
 4455 0036 7B68     		ldr	r3, [r7, #4]
 4456 0038 2022     		movs	r2, #32
 4457 003a 83F83D20 		strb	r2, [r3, #61]
2761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4458              		.loc 1 2763 3 discriminator 2
 4459 003e 7B68     		ldr	r3, [r7, #4]
 4460 0040 0022     		movs	r2, #0
 4461 0042 83F83C20 		strb	r2, [r3, #60]
2764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4462              		.loc 1 2765 10 discriminator 2
 4463 0046 0023     		movs	r3, #0
 4464              	.L209:
2766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4465              		.loc 1 2766 1
 4466 0048 1846     		mov	r0, r3
 4467 004a 0C37     		adds	r7, r7, #12
 4468              		.cfi_def_cfa_offset 4
 4469 004c BD46     		mov	sp, r7
 4470              		.cfi_def_cfa_register 13
 4471              		@ sp needed
 4472 004e 80BC     		pop	{r7}
 4473              		.cfi_restore 7
 4474              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 127


 4475 0050 7047     		bx	lr
 4476              		.cfi_endproc
 4477              	.LFE100:
 4479              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4480              		.align	1
 4481              		.global	HAL_MultiProcessor_EnterMuteMode
 4482              		.syntax unified
 4483              		.thumb
 4484              		.thumb_func
 4486              	HAL_MultiProcessor_EnterMuteMode:
 4487              	.LFB101:
2767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4488              		.loc 1 2775 1
 4489              		.cfi_startproc
 4490              		@ args = 0, pretend = 0, frame = 8
 4491              		@ frame_needed = 1, uses_anonymous_args = 0
 4492              		@ link register save eliminated.
 4493 0000 80B4     		push	{r7}
 4494              		.cfi_def_cfa_offset 4
 4495              		.cfi_offset 7, -4
 4496 0002 83B0     		sub	sp, sp, #12
 4497              		.cfi_def_cfa_offset 16
 4498 0004 00AF     		add	r7, sp, #0
 4499              		.cfi_def_cfa_register 7
 4500 0006 7860     		str	r0, [r7, #4]
2776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 4501              		.loc 1 2780 3
 4502 0008 7B68     		ldr	r3, [r7, #4]
 4503 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4504 000e 012B     		cmp	r3, #1
 4505 0010 01D1     		bne	.L211
 4506              		.loc 1 2780 3 is_stmt 0 discriminator 1
 4507 0012 0223     		movs	r3, #2
 4508 0014 18E0     		b	.L212
 4509              	.L211:
 4510              		.loc 1 2780 3 discriminator 2
 4511 0016 7B68     		ldr	r3, [r7, #4]
 4512 0018 0122     		movs	r2, #1
 4513 001a 83F83C20 		strb	r2, [r3, #60]
2781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4514              		.loc 1 2782 17 is_stmt 1 discriminator 2
 4515 001e 7B68     		ldr	r3, [r7, #4]
 4516 0020 2422     		movs	r2, #36
 4517 0022 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 128


2783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4518              		.loc 1 2785 3 discriminator 2
 4519 0026 7B68     		ldr	r3, [r7, #4]
 4520 0028 1B68     		ldr	r3, [r3]
 4521 002a DA68     		ldr	r2, [r3, #12]
 4522 002c 7B68     		ldr	r3, [r7, #4]
 4523 002e 1B68     		ldr	r3, [r3]
 4524 0030 42F00202 		orr	r2, r2, #2
 4525 0034 DA60     		str	r2, [r3, #12]
2786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4526              		.loc 1 2787 17 discriminator 2
 4527 0036 7B68     		ldr	r3, [r7, #4]
 4528 0038 2022     		movs	r2, #32
 4529 003a 83F83D20 		strb	r2, [r3, #61]
2788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4530              		.loc 1 2790 3 discriminator 2
 4531 003e 7B68     		ldr	r3, [r7, #4]
 4532 0040 0022     		movs	r2, #0
 4533 0042 83F83C20 		strb	r2, [r3, #60]
2791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4534              		.loc 1 2792 10 discriminator 2
 4535 0046 0023     		movs	r3, #0
 4536              	.L212:
2793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4537              		.loc 1 2793 1
 4538 0048 1846     		mov	r0, r3
 4539 004a 0C37     		adds	r7, r7, #12
 4540              		.cfi_def_cfa_offset 4
 4541 004c BD46     		mov	sp, r7
 4542              		.cfi_def_cfa_register 13
 4543              		@ sp needed
 4544 004e 80BC     		pop	{r7}
 4545              		.cfi_restore 7
 4546              		.cfi_def_cfa_offset 0
 4547 0050 7047     		bx	lr
 4548              		.cfi_endproc
 4549              	.LFE101:
 4551              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4552              		.align	1
 4553              		.global	HAL_MultiProcessor_ExitMuteMode
 4554              		.syntax unified
 4555              		.thumb
 4556              		.thumb_func
 4558              	HAL_MultiProcessor_ExitMuteMode:
 4559              	.LFB102:
2794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 129


2800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4560              		.loc 1 2802 1
 4561              		.cfi_startproc
 4562              		@ args = 0, pretend = 0, frame = 8
 4563              		@ frame_needed = 1, uses_anonymous_args = 0
 4564              		@ link register save eliminated.
 4565 0000 80B4     		push	{r7}
 4566              		.cfi_def_cfa_offset 4
 4567              		.cfi_offset 7, -4
 4568 0002 83B0     		sub	sp, sp, #12
 4569              		.cfi_def_cfa_offset 16
 4570 0004 00AF     		add	r7, sp, #0
 4571              		.cfi_def_cfa_register 7
 4572 0006 7860     		str	r0, [r7, #4]
2803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 4573              		.loc 1 2807 3
 4574 0008 7B68     		ldr	r3, [r7, #4]
 4575 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4576 000e 012B     		cmp	r3, #1
 4577 0010 01D1     		bne	.L214
 4578              		.loc 1 2807 3 is_stmt 0 discriminator 1
 4579 0012 0223     		movs	r3, #2
 4580 0014 18E0     		b	.L215
 4581              	.L214:
 4582              		.loc 1 2807 3 discriminator 2
 4583 0016 7B68     		ldr	r3, [r7, #4]
 4584 0018 0122     		movs	r2, #1
 4585 001a 83F83C20 		strb	r2, [r3, #60]
2808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4586              		.loc 1 2809 17 is_stmt 1 discriminator 2
 4587 001e 7B68     		ldr	r3, [r7, #4]
 4588 0020 2422     		movs	r2, #36
 4589 0022 83F83D20 		strb	r2, [r3, #61]
2810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 4590              		.loc 1 2812 3 discriminator 2
 4591 0026 7B68     		ldr	r3, [r7, #4]
 4592 0028 1B68     		ldr	r3, [r3]
 4593 002a DA68     		ldr	r2, [r3, #12]
 4594 002c 7B68     		ldr	r3, [r7, #4]
 4595 002e 1B68     		ldr	r3, [r3]
 4596 0030 22F00202 		bic	r2, r2, #2
 4597 0034 DA60     		str	r2, [r3, #12]
2813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4598              		.loc 1 2814 17 discriminator 2
 4599 0036 7B68     		ldr	r3, [r7, #4]
 4600 0038 2022     		movs	r2, #32
 4601 003a 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 130


2815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4602              		.loc 1 2817 3 discriminator 2
 4603 003e 7B68     		ldr	r3, [r7, #4]
 4604 0040 0022     		movs	r2, #0
 4605 0042 83F83C20 		strb	r2, [r3, #60]
2818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4606              		.loc 1 2819 10 discriminator 2
 4607 0046 0023     		movs	r3, #0
 4608              	.L215:
2820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4609              		.loc 1 2820 1
 4610 0048 1846     		mov	r0, r3
 4611 004a 0C37     		adds	r7, r7, #12
 4612              		.cfi_def_cfa_offset 4
 4613 004c BD46     		mov	sp, r7
 4614              		.cfi_def_cfa_register 13
 4615              		@ sp needed
 4616 004e 80BC     		pop	{r7}
 4617              		.cfi_restore 7
 4618              		.cfi_def_cfa_offset 0
 4619 0050 7047     		bx	lr
 4620              		.cfi_endproc
 4621              	.LFE102:
 4623              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4624              		.align	1
 4625              		.global	HAL_HalfDuplex_EnableTransmitter
 4626              		.syntax unified
 4627              		.thumb
 4628              		.thumb_func
 4630              	HAL_HalfDuplex_EnableTransmitter:
 4631              	.LFB103:
2821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4632              		.loc 1 2829 1
 4633              		.cfi_startproc
 4634              		@ args = 0, pretend = 0, frame = 16
 4635              		@ frame_needed = 1, uses_anonymous_args = 0
 4636              		@ link register save eliminated.
 4637 0000 80B4     		push	{r7}
 4638              		.cfi_def_cfa_offset 4
 4639              		.cfi_offset 7, -4
 4640 0002 85B0     		sub	sp, sp, #20
 4641              		.cfi_def_cfa_offset 24
 4642 0004 00AF     		add	r7, sp, #0
 4643              		.cfi_def_cfa_register 7
 4644 0006 7860     		str	r0, [r7, #4]
2830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 131


 4645              		.loc 1 2830 12
 4646 0008 0023     		movs	r3, #0
 4647 000a FB60     		str	r3, [r7, #12]
2831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 4648              		.loc 1 2833 3
 4649 000c 7B68     		ldr	r3, [r7, #4]
 4650 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4651 0012 012B     		cmp	r3, #1
 4652 0014 01D1     		bne	.L217
 4653              		.loc 1 2833 3 is_stmt 0 discriminator 1
 4654 0016 0223     		movs	r3, #2
 4655 0018 20E0     		b	.L218
 4656              	.L217:
 4657              		.loc 1 2833 3 discriminator 2
 4658 001a 7B68     		ldr	r3, [r7, #4]
 4659 001c 0122     		movs	r2, #1
 4660 001e 83F83C20 		strb	r2, [r3, #60]
2834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4661              		.loc 1 2835 17 is_stmt 1 discriminator 2
 4662 0022 7B68     		ldr	r3, [r7, #4]
 4663 0024 2422     		movs	r2, #36
 4664 0026 83F83D20 		strb	r2, [r3, #61]
2836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4665              		.loc 1 2838 17 discriminator 2
 4666 002a 7B68     		ldr	r3, [r7, #4]
 4667 002c 1B68     		ldr	r3, [r3]
 4668              		.loc 1 2838 10 discriminator 2
 4669 002e DB68     		ldr	r3, [r3, #12]
 4670 0030 FB60     		str	r3, [r7, #12]
2839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4671              		.loc 1 2841 10 discriminator 2
 4672 0032 FB68     		ldr	r3, [r7, #12]
 4673 0034 23F00C03 		bic	r3, r3, #12
 4674 0038 FB60     		str	r3, [r7, #12]
2842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 4675              		.loc 1 2844 10 discriminator 2
 4676 003a FB68     		ldr	r3, [r7, #12]
 4677 003c 43F00803 		orr	r3, r3, #8
 4678 0040 FB60     		str	r3, [r7, #12]
2845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4679              		.loc 1 2847 3 discriminator 2
 4680 0042 7B68     		ldr	r3, [r7, #4]
 4681 0044 1B68     		ldr	r3, [r3]
 4682 0046 FA68     		ldr	r2, [r7, #12]
 4683 0048 DA60     		str	r2, [r3, #12]
2848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 132


2849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4684              		.loc 1 2849 17 discriminator 2
 4685 004a 7B68     		ldr	r3, [r7, #4]
 4686 004c 2022     		movs	r2, #32
 4687 004e 83F83D20 		strb	r2, [r3, #61]
2850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4688              		.loc 1 2852 3 discriminator 2
 4689 0052 7B68     		ldr	r3, [r7, #4]
 4690 0054 0022     		movs	r2, #0
 4691 0056 83F83C20 		strb	r2, [r3, #60]
2853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4692              		.loc 1 2854 10 discriminator 2
 4693 005a 0023     		movs	r3, #0
 4694              	.L218:
2855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4695              		.loc 1 2855 1
 4696 005c 1846     		mov	r0, r3
 4697 005e 1437     		adds	r7, r7, #20
 4698              		.cfi_def_cfa_offset 4
 4699 0060 BD46     		mov	sp, r7
 4700              		.cfi_def_cfa_register 13
 4701              		@ sp needed
 4702 0062 80BC     		pop	{r7}
 4703              		.cfi_restore 7
 4704              		.cfi_def_cfa_offset 0
 4705 0064 7047     		bx	lr
 4706              		.cfi_endproc
 4707              	.LFE103:
 4709              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4710              		.align	1
 4711              		.global	HAL_HalfDuplex_EnableReceiver
 4712              		.syntax unified
 4713              		.thumb
 4714              		.thumb_func
 4716              	HAL_HalfDuplex_EnableReceiver:
 4717              	.LFB104:
2856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4718              		.loc 1 2864 1
 4719              		.cfi_startproc
 4720              		@ args = 0, pretend = 0, frame = 16
 4721              		@ frame_needed = 1, uses_anonymous_args = 0
 4722              		@ link register save eliminated.
 4723 0000 80B4     		push	{r7}
 4724              		.cfi_def_cfa_offset 4
 4725              		.cfi_offset 7, -4
 4726 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 133


 4727              		.cfi_def_cfa_offset 24
 4728 0004 00AF     		add	r7, sp, #0
 4729              		.cfi_def_cfa_register 7
 4730 0006 7860     		str	r0, [r7, #4]
2865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4731              		.loc 1 2865 12
 4732 0008 0023     		movs	r3, #0
 4733 000a FB60     		str	r3, [r7, #12]
2866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
2868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 4734              		.loc 1 2868 3
 4735 000c 7B68     		ldr	r3, [r7, #4]
 4736 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 4737 0012 012B     		cmp	r3, #1
 4738 0014 01D1     		bne	.L220
 4739              		.loc 1 2868 3 is_stmt 0 discriminator 1
 4740 0016 0223     		movs	r3, #2
 4741 0018 20E0     		b	.L221
 4742              	.L220:
 4743              		.loc 1 2868 3 discriminator 2
 4744 001a 7B68     		ldr	r3, [r7, #4]
 4745 001c 0122     		movs	r2, #1
 4746 001e 83F83C20 		strb	r2, [r3, #60]
2869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4747              		.loc 1 2870 17 is_stmt 1 discriminator 2
 4748 0022 7B68     		ldr	r3, [r7, #4]
 4749 0024 2422     		movs	r2, #36
 4750 0026 83F83D20 		strb	r2, [r3, #61]
2871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 4751              		.loc 1 2873 17 discriminator 2
 4752 002a 7B68     		ldr	r3, [r7, #4]
 4753 002c 1B68     		ldr	r3, [r3]
 4754              		.loc 1 2873 10 discriminator 2
 4755 002e DB68     		ldr	r3, [r3, #12]
 4756 0030 FB60     		str	r3, [r7, #12]
2874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
2876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 4757              		.loc 1 2876 10 discriminator 2
 4758 0032 FB68     		ldr	r3, [r7, #12]
 4759 0034 23F00C03 		bic	r3, r3, #12
 4760 0038 FB60     		str	r3, [r7, #12]
2877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 4761              		.loc 1 2879 10 discriminator 2
 4762 003a FB68     		ldr	r3, [r7, #12]
 4763 003c 43F00403 		orr	r3, r3, #4
 4764 0040 FB60     		str	r3, [r7, #12]
2880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
2882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 4765              		.loc 1 2882 3 discriminator 2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 134


 4766 0042 7B68     		ldr	r3, [r7, #4]
 4767 0044 1B68     		ldr	r3, [r3]
 4768 0046 FA68     		ldr	r2, [r7, #12]
 4769 0048 DA60     		str	r2, [r3, #12]
2883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4770              		.loc 1 2884 17 discriminator 2
 4771 004a 7B68     		ldr	r3, [r7, #4]
 4772 004c 2022     		movs	r2, #32
 4773 004e 83F83D20 		strb	r2, [r3, #61]
2885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
2887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4774              		.loc 1 2887 3 discriminator 2
 4775 0052 7B68     		ldr	r3, [r7, #4]
 4776 0054 0022     		movs	r2, #0
 4777 0056 83F83C20 		strb	r2, [r3, #60]
2888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4778              		.loc 1 2889 10 discriminator 2
 4779 005a 0023     		movs	r3, #0
 4780              	.L221:
2890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4781              		.loc 1 2890 1
 4782 005c 1846     		mov	r0, r3
 4783 005e 1437     		adds	r7, r7, #20
 4784              		.cfi_def_cfa_offset 4
 4785 0060 BD46     		mov	sp, r7
 4786              		.cfi_def_cfa_register 13
 4787              		@ sp needed
 4788 0062 80BC     		pop	{r7}
 4789              		.cfi_restore 7
 4790              		.cfi_def_cfa_offset 0
 4791 0064 7047     		bx	lr
 4792              		.cfi_endproc
 4793              	.LFE104:
 4795              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4796              		.align	1
 4797              		.global	HAL_UART_GetState
 4798              		.syntax unified
 4799              		.thumb
 4800              		.thumb_func
 4802              	HAL_UART_GetState:
 4803              	.LFB105:
2891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
2899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
2900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
2903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 135


2904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
2907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
2911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
2916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
2919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4804              		.loc 1 2921 1
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 16
 4807              		@ frame_needed = 1, uses_anonymous_args = 0
 4808              		@ link register save eliminated.
 4809 0000 80B4     		push	{r7}
 4810              		.cfi_def_cfa_offset 4
 4811              		.cfi_offset 7, -4
 4812 0002 85B0     		sub	sp, sp, #20
 4813              		.cfi_def_cfa_offset 24
 4814 0004 00AF     		add	r7, sp, #0
 4815              		.cfi_def_cfa_register 7
 4816 0006 7860     		str	r0, [r7, #4]
2922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 4817              		.loc 1 2922 12
 4818 0008 0023     		movs	r3, #0
 4819 000a FB60     		str	r3, [r7, #12]
 4820              		.loc 1 2922 27
 4821 000c 0023     		movs	r3, #0
 4822 000e BB60     		str	r3, [r7, #8]
2923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
 4823              		.loc 1 2923 16
 4824 0010 7B68     		ldr	r3, [r7, #4]
 4825 0012 93F83D30 		ldrb	r3, [r3, #61]
 4826 0016 DBB2     		uxtb	r3, r3
 4827              		.loc 1 2923 9
 4828 0018 FB60     		str	r3, [r7, #12]
2924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 4829              		.loc 1 2924 16
 4830 001a 7B68     		ldr	r3, [r7, #4]
 4831 001c 93F83E30 		ldrb	r3, [r3, #62]
 4832 0020 DBB2     		uxtb	r3, r3
 4833              		.loc 1 2924 9
 4834 0022 BB60     		str	r3, [r7, #8]
2925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4835              		.loc 1 2926 10
 4836 0024 FB68     		ldr	r3, [r7, #12]
 4837 0026 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 136


 4838 0028 BB68     		ldr	r3, [r7, #8]
 4839 002a DBB2     		uxtb	r3, r3
 4840 002c 1343     		orrs	r3, r3, r2
 4841 002e DBB2     		uxtb	r3, r3
2927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4842              		.loc 1 2927 1
 4843 0030 1846     		mov	r0, r3
 4844 0032 1437     		adds	r7, r7, #20
 4845              		.cfi_def_cfa_offset 4
 4846 0034 BD46     		mov	sp, r7
 4847              		.cfi_def_cfa_register 13
 4848              		@ sp needed
 4849 0036 80BC     		pop	{r7}
 4850              		.cfi_restore 7
 4851              		.cfi_def_cfa_offset 0
 4852 0038 7047     		bx	lr
 4853              		.cfi_endproc
 4854              	.LFE105:
 4856              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4857              		.align	1
 4858              		.global	HAL_UART_GetError
 4859              		.syntax unified
 4860              		.thumb
 4861              		.thumb_func
 4863              	HAL_UART_GetError:
 4864              	.LFB106:
2928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
2931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified UART.
2933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4865              		.loc 1 2936 1
 4866              		.cfi_startproc
 4867              		@ args = 0, pretend = 0, frame = 8
 4868              		@ frame_needed = 1, uses_anonymous_args = 0
 4869              		@ link register save eliminated.
 4870 0000 80B4     		push	{r7}
 4871              		.cfi_def_cfa_offset 4
 4872              		.cfi_offset 7, -4
 4873 0002 83B0     		sub	sp, sp, #12
 4874              		.cfi_def_cfa_offset 16
 4875 0004 00AF     		add	r7, sp, #0
 4876              		.cfi_def_cfa_register 7
 4877 0006 7860     		str	r0, [r7, #4]
2937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 4878              		.loc 1 2937 15
 4879 0008 7B68     		ldr	r3, [r7, #4]
 4880 000a 1B6C     		ldr	r3, [r3, #64]
2938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4881              		.loc 1 2938 1
 4882 000c 1846     		mov	r0, r3
 4883 000e 0C37     		adds	r7, r7, #12
 4884              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 137


 4885 0010 BD46     		mov	sp, r7
 4886              		.cfi_def_cfa_register 13
 4887              		@ sp needed
 4888 0012 80BC     		pop	{r7}
 4889              		.cfi_restore 7
 4890              		.cfi_def_cfa_offset 0
 4891 0014 7047     		bx	lr
 4892              		.cfi_endproc
 4893              	.LFE106:
 4895              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4896              		.align	1
 4897              		.syntax unified
 4898              		.thumb
 4899              		.thumb_func
 4901              	UART_DMATransmitCplt:
 4902              	.LFB107:
2939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
2950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
2955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval none
2956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
2960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Init the UART Callback settings */
2961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
2972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 138


2980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4903              		.loc 1 2981 1
 4904              		.cfi_startproc
 4905              		@ args = 0, pretend = 0, frame = 16
 4906              		@ frame_needed = 1, uses_anonymous_args = 0
 4907 0000 80B5     		push	{r7, lr}
 4908              		.cfi_def_cfa_offset 8
 4909              		.cfi_offset 7, -8
 4910              		.cfi_offset 14, -4
 4911 0002 84B0     		sub	sp, sp, #16
 4912              		.cfi_def_cfa_offset 24
 4913 0004 00AF     		add	r7, sp, #0
 4914              		.cfi_def_cfa_register 7
 4915 0006 7860     		str	r0, [r7, #4]
2982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4916              		.loc 1 2982 23
 4917 0008 7B68     		ldr	r3, [r7, #4]
 4918 000a 5B6A     		ldr	r3, [r3, #36]
 4919 000c FB60     		str	r3, [r7, #12]
2983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4920              		.loc 1 2984 12
 4921 000e 7B68     		ldr	r3, [r7, #4]
 4922 0010 1B68     		ldr	r3, [r3]
 4923              		.loc 1 2984 22
 4924 0012 1B68     		ldr	r3, [r3]
 4925              		.loc 1 2984 28
 4926 0014 03F02003 		and	r3, r3, #32
 4927              		.loc 1 2984 6
 4928 0018 002B     		cmp	r3, #0
 4929 001a 13D1     		bne	.L227
2985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4930              		.loc 1 2986 24
 4931 001c FB68     		ldr	r3, [r7, #12]
 4932 001e 0022     		movs	r2, #0
 4933 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4934              		.loc 1 2990 5
 4935 0022 FB68     		ldr	r3, [r7, #12]
 4936 0024 1B68     		ldr	r3, [r3]
 4937 0026 5A69     		ldr	r2, [r3, #20]
 4938 0028 FB68     		ldr	r3, [r7, #12]
 4939 002a 1B68     		ldr	r3, [r3]
 4940 002c 22F08002 		bic	r2, r2, #128
 4941 0030 5A61     		str	r2, [r3, #20]
2991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4942              		.loc 1 2993 5
 4943 0032 FB68     		ldr	r3, [r7, #12]
 4944 0034 1B68     		ldr	r3, [r3]
 4945 0036 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 139


 4946 0038 FB68     		ldr	r3, [r7, #12]
 4947 003a 1B68     		ldr	r3, [r3]
 4948 003c 42F04002 		orr	r2, r2, #64
 4949 0040 DA60     		str	r2, [r3, #12]
2994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4950              		.loc 1 3007 1
 4951 0042 02E0     		b	.L229
 4952              	.L227:
3004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4953              		.loc 1 3004 5
 4954 0044 F868     		ldr	r0, [r7, #12]
 4955 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4956              	.L229:
 4957              		.loc 1 3007 1
 4958 004a 00BF     		nop
 4959 004c 1037     		adds	r7, r7, #16
 4960              		.cfi_def_cfa_offset 8
 4961 004e BD46     		mov	sp, r7
 4962              		.cfi_def_cfa_register 13
 4963              		@ sp needed
 4964 0050 80BD     		pop	{r7, pc}
 4965              		.cfi_endproc
 4966              	.LFE107:
 4968              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4969              		.align	1
 4970              		.syntax unified
 4971              		.thumb
 4972              		.thumb_func
 4974              	UART_DMATxHalfCplt:
 4975              	.LFB108:
3008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4976              		.loc 1 3016 1
 4977              		.cfi_startproc
 4978              		@ args = 0, pretend = 0, frame = 16
 4979              		@ frame_needed = 1, uses_anonymous_args = 0
 4980 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 140


 4981              		.cfi_def_cfa_offset 8
 4982              		.cfi_offset 7, -8
 4983              		.cfi_offset 14, -4
 4984 0002 84B0     		sub	sp, sp, #16
 4985              		.cfi_def_cfa_offset 24
 4986 0004 00AF     		add	r7, sp, #0
 4987              		.cfi_def_cfa_register 7
 4988 0006 7860     		str	r0, [r7, #4]
3017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4989              		.loc 1 3017 23
 4990 0008 7B68     		ldr	r3, [r7, #4]
 4991 000a 5B6A     		ldr	r3, [r3, #36]
 4992 000c FB60     		str	r3, [r7, #12]
3018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4993              		.loc 1 3024 3
 4994 000e F868     		ldr	r0, [r7, #12]
 4995 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4996              		.loc 1 3026 1
 4997 0014 00BF     		nop
 4998 0016 1037     		adds	r7, r7, #16
 4999              		.cfi_def_cfa_offset 8
 5000 0018 BD46     		mov	sp, r7
 5001              		.cfi_def_cfa_register 13
 5002              		@ sp needed
 5003 001a 80BD     		pop	{r7, pc}
 5004              		.cfi_endproc
 5005              	.LFE108:
 5007              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5008              		.align	1
 5009              		.syntax unified
 5010              		.thumb
 5011              		.thumb_func
 5013              	UART_DMAReceiveCplt:
 5014              	.LFB109:
3027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5015              		.loc 1 3035 1
 5016              		.cfi_startproc
 5017              		@ args = 0, pretend = 0, frame = 16
 5018              		@ frame_needed = 1, uses_anonymous_args = 0
 5019 0000 80B5     		push	{r7, lr}
 5020              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 141


 5021              		.cfi_offset 7, -8
 5022              		.cfi_offset 14, -4
 5023 0002 84B0     		sub	sp, sp, #16
 5024              		.cfi_def_cfa_offset 24
 5025 0004 00AF     		add	r7, sp, #0
 5026              		.cfi_def_cfa_register 7
 5027 0006 7860     		str	r0, [r7, #4]
3036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5028              		.loc 1 3036 23
 5029 0008 7B68     		ldr	r3, [r7, #4]
 5030 000a 5B6A     		ldr	r3, [r3, #36]
 5031 000c FB60     		str	r3, [r7, #12]
3037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
3038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 5032              		.loc 1 3038 12
 5033 000e 7B68     		ldr	r3, [r7, #4]
 5034 0010 1B68     		ldr	r3, [r3]
 5035              		.loc 1 3038 22
 5036 0012 1B68     		ldr	r3, [r3]
 5037              		.loc 1 3038 28
 5038 0014 03F02003 		and	r3, r3, #32
 5039              		.loc 1 3038 6
 5040 0018 002B     		cmp	r3, #0
 5041 001a 2AD1     		bne	.L232
3039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
 5042              		.loc 1 3040 24
 5043 001c FB68     		ldr	r3, [r7, #12]
 5044 001e 0022     		movs	r2, #0
 5045 0020 DA85     		strh	r2, [r3, #46]	@ movhi
3041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5046              		.loc 1 3043 5
 5047 0022 FB68     		ldr	r3, [r7, #12]
 5048 0024 1B68     		ldr	r3, [r3]
 5049 0026 DA68     		ldr	r2, [r3, #12]
 5050 0028 FB68     		ldr	r3, [r7, #12]
 5051 002a 1B68     		ldr	r3, [r3]
 5052 002c 22F48072 		bic	r2, r2, #256
 5053 0030 DA60     		str	r2, [r3, #12]
3044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5054              		.loc 1 3044 5
 5055 0032 FB68     		ldr	r3, [r7, #12]
 5056 0034 1B68     		ldr	r3, [r3]
 5057 0036 5A69     		ldr	r2, [r3, #20]
 5058 0038 FB68     		ldr	r3, [r7, #12]
 5059 003a 1B68     		ldr	r3, [r3]
 5060 003c 22F00102 		bic	r2, r2, #1
 5061 0040 5A61     		str	r2, [r3, #20]
3045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
3048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5062              		.loc 1 3048 5
 5063 0042 FB68     		ldr	r3, [r7, #12]
 5064 0044 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 142


 5065 0046 5A69     		ldr	r2, [r3, #20]
 5066 0048 FB68     		ldr	r3, [r7, #12]
 5067 004a 1B68     		ldr	r3, [r3]
 5068 004c 22F04002 		bic	r2, r2, #64
 5069 0050 5A61     		str	r2, [r3, #20]
3049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5070              		.loc 1 3051 20
 5071 0052 FB68     		ldr	r3, [r7, #12]
 5072 0054 2022     		movs	r2, #32
 5073 0056 83F83E20 		strb	r2, [r3, #62]
3052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5074              		.loc 1 3054 14
 5075 005a FB68     		ldr	r3, [r7, #12]
 5076 005c 1B6B     		ldr	r3, [r3, #48]
 5077              		.loc 1 3054 8
 5078 005e 012B     		cmp	r3, #1
 5079 0060 07D1     		bne	.L232
3055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5080              		.loc 1 3056 7
 5081 0062 FB68     		ldr	r3, [r7, #12]
 5082 0064 1B68     		ldr	r3, [r3]
 5083 0066 DA68     		ldr	r2, [r3, #12]
 5084 0068 FB68     		ldr	r3, [r7, #12]
 5085 006a 1B68     		ldr	r3, [r3]
 5086 006c 22F01002 		bic	r2, r2, #16
 5087 0070 DA60     		str	r2, [r3, #12]
 5088              	.L232:
3057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5089              		.loc 1 3062 12
 5090 0072 FB68     		ldr	r3, [r7, #12]
 5091 0074 1B6B     		ldr	r3, [r3, #48]
 5092              		.loc 1 3062 6
 5093 0076 012B     		cmp	r3, #1
 5094 0078 06D1     		bne	.L233
3063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
3064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 5095              		.loc 1 3069 5
 5096 007a FB68     		ldr	r3, [r7, #12]
 5097 007c 9B8D     		ldrh	r3, [r3, #44]
 5098 007e 1946     		mov	r1, r3
 5099 0080 F868     		ldr	r0, [r7, #12]
 5100 0082 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 143


3070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5101              		.loc 1 3083 1
 5102 0086 02E0     		b	.L235
 5103              	.L233:
3080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5104              		.loc 1 3080 5
 5105 0088 F868     		ldr	r0, [r7, #12]
 5106 008a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5107              	.L235:
 5108              		.loc 1 3083 1
 5109 008e 00BF     		nop
 5110 0090 1037     		adds	r7, r7, #16
 5111              		.cfi_def_cfa_offset 8
 5112 0092 BD46     		mov	sp, r7
 5113              		.cfi_def_cfa_register 13
 5114              		@ sp needed
 5115 0094 80BD     		pop	{r7, pc}
 5116              		.cfi_endproc
 5117              	.LFE109:
 5119              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5120              		.align	1
 5121              		.syntax unified
 5122              		.thumb
 5123              		.thumb_func
 5125              	UART_DMARxHalfCplt:
 5126              	.LFB110:
3084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5127              		.loc 1 3092 1
 5128              		.cfi_startproc
 5129              		@ args = 0, pretend = 0, frame = 16
 5130              		@ frame_needed = 1, uses_anonymous_args = 0
 5131 0000 80B5     		push	{r7, lr}
 5132              		.cfi_def_cfa_offset 8
 5133              		.cfi_offset 7, -8
 5134              		.cfi_offset 14, -4
 5135 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 144


 5136              		.cfi_def_cfa_offset 24
 5137 0004 00AF     		add	r7, sp, #0
 5138              		.cfi_def_cfa_register 7
 5139 0006 7860     		str	r0, [r7, #4]
3093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5140              		.loc 1 3093 23
 5141 0008 7B68     		ldr	r3, [r7, #4]
 5142 000a 5B6A     		ldr	r3, [r3, #36]
 5143 000c FB60     		str	r3, [r7, #12]
3094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check current reception Mode :
3096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5144              		.loc 1 3097 12
 5145 000e FB68     		ldr	r3, [r7, #12]
 5146 0010 1B6B     		ldr	r3, [r3, #48]
 5147              		.loc 1 3097 6
 5148 0012 012B     		cmp	r3, #1
 5149 0014 08D1     		bne	.L237
3098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize/2U);
3102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize/2U);
 5150              		.loc 1 3104 44
 5151 0016 FB68     		ldr	r3, [r7, #12]
 5152 0018 9B8D     		ldrh	r3, [r3, #44]
 5153              		.loc 1 3104 5
 5154 001a 5B08     		lsrs	r3, r3, #1
 5155 001c 9BB2     		uxth	r3, r3
 5156 001e 1946     		mov	r1, r3
 5157 0020 F868     		ldr	r0, [r7, #12]
 5158 0022 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5159              		.loc 1 3118 1
 5160 0026 02E0     		b	.L239
 5161              	.L237:
3115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5162              		.loc 1 3115 5
 5163 0028 F868     		ldr	r0, [r7, #12]
 5164 002a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 5165              	.L239:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 145


 5166              		.loc 1 3118 1
 5167 002e 00BF     		nop
 5168 0030 1037     		adds	r7, r7, #16
 5169              		.cfi_def_cfa_offset 8
 5170 0032 BD46     		mov	sp, r7
 5171              		.cfi_def_cfa_register 13
 5172              		@ sp needed
 5173 0034 80BD     		pop	{r7, pc}
 5174              		.cfi_endproc
 5175              	.LFE110:
 5177              		.section	.text.UART_DMAError,"ax",%progbits
 5178              		.align	1
 5179              		.syntax unified
 5180              		.thumb
 5181              		.thumb_func
 5183              	UART_DMAError:
 5184              	.LFB111:
3119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5185              		.loc 1 3127 1
 5186              		.cfi_startproc
 5187              		@ args = 0, pretend = 0, frame = 16
 5188              		@ frame_needed = 1, uses_anonymous_args = 0
 5189 0000 80B5     		push	{r7, lr}
 5190              		.cfi_def_cfa_offset 8
 5191              		.cfi_offset 7, -8
 5192              		.cfi_offset 14, -4
 5193 0002 84B0     		sub	sp, sp, #16
 5194              		.cfi_def_cfa_offset 24
 5195 0004 00AF     		add	r7, sp, #0
 5196              		.cfi_def_cfa_register 7
 5197 0006 7860     		str	r0, [r7, #4]
3128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5198              		.loc 1 3128 12
 5199 0008 0023     		movs	r3, #0
 5200 000a FB60     		str	r3, [r7, #12]
3129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5201              		.loc 1 3129 23
 5202 000c 7B68     		ldr	r3, [r7, #4]
 5203 000e 5B6A     		ldr	r3, [r3, #36]
 5204 0010 BB60     		str	r3, [r7, #8]
3130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 5205              		.loc 1 3132 16
 5206 0012 BB68     		ldr	r3, [r7, #8]
 5207 0014 1B68     		ldr	r3, [r3]
 5208 0016 5B69     		ldr	r3, [r3, #20]
 5209 0018 03F08003 		and	r3, r3, #128
 5210 001c 002B     		cmp	r3, #0
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 146


 5211 001e 14BF     		ite	ne
 5212 0020 0123     		movne	r3, #1
 5213 0022 0023     		moveq	r3, #0
 5214 0024 DBB2     		uxtb	r3, r3
 5215              		.loc 1 3132 14
 5216 0026 FB60     		str	r3, [r7, #12]
3133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 5217              		.loc 1 3133 13
 5218 0028 BB68     		ldr	r3, [r7, #8]
 5219 002a 93F83D30 		ldrb	r3, [r3, #61]
 5220 002e DBB2     		uxtb	r3, r3
 5221              		.loc 1 3133 6
 5222 0030 212B     		cmp	r3, #33
 5223 0032 08D1     		bne	.L241
 5224              		.loc 1 3133 49 discriminator 1
 5225 0034 FB68     		ldr	r3, [r7, #12]
 5226 0036 002B     		cmp	r3, #0
 5227 0038 05D0     		beq	.L241
3134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 5228              		.loc 1 3135 24
 5229 003a BB68     		ldr	r3, [r7, #8]
 5230 003c 0022     		movs	r2, #0
 5231 003e DA84     		strh	r2, [r3, #38]	@ movhi
3136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 5232              		.loc 1 3136 5
 5233 0040 B868     		ldr	r0, [r7, #8]
 5234 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 5235              	.L241:
3137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5236              		.loc 1 3140 16
 5237 0046 BB68     		ldr	r3, [r7, #8]
 5238 0048 1B68     		ldr	r3, [r3]
 5239 004a 5B69     		ldr	r3, [r3, #20]
 5240 004c 03F04003 		and	r3, r3, #64
 5241 0050 002B     		cmp	r3, #0
 5242 0052 14BF     		ite	ne
 5243 0054 0123     		movne	r3, #1
 5244 0056 0023     		moveq	r3, #0
 5245 0058 DBB2     		uxtb	r3, r3
 5246              		.loc 1 3140 14
 5247 005a FB60     		str	r3, [r7, #12]
3141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 5248              		.loc 1 3141 13
 5249 005c BB68     		ldr	r3, [r7, #8]
 5250 005e 93F83E30 		ldrb	r3, [r3, #62]
 5251 0062 DBB2     		uxtb	r3, r3
 5252              		.loc 1 3141 6
 5253 0064 222B     		cmp	r3, #34
 5254 0066 08D1     		bne	.L242
 5255              		.loc 1 3141 50 discriminator 1
 5256 0068 FB68     		ldr	r3, [r7, #12]
 5257 006a 002B     		cmp	r3, #0
 5258 006c 05D0     		beq	.L242
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 147


3142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5259              		.loc 1 3143 24
 5260 006e BB68     		ldr	r3, [r7, #8]
 5261 0070 0022     		movs	r2, #0
 5262 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 5263              		.loc 1 3144 5
 5264 0074 B868     		ldr	r0, [r7, #8]
 5265 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 5266              	.L242:
3145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 5267              		.loc 1 3147 20
 5268 007a BB68     		ldr	r3, [r7, #8]
 5269 007c 1B6C     		ldr	r3, [r3, #64]
 5270 007e 43F01002 		orr	r2, r3, #16
 5271 0082 BB68     		ldr	r3, [r7, #8]
 5272 0084 1A64     		str	r2, [r3, #64]
3148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
3151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5273              		.loc 1 3153 3
 5274 0086 B868     		ldr	r0, [r7, #8]
 5275 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5276              		.loc 1 3155 1
 5277 008c 00BF     		nop
 5278 008e 1037     		adds	r7, r7, #16
 5279              		.cfi_def_cfa_offset 8
 5280 0090 BD46     		mov	sp, r7
 5281              		.cfi_def_cfa_register 13
 5282              		@ sp needed
 5283 0092 80BD     		pop	{r7, pc}
 5284              		.cfi_endproc
 5285              	.LFE111:
 5287              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5288              		.align	1
 5289              		.syntax unified
 5290              		.thumb
 5291              		.thumb_func
 5293              	UART_WaitOnFlagUntilTimeout:
 5294              	.LFB112:
3156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
3159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
3163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
3164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout Timeout duration
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 148


3165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5295              		.loc 1 3168 1
 5296              		.cfi_startproc
 5297              		@ args = 4, pretend = 0, frame = 16
 5298              		@ frame_needed = 1, uses_anonymous_args = 0
 5299 0000 80B5     		push	{r7, lr}
 5300              		.cfi_def_cfa_offset 8
 5301              		.cfi_offset 7, -8
 5302              		.cfi_offset 14, -4
 5303 0002 84B0     		sub	sp, sp, #16
 5304              		.cfi_def_cfa_offset 24
 5305 0004 00AF     		add	r7, sp, #0
 5306              		.cfi_def_cfa_register 7
 5307 0006 F860     		str	r0, [r7, #12]
 5308 0008 B960     		str	r1, [r7, #8]
 5309 000a 3B60     		str	r3, [r7]
 5310 000c 1346     		mov	r3, r2
 5311 000e FB71     		strb	r3, [r7, #7]
3169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
3170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5312              		.loc 1 3170 9
 5313 0010 2CE0     		b	.L244
 5314              	.L247:
3171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
3173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 5315              		.loc 1 3173 8
 5316 0012 BB69     		ldr	r3, [r7, #24]
 5317 0014 B3F1FF3F 		cmp	r3, #-1
 5318 0018 28D0     		beq	.L244
3174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 5319              		.loc 1 3175 10
 5320 001a BB69     		ldr	r3, [r7, #24]
 5321 001c 002B     		cmp	r3, #0
 5322 001e 07D0     		beq	.L245
 5323              		.loc 1 3175 32 discriminator 1
 5324 0020 FFF7FEFF 		bl	HAL_GetTick
 5325 0024 0246     		mov	r2, r0
 5326              		.loc 1 3175 46 discriminator 1
 5327 0026 3B68     		ldr	r3, [r7]
 5328 0028 D31A     		subs	r3, r2, r3
 5329              		.loc 1 3175 27 discriminator 1
 5330 002a BA69     		ldr	r2, [r7, #24]
 5331 002c 9A42     		cmp	r2, r3
 5332 002e 1DD2     		bcs	.L244
 5333              	.L245:
3176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5334              		.loc 1 3178 9
 5335 0030 FB68     		ldr	r3, [r7, #12]
 5336 0032 1B68     		ldr	r3, [r3]
 5337 0034 DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 149


 5338 0036 FB68     		ldr	r3, [r7, #12]
 5339 0038 1B68     		ldr	r3, [r3]
 5340 003a 22F4D072 		bic	r2, r2, #416
 5341 003e DA60     		str	r2, [r3, #12]
3179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5342              		.loc 1 3179 9
 5343 0040 FB68     		ldr	r3, [r7, #12]
 5344 0042 1B68     		ldr	r3, [r3]
 5345 0044 5A69     		ldr	r2, [r3, #20]
 5346 0046 FB68     		ldr	r3, [r7, #12]
 5347 0048 1B68     		ldr	r3, [r3]
 5348 004a 22F00102 		bic	r2, r2, #1
 5349 004e 5A61     		str	r2, [r3, #20]
3180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 5350              		.loc 1 3181 24
 5351 0050 FB68     		ldr	r3, [r7, #12]
 5352 0052 2022     		movs	r2, #32
 5353 0054 83F83D20 		strb	r2, [r3, #61]
3182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5354              		.loc 1 3182 24
 5355 0058 FB68     		ldr	r3, [r7, #12]
 5356 005a 2022     		movs	r2, #32
 5357 005c 83F83E20 		strb	r2, [r3, #62]
3183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
3185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5358              		.loc 1 3185 9
 5359 0060 FB68     		ldr	r3, [r7, #12]
 5360 0062 0022     		movs	r2, #0
 5361 0064 83F83C20 		strb	r2, [r3, #60]
3186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 5362              		.loc 1 3187 16
 5363 0068 0323     		movs	r3, #3
 5364 006a 0FE0     		b	.L246
 5365              	.L244:
3170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5366              		.loc 1 3170 11
 5367 006c FB68     		ldr	r3, [r7, #12]
 5368 006e 1B68     		ldr	r3, [r3]
 5369 0070 1A68     		ldr	r2, [r3]
 5370 0072 BB68     		ldr	r3, [r7, #8]
 5371 0074 1340     		ands	r3, r3, r2
3170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5372              		.loc 1 3170 50
 5373 0076 BA68     		ldr	r2, [r7, #8]
 5374 0078 9A42     		cmp	r2, r3
 5375 007a 0CBF     		ite	eq
 5376 007c 0123     		moveq	r3, #1
 5377 007e 0023     		movne	r3, #0
 5378 0080 DBB2     		uxtb	r3, r3
 5379 0082 1A46     		mov	r2, r3
3170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 5380              		.loc 1 3170 59
 5381 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 150


 5382              		.loc 1 3170 9
 5383 0086 9A42     		cmp	r2, r3
 5384 0088 C3D0     		beq	.L247
3188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5385              		.loc 1 3191 10
 5386 008a 0023     		movs	r3, #0
 5387              	.L246:
3192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5388              		.loc 1 3192 1
 5389 008c 1846     		mov	r0, r3
 5390 008e 1037     		adds	r7, r7, #16
 5391              		.cfi_def_cfa_offset 8
 5392 0090 BD46     		mov	sp, r7
 5393              		.cfi_def_cfa_register 13
 5394              		@ sp needed
 5395 0092 80BD     		pop	{r7, pc}
 5396              		.cfi_endproc
 5397              	.LFE112:
 5399              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 5400              		.align	1
 5401              		.global	UART_Start_Receive_IT
 5402              		.syntax unified
 5403              		.thumb
 5404              		.thumb_func
 5406              	UART_Start_Receive_IT:
 5407              	.LFB113:
3193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5408              		.loc 1 3206 1
 5409              		.cfi_startproc
 5410              		@ args = 0, pretend = 0, frame = 16
 5411              		@ frame_needed = 1, uses_anonymous_args = 0
 5412              		@ link register save eliminated.
 5413 0000 80B4     		push	{r7}
 5414              		.cfi_def_cfa_offset 4
 5415              		.cfi_offset 7, -4
 5416 0002 85B0     		sub	sp, sp, #20
 5417              		.cfi_def_cfa_offset 24
 5418 0004 00AF     		add	r7, sp, #0
 5419              		.cfi_def_cfa_register 7
 5420 0006 F860     		str	r0, [r7, #12]
 5421 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 151


 5422 000a 1346     		mov	r3, r2
 5423 000c FB80     		strh	r3, [r7, #6]	@ movhi
3207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 5424              		.loc 1 3207 21
 5425 000e FB68     		ldr	r3, [r7, #12]
 5426 0010 BA68     		ldr	r2, [r7, #8]
 5427 0012 9A62     		str	r2, [r3, #40]
3208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 5428              		.loc 1 3208 21
 5429 0014 FB68     		ldr	r3, [r7, #12]
 5430 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 5431 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = Size;
 5432              		.loc 1 3209 22
 5433 001a FB68     		ldr	r3, [r7, #12]
 5434 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 5435 001e DA85     		strh	r2, [r3, #46]	@ movhi
3210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5436              		.loc 1 3211 20
 5437 0020 FB68     		ldr	r3, [r7, #12]
 5438 0022 0022     		movs	r2, #0
 5439 0024 1A64     		str	r2, [r3, #64]
3212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 5440              		.loc 1 3212 18
 5441 0026 FB68     		ldr	r3, [r7, #12]
 5442 0028 2222     		movs	r2, #34
 5443 002a 83F83E20 		strb	r2, [r3, #62]
3213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
3215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5444              		.loc 1 3215 3
 5445 002e FB68     		ldr	r3, [r7, #12]
 5446 0030 0022     		movs	r2, #0
 5447 0032 83F83C20 		strb	r2, [r3, #60]
3216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 5448              		.loc 1 3218 3
 5449 0036 FB68     		ldr	r3, [r7, #12]
 5450 0038 1B68     		ldr	r3, [r3]
 5451 003a DA68     		ldr	r2, [r3, #12]
 5452 003c FB68     		ldr	r3, [r7, #12]
 5453 003e 1B68     		ldr	r3, [r3]
 5454 0040 42F48072 		orr	r2, r2, #256
 5455 0044 DA60     		str	r2, [r3, #12]
3219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 5456              		.loc 1 3221 3
 5457 0046 FB68     		ldr	r3, [r7, #12]
 5458 0048 1B68     		ldr	r3, [r3]
 5459 004a 5A69     		ldr	r2, [r3, #20]
 5460 004c FB68     		ldr	r3, [r7, #12]
 5461 004e 1B68     		ldr	r3, [r3]
 5462 0050 42F00102 		orr	r2, r2, #1
 5463 0054 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 152


3222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 5464              		.loc 1 3224 3
 5465 0056 FB68     		ldr	r3, [r7, #12]
 5466 0058 1B68     		ldr	r3, [r3]
 5467 005a DA68     		ldr	r2, [r3, #12]
 5468 005c FB68     		ldr	r3, [r7, #12]
 5469 005e 1B68     		ldr	r3, [r3]
 5470 0060 42F02002 		orr	r2, r2, #32
 5471 0064 DA60     		str	r2, [r3, #12]
3225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5472              		.loc 1 3226 10
 5473 0066 0023     		movs	r3, #0
3227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5474              		.loc 1 3227 1
 5475 0068 1846     		mov	r0, r3
 5476 006a 1437     		adds	r7, r7, #20
 5477              		.cfi_def_cfa_offset 4
 5478 006c BD46     		mov	sp, r7
 5479              		.cfi_def_cfa_register 13
 5480              		@ sp needed
 5481 006e 80BC     		pop	{r7}
 5482              		.cfi_restore 7
 5483              		.cfi_def_cfa_offset 0
 5484 0070 7047     		bx	lr
 5485              		.cfi_endproc
 5486              	.LFE113:
 5488              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 5489              		.align	1
 5490              		.global	UART_Start_Receive_DMA
 5491              		.syntax unified
 5492              		.thumb
 5493              		.thumb_func
 5495              	UART_Start_Receive_DMA:
 5496              	.LFB114:
3228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5497              		.loc 1 3241 1
 5498              		.cfi_startproc
 5499              		@ args = 0, pretend = 0, frame = 24
 5500              		@ frame_needed = 1, uses_anonymous_args = 0
 5501 0000 80B5     		push	{r7, lr}
 5502              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 153


 5503              		.cfi_offset 7, -8
 5504              		.cfi_offset 14, -4
 5505 0002 86B0     		sub	sp, sp, #24
 5506              		.cfi_def_cfa_offset 32
 5507 0004 00AF     		add	r7, sp, #0
 5508              		.cfi_def_cfa_register 7
 5509 0006 F860     		str	r0, [r7, #12]
 5510 0008 B960     		str	r1, [r7, #8]
 5511 000a 1346     		mov	r3, r2
 5512 000c FB80     		strh	r3, [r7, #6]	@ movhi
3242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
3243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 5513              		.loc 1 3244 21
 5514 000e BA68     		ldr	r2, [r7, #8]
 5515 0010 FB68     		ldr	r3, [r7, #12]
 5516 0012 9A62     		str	r2, [r3, #40]
3245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferSize = Size;
 5517              		.loc 1 3245 21
 5518 0014 FB68     		ldr	r3, [r7, #12]
 5519 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 5520 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5521              		.loc 1 3247 20
 5522 001a FB68     		ldr	r3, [r7, #12]
 5523 001c 0022     		movs	r2, #0
 5524 001e 1A64     		str	r2, [r3, #64]
3248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 5525              		.loc 1 3248 18
 5526 0020 FB68     		ldr	r3, [r7, #12]
 5527 0022 2222     		movs	r2, #34
 5528 0024 83F83E20 		strb	r2, [r3, #62]
3249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 5529              		.loc 1 3251 8
 5530 0028 FB68     		ldr	r3, [r7, #12]
 5531 002a 9B6B     		ldr	r3, [r3, #56]
 5532              		.loc 1 3251 35
 5533 002c 234A     		ldr	r2, .L252
 5534 002e 9A62     		str	r2, [r3, #40]
3252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 5535              		.loc 1 3254 8
 5536 0030 FB68     		ldr	r3, [r7, #12]
 5537 0032 9B6B     		ldr	r3, [r3, #56]
 5538              		.loc 1 3254 39
 5539 0034 224A     		ldr	r2, .L252+4
 5540 0036 DA62     		str	r2, [r3, #44]
3255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA error callback */
3257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 5541              		.loc 1 3257 8
 5542 0038 FB68     		ldr	r3, [r7, #12]
 5543 003a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 154


 5544              		.loc 1 3257 36
 5545 003c 214A     		ldr	r2, .L252+8
 5546 003e 1A63     		str	r2, [r3, #48]
3258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the DMA abort callback */
3260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5547              		.loc 1 3260 8
 5548 0040 FB68     		ldr	r3, [r7, #12]
 5549 0042 9B6B     		ldr	r3, [r3, #56]
 5550              		.loc 1 3260 36
 5551 0044 0022     		movs	r2, #0
 5552 0046 5A63     		str	r2, [r3, #52]
3261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA stream */
3263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 5553              		.loc 1 3263 7
 5554 0048 07F10803 		add	r3, r7, #8
 5555 004c 7B61     		str	r3, [r7, #20]
3264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 5556              		.loc 1 3264 3
 5557 004e FB68     		ldr	r3, [r7, #12]
 5558 0050 986B     		ldr	r0, [r3, #56]
 5559              		.loc 1 3264 51
 5560 0052 FB68     		ldr	r3, [r7, #12]
 5561 0054 1B68     		ldr	r3, [r3]
 5562              		.loc 1 3264 45
 5563 0056 0433     		adds	r3, r3, #4
 5564              		.loc 1 3264 3
 5565 0058 1946     		mov	r1, r3
 5566 005a 7B69     		ldr	r3, [r7, #20]
 5567 005c 1A68     		ldr	r2, [r3]
 5568 005e FB88     		ldrh	r3, [r7, #6]
 5569 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5570              	.LBB11:
3265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 5571              		.loc 1 3267 3
 5572 0064 0023     		movs	r3, #0
 5573 0066 3B61     		str	r3, [r7, #16]
 5574 0068 FB68     		ldr	r3, [r7, #12]
 5575 006a 1B68     		ldr	r3, [r3]
 5576 006c 1B68     		ldr	r3, [r3]
 5577 006e 3B61     		str	r3, [r7, #16]
 5578 0070 FB68     		ldr	r3, [r7, #12]
 5579 0072 1B68     		ldr	r3, [r3]
 5580 0074 5B68     		ldr	r3, [r3, #4]
 5581 0076 3B61     		str	r3, [r7, #16]
 5582 0078 3B69     		ldr	r3, [r7, #16]
 5583              	.LBE11:
3268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
3270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5584              		.loc 1 3270 3
 5585 007a FB68     		ldr	r3, [r7, #12]
 5586 007c 0022     		movs	r2, #0
 5587 007e 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 155


3271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5588              		.loc 1 3273 3
 5589 0082 FB68     		ldr	r3, [r7, #12]
 5590 0084 1B68     		ldr	r3, [r3]
 5591 0086 DA68     		ldr	r2, [r3, #12]
 5592 0088 FB68     		ldr	r3, [r7, #12]
 5593 008a 1B68     		ldr	r3, [r3]
 5594 008c 42F48072 		orr	r2, r2, #256
 5595 0090 DA60     		str	r2, [r3, #12]
3274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5596              		.loc 1 3276 3
 5597 0092 FB68     		ldr	r3, [r7, #12]
 5598 0094 1B68     		ldr	r3, [r3]
 5599 0096 5A69     		ldr	r2, [r3, #20]
 5600 0098 FB68     		ldr	r3, [r7, #12]
 5601 009a 1B68     		ldr	r3, [r3]
 5602 009c 42F00102 		orr	r2, r2, #1
 5603 00a0 5A61     		str	r2, [r3, #20]
3277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   in the UART CR3 register */
3280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5604              		.loc 1 3280 3
 5605 00a2 FB68     		ldr	r3, [r7, #12]
 5606 00a4 1B68     		ldr	r3, [r3]
 5607 00a6 5A69     		ldr	r2, [r3, #20]
 5608 00a8 FB68     		ldr	r3, [r7, #12]
 5609 00aa 1B68     		ldr	r3, [r3]
 5610 00ac 42F04002 		orr	r2, r2, #64
 5611 00b0 5A61     		str	r2, [r3, #20]
3281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5612              		.loc 1 3282 10
 5613 00b2 0023     		movs	r3, #0
3283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5614              		.loc 1 3283 1
 5615 00b4 1846     		mov	r0, r3
 5616 00b6 1837     		adds	r7, r7, #24
 5617              		.cfi_def_cfa_offset 8
 5618 00b8 BD46     		mov	sp, r7
 5619              		.cfi_def_cfa_register 13
 5620              		@ sp needed
 5621 00ba 80BD     		pop	{r7, pc}
 5622              	.L253:
 5623              		.align	2
 5624              	.L252:
 5625 00bc 00000000 		.word	UART_DMAReceiveCplt
 5626 00c0 00000000 		.word	UART_DMARxHalfCplt
 5627 00c4 00000000 		.word	UART_DMAError
 5628              		.cfi_endproc
 5629              	.LFE114:
 5631              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5632              		.align	1
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 156


 5633              		.syntax unified
 5634              		.thumb
 5635              		.thumb_func
 5637              	UART_EndTxTransfer:
 5638              	.LFB115:
3284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5639              		.loc 1 3291 1
 5640              		.cfi_startproc
 5641              		@ args = 0, pretend = 0, frame = 8
 5642              		@ frame_needed = 1, uses_anonymous_args = 0
 5643              		@ link register save eliminated.
 5644 0000 80B4     		push	{r7}
 5645              		.cfi_def_cfa_offset 4
 5646              		.cfi_offset 7, -4
 5647 0002 83B0     		sub	sp, sp, #12
 5648              		.cfi_def_cfa_offset 16
 5649 0004 00AF     		add	r7, sp, #0
 5650              		.cfi_def_cfa_register 7
 5651 0006 7860     		str	r0, [r7, #4]
3292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5652              		.loc 1 3293 3
 5653 0008 7B68     		ldr	r3, [r7, #4]
 5654 000a 1B68     		ldr	r3, [r3]
 5655 000c DA68     		ldr	r2, [r3, #12]
 5656 000e 7B68     		ldr	r3, [r7, #4]
 5657 0010 1B68     		ldr	r3, [r3]
 5658 0012 22F0C002 		bic	r2, r2, #192
 5659 0016 DA60     		str	r2, [r3, #12]
3294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5660              		.loc 1 3296 17
 5661 0018 7B68     		ldr	r3, [r7, #4]
 5662 001a 2022     		movs	r2, #32
 5663 001c 83F83D20 		strb	r2, [r3, #61]
3297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5664              		.loc 1 3297 1
 5665 0020 00BF     		nop
 5666 0022 0C37     		adds	r7, r7, #12
 5667              		.cfi_def_cfa_offset 4
 5668 0024 BD46     		mov	sp, r7
 5669              		.cfi_def_cfa_register 13
 5670              		@ sp needed
 5671 0026 80BC     		pop	{r7}
 5672              		.cfi_restore 7
 5673              		.cfi_def_cfa_offset 0
 5674 0028 7047     		bx	lr
 5675              		.cfi_endproc
 5676              	.LFE115:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 157


 5678              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5679              		.align	1
 5680              		.syntax unified
 5681              		.thumb
 5682              		.thumb_func
 5684              	UART_EndRxTransfer:
 5685              	.LFB116:
3298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
3302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5686              		.loc 1 3305 1
 5687              		.cfi_startproc
 5688              		@ args = 0, pretend = 0, frame = 8
 5689              		@ frame_needed = 1, uses_anonymous_args = 0
 5690              		@ link register save eliminated.
 5691 0000 80B4     		push	{r7}
 5692              		.cfi_def_cfa_offset 4
 5693              		.cfi_offset 7, -4
 5694 0002 83B0     		sub	sp, sp, #12
 5695              		.cfi_def_cfa_offset 16
 5696 0004 00AF     		add	r7, sp, #0
 5697              		.cfi_def_cfa_register 7
 5698 0006 7860     		str	r0, [r7, #4]
3306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5699              		.loc 1 3307 3
 5700 0008 7B68     		ldr	r3, [r7, #4]
 5701 000a 1B68     		ldr	r3, [r3]
 5702 000c DA68     		ldr	r2, [r3, #12]
 5703 000e 7B68     		ldr	r3, [r7, #4]
 5704 0010 1B68     		ldr	r3, [r3]
 5705 0012 22F49072 		bic	r2, r2, #288
 5706 0016 DA60     		str	r2, [r3, #12]
3308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5707              		.loc 1 3308 3
 5708 0018 7B68     		ldr	r3, [r7, #4]
 5709 001a 1B68     		ldr	r3, [r3]
 5710 001c 5A69     		ldr	r2, [r3, #20]
 5711 001e 7B68     		ldr	r3, [r7, #4]
 5712 0020 1B68     		ldr	r3, [r3]
 5713 0022 22F00102 		bic	r2, r2, #1
 5714 0026 5A61     		str	r2, [r3, #20]
3309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5715              		.loc 1 3311 12
 5716 0028 7B68     		ldr	r3, [r7, #4]
 5717 002a 1B6B     		ldr	r3, [r3, #48]
 5718              		.loc 1 3311 6
 5719 002c 012B     		cmp	r3, #1
 5720 002e 07D1     		bne	.L256
3312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 158


3313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5721              		.loc 1 3313 5
 5722 0030 7B68     		ldr	r3, [r7, #4]
 5723 0032 1B68     		ldr	r3, [r3]
 5724 0034 DA68     		ldr	r2, [r3, #12]
 5725 0036 7B68     		ldr	r3, [r7, #4]
 5726 0038 1B68     		ldr	r3, [r3]
 5727 003a 22F01002 		bic	r2, r2, #16
 5728 003e DA60     		str	r2, [r3, #12]
 5729              	.L256:
3314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5730              		.loc 1 3317 18
 5731 0040 7B68     		ldr	r3, [r7, #4]
 5732 0042 2022     		movs	r2, #32
 5733 0044 83F83E20 		strb	r2, [r3, #62]
3318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5734              		.loc 1 3318 24
 5735 0048 7B68     		ldr	r3, [r7, #4]
 5736 004a 0022     		movs	r2, #0
 5737 004c 1A63     		str	r2, [r3, #48]
3319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5738              		.loc 1 3319 1
 5739 004e 00BF     		nop
 5740 0050 0C37     		adds	r7, r7, #12
 5741              		.cfi_def_cfa_offset 4
 5742 0052 BD46     		mov	sp, r7
 5743              		.cfi_def_cfa_register 13
 5744              		@ sp needed
 5745 0054 80BC     		pop	{r7}
 5746              		.cfi_restore 7
 5747              		.cfi_def_cfa_offset 0
 5748 0056 7047     		bx	lr
 5749              		.cfi_endproc
 5750              	.LFE116:
 5752              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 5753              		.align	1
 5754              		.syntax unified
 5755              		.thumb
 5756              		.thumb_func
 5758              	UART_DMAAbortOnError:
 5759              	.LFB117:
3320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5760              		.loc 1 3329 1
 5761              		.cfi_startproc
 5762              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 159


 5763              		@ frame_needed = 1, uses_anonymous_args = 0
 5764 0000 80B5     		push	{r7, lr}
 5765              		.cfi_def_cfa_offset 8
 5766              		.cfi_offset 7, -8
 5767              		.cfi_offset 14, -4
 5768 0002 84B0     		sub	sp, sp, #16
 5769              		.cfi_def_cfa_offset 24
 5770 0004 00AF     		add	r7, sp, #0
 5771              		.cfi_def_cfa_register 7
 5772 0006 7860     		str	r0, [r7, #4]
3330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5773              		.loc 1 3330 23
 5774 0008 7B68     		ldr	r3, [r7, #4]
 5775 000a 5B6A     		ldr	r3, [r3, #36]
 5776 000c FB60     		str	r3, [r7, #12]
3331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5777              		.loc 1 3331 22
 5778 000e FB68     		ldr	r3, [r7, #12]
 5779 0010 0022     		movs	r2, #0
 5780 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5781              		.loc 1 3332 22
 5782 0014 FB68     		ldr	r3, [r7, #12]
 5783 0016 0022     		movs	r2, #0
 5784 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered error callback*/
3336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCallback(huart);
3337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak error callback*/
3339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 5785              		.loc 1 3339 3
 5786 001a F868     		ldr	r0, [r7, #12]
 5787 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5788              		.loc 1 3341 1
 5789 0020 00BF     		nop
 5790 0022 1037     		adds	r7, r7, #16
 5791              		.cfi_def_cfa_offset 8
 5792 0024 BD46     		mov	sp, r7
 5793              		.cfi_def_cfa_register 13
 5794              		@ sp needed
 5795 0026 80BD     		pop	{r7, pc}
 5796              		.cfi_endproc
 5797              	.LFE117:
 5799              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 5800              		.align	1
 5801              		.syntax unified
 5802              		.thumb
 5803              		.thumb_func
 5805              	UART_DMATxAbortCallback:
 5806              	.LFB118:
3342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 160


3345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5807              		.loc 1 3353 1
 5808              		.cfi_startproc
 5809              		@ args = 0, pretend = 0, frame = 16
 5810              		@ frame_needed = 1, uses_anonymous_args = 0
 5811 0000 80B5     		push	{r7, lr}
 5812              		.cfi_def_cfa_offset 8
 5813              		.cfi_offset 7, -8
 5814              		.cfi_offset 14, -4
 5815 0002 84B0     		sub	sp, sp, #16
 5816              		.cfi_def_cfa_offset 24
 5817 0004 00AF     		add	r7, sp, #0
 5818              		.cfi_def_cfa_register 7
 5819 0006 7860     		str	r0, [r7, #4]
3354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5820              		.loc 1 3354 23
 5821 0008 7B68     		ldr	r3, [r7, #4]
 5822 000a 5B6A     		ldr	r3, [r3, #36]
 5823 000c FB60     		str	r3, [r7, #12]
3355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 5824              		.loc 1 3356 8
 5825 000e FB68     		ldr	r3, [r7, #12]
 5826 0010 5B6B     		ldr	r3, [r3, #52]
 5827              		.loc 1 3356 36
 5828 0012 0022     		movs	r2, #0
 5829 0014 5A63     		str	r2, [r3, #52]
3357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 5830              		.loc 1 3359 12
 5831 0016 FB68     		ldr	r3, [r7, #12]
 5832 0018 9B6B     		ldr	r3, [r3, #56]
 5833              		.loc 1 3359 6
 5834 001a 002B     		cmp	r3, #0
 5835 001c 04D0     		beq	.L259
3360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 5836              		.loc 1 3361 14
 5837 001e FB68     		ldr	r3, [r7, #12]
 5838 0020 9B6B     		ldr	r3, [r3, #56]
 5839              		.loc 1 3361 22
 5840 0022 5B6B     		ldr	r3, [r3, #52]
 5841              		.loc 1 3361 8
 5842 0024 002B     		cmp	r3, #0
 5843 0026 17D1     		bne	.L261
 5844              	.L259:
3362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 161


3364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5845              		.loc 1 3368 22
 5846 0028 FB68     		ldr	r3, [r7, #12]
 5847 002a 0022     		movs	r2, #0
 5848 002c DA84     		strh	r2, [r3, #38]	@ movhi
3369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5849              		.loc 1 3369 22
 5850 002e FB68     		ldr	r3, [r7, #12]
 5851 0030 0022     		movs	r2, #0
 5852 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5853              		.loc 1 3372 20
 5854 0034 FB68     		ldr	r3, [r7, #12]
 5855 0036 0022     		movs	r2, #0
 5856 0038 1A64     		str	r2, [r3, #64]
3373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5857              		.loc 1 3375 18
 5858 003a FB68     		ldr	r3, [r7, #12]
 5859 003c 2022     		movs	r2, #32
 5860 003e 83F83D20 		strb	r2, [r3, #61]
3376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5861              		.loc 1 3376 18
 5862 0042 FB68     		ldr	r3, [r7, #12]
 5863 0044 2022     		movs	r2, #32
 5864 0046 83F83E20 		strb	r2, [r3, #62]
3377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5865              		.loc 1 3377 24
 5866 004a FB68     		ldr	r3, [r7, #12]
 5867 004c 0022     		movs	r2, #0
 5868 004e 1A63     		str	r2, [r3, #48]
3378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5869              		.loc 1 3385 3
 5870 0050 F868     		ldr	r0, [r7, #12]
 5871 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5872 0056 00E0     		b	.L258
 5873              	.L261:
3363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5874              		.loc 1 3363 7
 5875 0058 00BF     		nop
 5876              	.L258:
3386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 162


 5877              		.loc 1 3387 1
 5878 005a 1037     		adds	r7, r7, #16
 5879              		.cfi_def_cfa_offset 8
 5880 005c BD46     		mov	sp, r7
 5881              		.cfi_def_cfa_register 13
 5882              		@ sp needed
 5883 005e 80BD     		pop	{r7, pc}
 5884              		.cfi_endproc
 5885              	.LFE118:
 5887              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 5888              		.align	1
 5889              		.syntax unified
 5890              		.thumb
 5891              		.thumb_func
 5893              	UART_DMARxAbortCallback:
 5894              	.LFB119:
3388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5895              		.loc 1 3399 1
 5896              		.cfi_startproc
 5897              		@ args = 0, pretend = 0, frame = 16
 5898              		@ frame_needed = 1, uses_anonymous_args = 0
 5899 0000 80B5     		push	{r7, lr}
 5900              		.cfi_def_cfa_offset 8
 5901              		.cfi_offset 7, -8
 5902              		.cfi_offset 14, -4
 5903 0002 84B0     		sub	sp, sp, #16
 5904              		.cfi_def_cfa_offset 24
 5905 0004 00AF     		add	r7, sp, #0
 5906              		.cfi_def_cfa_register 7
 5907 0006 7860     		str	r0, [r7, #4]
3400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5908              		.loc 1 3400 23
 5909 0008 7B68     		ldr	r3, [r7, #4]
 5910 000a 5B6A     		ldr	r3, [r3, #36]
 5911 000c FB60     		str	r3, [r7, #12]
3401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 5912              		.loc 1 3402 8
 5913 000e FB68     		ldr	r3, [r7, #12]
 5914 0010 9B6B     		ldr	r3, [r3, #56]
 5915              		.loc 1 3402 36
 5916 0012 0022     		movs	r2, #0
 5917 0014 5A63     		str	r2, [r3, #52]
3403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->hdmatx != NULL)
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 163


 5918              		.loc 1 3405 12
 5919 0016 FB68     		ldr	r3, [r7, #12]
 5920 0018 5B6B     		ldr	r3, [r3, #52]
 5921              		.loc 1 3405 6
 5922 001a 002B     		cmp	r3, #0
 5923 001c 04D0     		beq	.L263
3406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 5924              		.loc 1 3407 14
 5925 001e FB68     		ldr	r3, [r7, #12]
 5926 0020 5B6B     		ldr	r3, [r3, #52]
 5927              		.loc 1 3407 22
 5928 0022 5B6B     		ldr	r3, [r3, #52]
 5929              		.loc 1 3407 8
 5930 0024 002B     		cmp	r3, #0
 5931 0026 17D1     		bne	.L265
 5932              	.L263:
3408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
3410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 5933              		.loc 1 3414 22
 5934 0028 FB68     		ldr	r3, [r7, #12]
 5935 002a 0022     		movs	r2, #0
 5936 002c DA84     		strh	r2, [r3, #38]	@ movhi
3415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 5937              		.loc 1 3415 22
 5938 002e FB68     		ldr	r3, [r7, #12]
 5939 0030 0022     		movs	r2, #0
 5940 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
3418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5941              		.loc 1 3418 20
 5942 0034 FB68     		ldr	r3, [r7, #12]
 5943 0036 0022     		movs	r2, #0
 5944 0038 1A64     		str	r2, [r3, #64]
3419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5945              		.loc 1 3421 18
 5946 003a FB68     		ldr	r3, [r7, #12]
 5947 003c 2022     		movs	r2, #32
 5948 003e 83F83D20 		strb	r2, [r3, #61]
3422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5949              		.loc 1 3422 18
 5950 0042 FB68     		ldr	r3, [r7, #12]
 5951 0044 2022     		movs	r2, #32
 5952 0046 83F83E20 		strb	r2, [r3, #62]
3423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5953              		.loc 1 3423 24
 5954 004a FB68     		ldr	r3, [r7, #12]
 5955 004c 0022     		movs	r2, #0
 5956 004e 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 164


3424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort complete callback */
3428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 5957              		.loc 1 3431 3
 5958 0050 F868     		ldr	r0, [r7, #12]
 5959 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 5960 0056 00E0     		b	.L262
 5961              	.L265:
3409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 5962              		.loc 1 3409 7
 5963 0058 00BF     		nop
 5964              	.L262:
3432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5965              		.loc 1 3433 1
 5966 005a 1037     		adds	r7, r7, #16
 5967              		.cfi_def_cfa_offset 8
 5968 005c BD46     		mov	sp, r7
 5969              		.cfi_def_cfa_register 13
 5970              		@ sp needed
 5971 005e 80BD     		pop	{r7, pc}
 5972              		.cfi_endproc
 5973              	.LFE119:
 5975              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 5976              		.align	1
 5977              		.syntax unified
 5978              		.thumb
 5979              		.thumb_func
 5981              	UART_DMATxOnlyAbortCallback:
 5982              	.LFB120:
3434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5983              		.loc 1 3445 1
 5984              		.cfi_startproc
 5985              		@ args = 0, pretend = 0, frame = 16
 5986              		@ frame_needed = 1, uses_anonymous_args = 0
 5987 0000 80B5     		push	{r7, lr}
 5988              		.cfi_def_cfa_offset 8
 5989              		.cfi_offset 7, -8
 5990              		.cfi_offset 14, -4
 5991 0002 84B0     		sub	sp, sp, #16
 5992              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 165


 5993 0004 00AF     		add	r7, sp, #0
 5994              		.cfi_def_cfa_register 7
 5995 0006 7860     		str	r0, [r7, #4]
3446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5996              		.loc 1 3446 23
 5997 0008 7B68     		ldr	r3, [r7, #4]
 5998 000a 5B6A     		ldr	r3, [r3, #36]
 5999 000c FB60     		str	r3, [r7, #12]
3447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 6000              		.loc 1 3448 22
 6001 000e FB68     		ldr	r3, [r7, #12]
 6002 0010 0022     		movs	r2, #0
 6003 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6004              		.loc 1 3451 17
 6005 0014 FB68     		ldr	r3, [r7, #12]
 6006 0016 2022     		movs	r2, #32
 6007 0018 83F83D20 		strb	r2, [r3, #61]
3452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 6008              		.loc 1 3459 3
 6009 001c F868     		ldr	r0, [r7, #12]
 6010 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6011              		.loc 1 3461 1
 6012 0022 00BF     		nop
 6013 0024 1037     		adds	r7, r7, #16
 6014              		.cfi_def_cfa_offset 8
 6015 0026 BD46     		mov	sp, r7
 6016              		.cfi_def_cfa_register 13
 6017              		@ sp needed
 6018 0028 80BD     		pop	{r7, pc}
 6019              		.cfi_endproc
 6020              	.LFE120:
 6022              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 6023              		.align	1
 6024              		.syntax unified
 6025              		.thumb
 6026              		.thumb_func
 6028              	UART_DMARxOnlyAbortCallback:
 6029              	.LFB121:
3462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 166


3468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6030              		.loc 1 3473 1
 6031              		.cfi_startproc
 6032              		@ args = 0, pretend = 0, frame = 16
 6033              		@ frame_needed = 1, uses_anonymous_args = 0
 6034 0000 80B5     		push	{r7, lr}
 6035              		.cfi_def_cfa_offset 8
 6036              		.cfi_offset 7, -8
 6037              		.cfi_offset 14, -4
 6038 0002 84B0     		sub	sp, sp, #16
 6039              		.cfi_def_cfa_offset 24
 6040 0004 00AF     		add	r7, sp, #0
 6041              		.cfi_def_cfa_register 7
 6042 0006 7860     		str	r0, [r7, #4]
3474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6043              		.loc 1 3474 23
 6044 0008 7B68     		ldr	r3, [r7, #4]
 6045 000a 5B6A     		ldr	r3, [r3, #36]
 6046 000c FB60     		str	r3, [r7, #12]
3475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 6047              		.loc 1 3476 22
 6048 000e FB68     		ldr	r3, [r7, #12]
 6049 0010 0022     		movs	r2, #0
 6050 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6051              		.loc 1 3479 18
 6052 0014 FB68     		ldr	r3, [r7, #12]
 6053 0016 2022     		movs	r2, #32
 6054 0018 83F83E20 		strb	r2, [r3, #62]
3480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6055              		.loc 1 3480 24
 6056 001c FB68     		ldr	r3, [r7, #12]
 6057 001e 0022     		movs	r2, #0
 6058 0020 1A63     		str	r2, [r3, #48]
3481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
3483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 6059              		.loc 1 3488 3
 6060 0022 F868     		ldr	r0, [r7, #12]
 6061 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6062              		.loc 1 3490 1
 6063 0028 00BF     		nop
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 167


 6064 002a 1037     		adds	r7, r7, #16
 6065              		.cfi_def_cfa_offset 8
 6066 002c BD46     		mov	sp, r7
 6067              		.cfi_def_cfa_register 13
 6068              		@ sp needed
 6069 002e 80BD     		pop	{r7, pc}
 6070              		.cfi_endproc
 6071              	.LFE121:
 6073              		.section	.text.UART_Transmit_IT,"ax",%progbits
 6074              		.align	1
 6075              		.syntax unified
 6076              		.thumb
 6077              		.thumb_func
 6079              	UART_Transmit_IT:
 6080              	.LFB122:
3491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6081              		.loc 1 3499 1
 6082              		.cfi_startproc
 6083              		@ args = 0, pretend = 0, frame = 16
 6084              		@ frame_needed = 1, uses_anonymous_args = 0
 6085              		@ link register save eliminated.
 6086 0000 80B4     		push	{r7}
 6087              		.cfi_def_cfa_offset 4
 6088              		.cfi_offset 7, -4
 6089 0002 85B0     		sub	sp, sp, #20
 6090              		.cfi_def_cfa_offset 24
 6091 0004 00AF     		add	r7, sp, #0
 6092              		.cfi_def_cfa_register 7
 6093 0006 7860     		str	r0, [r7, #4]
3500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *tmp;
3501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 6094              		.loc 1 3503 12
 6095 0008 7B68     		ldr	r3, [r7, #4]
 6096 000a 93F83D30 		ldrb	r3, [r3, #61]
 6097 000e DBB2     		uxtb	r3, r3
 6098              		.loc 1 3503 6
 6099 0010 212B     		cmp	r3, #33
 6100 0012 3ED1     		bne	.L269
3504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 6101              		.loc 1 3505 21
 6102 0014 7B68     		ldr	r3, [r7, #4]
 6103 0016 9B68     		ldr	r3, [r3, #8]
 6104              		.loc 1 3505 8
 6105 0018 B3F5805F 		cmp	r3, #4096
 6106 001c 14D1     		bne	.L270
 6107              		.loc 1 3505 71 discriminator 1
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 168


 6108 001e 7B68     		ldr	r3, [r7, #4]
 6109 0020 1B69     		ldr	r3, [r3, #16]
 6110              		.loc 1 3505 56 discriminator 1
 6111 0022 002B     		cmp	r3, #0
 6112 0024 10D1     		bne	.L270
3506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 6113              		.loc 1 3507 11
 6114 0026 7B68     		ldr	r3, [r7, #4]
 6115 0028 1B6A     		ldr	r3, [r3, #32]
 6116 002a FB60     		str	r3, [r7, #12]
3508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 6117              		.loc 1 3508 40
 6118 002c FB68     		ldr	r3, [r7, #12]
 6119 002e 1B88     		ldrh	r3, [r3]
 6120              		.loc 1 3508 29
 6121 0030 1A46     		mov	r2, r3
 6122              		.loc 1 3508 12
 6123 0032 7B68     		ldr	r3, [r7, #4]
 6124 0034 1B68     		ldr	r3, [r3]
 6125              		.loc 1 3508 29
 6126 0036 C2F30802 		ubfx	r2, r2, #0, #9
 6127              		.loc 1 3508 27
 6128 003a 5A60     		str	r2, [r3, #4]
3509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 6129              		.loc 1 3509 25
 6130 003c 7B68     		ldr	r3, [r7, #4]
 6131 003e 1B6A     		ldr	r3, [r3, #32]
 6132 0040 9A1C     		adds	r2, r3, #2
 6133 0042 7B68     		ldr	r3, [r7, #4]
 6134 0044 1A62     		str	r2, [r3, #32]
 6135 0046 08E0     		b	.L271
 6136              	.L270:
3510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 6137              		.loc 1 3513 45
 6138 0048 7B68     		ldr	r3, [r7, #4]
 6139 004a 1B6A     		ldr	r3, [r3, #32]
 6140              		.loc 1 3513 57
 6141 004c 591C     		adds	r1, r3, #1
 6142 004e 7A68     		ldr	r2, [r7, #4]
 6143 0050 1162     		str	r1, [r2, #32]
 6144              		.loc 1 3513 39
 6145 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6146              		.loc 1 3513 12
 6147 0054 7B68     		ldr	r3, [r7, #4]
 6148 0056 1B68     		ldr	r3, [r3]
 6149              		.loc 1 3513 27
 6150 0058 5A60     		str	r2, [r3, #4]
 6151              	.L271:
3514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 6152              		.loc 1 3516 16
 6153 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 169


 6154 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 6155 005e 9BB2     		uxth	r3, r3
 6156              		.loc 1 3516 9
 6157 0060 013B     		subs	r3, r3, #1
 6158 0062 9BB2     		uxth	r3, r3
 6159              		.loc 1 3516 8
 6160 0064 7A68     		ldr	r2, [r7, #4]
 6161 0066 1946     		mov	r1, r3	@ movhi
 6162 0068 D184     		strh	r1, [r2, #38]	@ movhi
 6163 006a 002B     		cmp	r3, #0
 6164 006c 0FD1     		bne	.L272
3517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
3519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 6165              		.loc 1 3519 7
 6166 006e 7B68     		ldr	r3, [r7, #4]
 6167 0070 1B68     		ldr	r3, [r3]
 6168 0072 DA68     		ldr	r2, [r3, #12]
 6169 0074 7B68     		ldr	r3, [r7, #4]
 6170 0076 1B68     		ldr	r3, [r3]
 6171 0078 22F08002 		bic	r2, r2, #128
 6172 007c DA60     		str	r2, [r3, #12]
3520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 6173              		.loc 1 3522 7
 6174 007e 7B68     		ldr	r3, [r7, #4]
 6175 0080 1B68     		ldr	r3, [r3]
 6176 0082 DA68     		ldr	r2, [r3, #12]
 6177 0084 7B68     		ldr	r3, [r7, #4]
 6178 0086 1B68     		ldr	r3, [r3]
 6179 0088 42F04002 		orr	r2, r2, #64
 6180 008c DA60     		str	r2, [r3, #12]
 6181              	.L272:
3523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 6182              		.loc 1 3524 12
 6183 008e 0023     		movs	r3, #0
 6184 0090 00E0     		b	.L273
 6185              	.L269:
3525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 6186              		.loc 1 3528 12
 6187 0092 0223     		movs	r3, #2
 6188              	.L273:
3529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6189              		.loc 1 3530 1
 6190 0094 1846     		mov	r0, r3
 6191 0096 1437     		adds	r7, r7, #20
 6192              		.cfi_def_cfa_offset 4
 6193 0098 BD46     		mov	sp, r7
 6194              		.cfi_def_cfa_register 13
 6195              		@ sp needed
 6196 009a 80BC     		pop	{r7}
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 170


 6197              		.cfi_restore 7
 6198              		.cfi_def_cfa_offset 0
 6199 009c 7047     		bx	lr
 6200              		.cfi_endproc
 6201              	.LFE122:
 6203              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6204              		.align	1
 6205              		.syntax unified
 6206              		.thumb
 6207              		.thumb_func
 6209              	UART_EndTransmit_IT:
 6210              	.LFB123:
3531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6211              		.loc 1 3539 1
 6212              		.cfi_startproc
 6213              		@ args = 0, pretend = 0, frame = 8
 6214              		@ frame_needed = 1, uses_anonymous_args = 0
 6215 0000 80B5     		push	{r7, lr}
 6216              		.cfi_def_cfa_offset 8
 6217              		.cfi_offset 7, -8
 6218              		.cfi_offset 14, -4
 6219 0002 82B0     		sub	sp, sp, #8
 6220              		.cfi_def_cfa_offset 16
 6221 0004 00AF     		add	r7, sp, #0
 6222              		.cfi_def_cfa_register 7
 6223 0006 7860     		str	r0, [r7, #4]
3540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 6224              		.loc 1 3541 3
 6225 0008 7B68     		ldr	r3, [r7, #4]
 6226 000a 1B68     		ldr	r3, [r3]
 6227 000c DA68     		ldr	r2, [r3, #12]
 6228 000e 7B68     		ldr	r3, [r7, #4]
 6229 0010 1B68     		ldr	r3, [r3]
 6230 0012 22F04002 		bic	r2, r2, #64
 6231 0016 DA60     		str	r2, [r3, #12]
3542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6232              		.loc 1 3544 17
 6233 0018 7B68     		ldr	r3, [r7, #4]
 6234 001a 2022     		movs	r2, #32
 6235 001c 83F83D20 		strb	r2, [r3, #61]
3545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 171


3551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 6236              		.loc 1 3551 3
 6237 0020 7868     		ldr	r0, [r7, #4]
 6238 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 6239              		.loc 1 3554 10
 6240 0026 0023     		movs	r3, #0
3555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6241              		.loc 1 3555 1
 6242 0028 1846     		mov	r0, r3
 6243 002a 0837     		adds	r7, r7, #8
 6244              		.cfi_def_cfa_offset 8
 6245 002c BD46     		mov	sp, r7
 6246              		.cfi_def_cfa_register 13
 6247              		@ sp needed
 6248 002e 80BD     		pop	{r7, pc}
 6249              		.cfi_endproc
 6250              	.LFE123:
 6252              		.section	.text.UART_Receive_IT,"ax",%progbits
 6253              		.align	1
 6254              		.syntax unified
 6255              		.thumb
 6256              		.thumb_func
 6258              	UART_Receive_IT:
 6259              	.LFB124:
3556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
3562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6260              		.loc 1 3564 1
 6261              		.cfi_startproc
 6262              		@ args = 0, pretend = 0, frame = 24
 6263              		@ frame_needed = 1, uses_anonymous_args = 0
 6264 0000 80B5     		push	{r7, lr}
 6265              		.cfi_def_cfa_offset 8
 6266              		.cfi_offset 7, -8
 6267              		.cfi_offset 14, -4
 6268 0002 86B0     		sub	sp, sp, #24
 6269              		.cfi_def_cfa_offset 32
 6270 0004 00AF     		add	r7, sp, #0
 6271              		.cfi_def_cfa_register 7
 6272 0006 7860     		str	r0, [r7, #4]
3565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint8_t  *pdata8bits;
3566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t *pdata16bits;
3567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6273              		.loc 1 3569 12
 6274 0008 7B68     		ldr	r3, [r7, #4]
 6275 000a 93F83E30 		ldrb	r3, [r3, #62]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 172


 6276 000e DBB2     		uxtb	r3, r3
 6277              		.loc 1 3569 6
 6278 0010 222B     		cmp	r3, #34
 6279 0012 40F09980 		bne	.L277
3570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 6280              		.loc 1 3571 21
 6281 0016 7B68     		ldr	r3, [r7, #4]
 6282 0018 9B68     		ldr	r3, [r3, #8]
 6283              		.loc 1 3571 8
 6284 001a B3F5805F 		cmp	r3, #4096
 6285 001e 17D1     		bne	.L278
 6286              		.loc 1 3571 71 discriminator 1
 6287 0020 7B68     		ldr	r3, [r7, #4]
 6288 0022 1B69     		ldr	r3, [r3, #16]
 6289              		.loc 1 3571 56 discriminator 1
 6290 0024 002B     		cmp	r3, #0
 6291 0026 13D1     		bne	.L278
3572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits  = NULL;
 6292              		.loc 1 3573 19
 6293 0028 0023     		movs	r3, #0
 6294 002a 7B61     		str	r3, [r7, #20]
3574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 6295              		.loc 1 3574 19
 6296 002c 7B68     		ldr	r3, [r7, #4]
 6297 002e 9B6A     		ldr	r3, [r3, #40]
 6298 0030 3B61     		str	r3, [r7, #16]
3575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 6299              		.loc 1 3575 38
 6300 0032 7B68     		ldr	r3, [r7, #4]
 6301 0034 1B68     		ldr	r3, [r3]
 6302              		.loc 1 3575 48
 6303 0036 5B68     		ldr	r3, [r3, #4]
 6304              		.loc 1 3575 22
 6305 0038 9BB2     		uxth	r3, r3
 6306 003a C3F30803 		ubfx	r3, r3, #0, #9
 6307 003e 9AB2     		uxth	r2, r3
 6308              		.loc 1 3575 20
 6309 0040 3B69     		ldr	r3, [r7, #16]
 6310 0042 1A80     		strh	r2, [r3]	@ movhi
3576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 6311              		.loc 1 3576 25
 6312 0044 7B68     		ldr	r3, [r7, #4]
 6313 0046 9B6A     		ldr	r3, [r3, #40]
 6314 0048 9A1C     		adds	r2, r3, #2
 6315 004a 7B68     		ldr	r3, [r7, #4]
 6316 004c 9A62     		str	r2, [r3, #40]
 6317 004e 26E0     		b	.L279
 6318              	.L278:
3577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
3579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 6319              		.loc 1 3580 18
 6320 0050 7B68     		ldr	r3, [r7, #4]
 6321 0052 9B6A     		ldr	r3, [r3, #40]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 173


 6322 0054 7B61     		str	r3, [r7, #20]
3581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       pdata16bits  = NULL;
 6323              		.loc 1 3581 20
 6324 0056 0023     		movs	r3, #0
 6325 0058 3B61     		str	r3, [r7, #16]
3582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 6326              		.loc 1 3583 23
 6327 005a 7B68     		ldr	r3, [r7, #4]
 6328 005c 9B68     		ldr	r3, [r3, #8]
 6329              		.loc 1 3583 10
 6330 005e B3F5805F 		cmp	r3, #4096
 6331 0062 07D0     		beq	.L280
 6332              		.loc 1 3583 74 discriminator 1
 6333 0064 7B68     		ldr	r3, [r7, #4]
 6334 0066 9B68     		ldr	r3, [r3, #8]
 6335              		.loc 1 3583 58 discriminator 1
 6336 0068 002B     		cmp	r3, #0
 6337 006a 0AD1     		bne	.L281
 6338              		.loc 1 3583 124 discriminator 2
 6339 006c 7B68     		ldr	r3, [r7, #4]
 6340 006e 1B69     		ldr	r3, [r3, #16]
 6341              		.loc 1 3583 109 discriminator 2
 6342 0070 002B     		cmp	r3, #0
 6343 0072 06D1     		bne	.L281
 6344              	.L280:
3584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 6345              		.loc 1 3585 38
 6346 0074 7B68     		ldr	r3, [r7, #4]
 6347 0076 1B68     		ldr	r3, [r3]
 6348              		.loc 1 3585 48
 6349 0078 5B68     		ldr	r3, [r3, #4]
 6350              		.loc 1 3585 23
 6351 007a DAB2     		uxtb	r2, r3
 6352              		.loc 1 3585 21
 6353 007c 7B69     		ldr	r3, [r7, #20]
 6354 007e 1A70     		strb	r2, [r3]
 6355 0080 08E0     		b	.L282
 6356              	.L281:
3586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 6357              		.loc 1 3589 38
 6358 0082 7B68     		ldr	r3, [r7, #4]
 6359 0084 1B68     		ldr	r3, [r3]
 6360              		.loc 1 3589 48
 6361 0086 5B68     		ldr	r3, [r3, #4]
 6362              		.loc 1 3589 23
 6363 0088 DBB2     		uxtb	r3, r3
 6364 008a 03F07F03 		and	r3, r3, #127
 6365 008e DAB2     		uxtb	r2, r3
 6366              		.loc 1 3589 21
 6367 0090 7B69     		ldr	r3, [r7, #20]
 6368 0092 1A70     		strb	r2, [r3]
 6369              	.L282:
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 174


3590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 6370              		.loc 1 3591 25
 6371 0094 7B68     		ldr	r3, [r7, #4]
 6372 0096 9B6A     		ldr	r3, [r3, #40]
 6373 0098 5A1C     		adds	r2, r3, #1
 6374 009a 7B68     		ldr	r3, [r7, #4]
 6375 009c 9A62     		str	r2, [r3, #40]
 6376              	.L279:
3592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 6377              		.loc 1 3594 16
 6378 009e 7B68     		ldr	r3, [r7, #4]
 6379 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 6380 00a2 9BB2     		uxth	r3, r3
 6381              		.loc 1 3594 9
 6382 00a4 013B     		subs	r3, r3, #1
 6383 00a6 9BB2     		uxth	r3, r3
 6384              		.loc 1 3594 8
 6385 00a8 7A68     		ldr	r2, [r7, #4]
 6386 00aa 1946     		mov	r1, r3	@ movhi
 6387 00ac D185     		strh	r1, [r2, #46]	@ movhi
 6388 00ae 002B     		cmp	r3, #0
 6389 00b0 48D1     		bne	.L283
3595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
3596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 6390              		.loc 1 3597 7
 6391 00b2 7B68     		ldr	r3, [r7, #4]
 6392 00b4 1B68     		ldr	r3, [r3]
 6393 00b6 DA68     		ldr	r2, [r3, #12]
 6394 00b8 7B68     		ldr	r3, [r7, #4]
 6395 00ba 1B68     		ldr	r3, [r3]
 6396 00bc 22F02002 		bic	r2, r2, #32
 6397 00c0 DA60     		str	r2, [r3, #12]
3598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 6398              		.loc 1 3600 7
 6399 00c2 7B68     		ldr	r3, [r7, #4]
 6400 00c4 1B68     		ldr	r3, [r3]
 6401 00c6 DA68     		ldr	r2, [r3, #12]
 6402 00c8 7B68     		ldr	r3, [r7, #4]
 6403 00ca 1B68     		ldr	r3, [r3]
 6404 00cc 22F48072 		bic	r2, r2, #256
 6405 00d0 DA60     		str	r2, [r3, #12]
3601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 6406              		.loc 1 3603 7
 6407 00d2 7B68     		ldr	r3, [r7, #4]
 6408 00d4 1B68     		ldr	r3, [r3]
 6409 00d6 5A69     		ldr	r2, [r3, #20]
 6410 00d8 7B68     		ldr	r3, [r7, #4]
 6411 00da 1B68     		ldr	r3, [r3]
 6412 00dc 22F00102 		bic	r2, r2, #1
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 175


 6413 00e0 5A61     		str	r2, [r3, #20]
3604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6414              		.loc 1 3606 22
 6415 00e2 7B68     		ldr	r3, [r7, #4]
 6416 00e4 2022     		movs	r2, #32
 6417 00e6 83F83E20 		strb	r2, [r3, #62]
3607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Check current reception Mode :
3609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 6418              		.loc 1 3610 16
 6419 00ea 7B68     		ldr	r3, [r7, #4]
 6420 00ec 1B6B     		ldr	r3, [r3, #48]
 6421              		.loc 1 3610 10
 6422 00ee 012B     		cmp	r3, #1
 6423 00f0 23D1     		bne	.L284
3611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Set reception type to Standard */
3613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 6424              		.loc 1 3613 30
 6425 00f2 7B68     		ldr	r3, [r7, #4]
 6426 00f4 0022     		movs	r2, #0
 6427 00f6 1A63     		str	r2, [r3, #48]
3614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable IDLE interrupt */
3616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6428              		.loc 1 3616 9
 6429 00f8 7B68     		ldr	r3, [r7, #4]
 6430 00fa 1B68     		ldr	r3, [r3]
 6431 00fc DA68     		ldr	r2, [r3, #12]
 6432 00fe 7B68     		ldr	r3, [r7, #4]
 6433 0100 1B68     		ldr	r3, [r3]
 6434 0102 22F01002 		bic	r2, r2, #16
 6435 0106 DA60     		str	r2, [r3, #12]
3617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Check if IDLE flag is set */
3619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 6436              		.loc 1 3619 13
 6437 0108 7B68     		ldr	r3, [r7, #4]
 6438 010a 1B68     		ldr	r3, [r3]
 6439 010c 1B68     		ldr	r3, [r3]
 6440 010e 03F01003 		and	r3, r3, #16
 6441              		.loc 1 3619 12
 6442 0112 102B     		cmp	r3, #16
 6443 0114 0AD1     		bne	.L285
 6444              	.LBB12:
3620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
3621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 6445              		.loc 1 3622 11
 6446 0116 0023     		movs	r3, #0
 6447 0118 FB60     		str	r3, [r7, #12]
 6448 011a 7B68     		ldr	r3, [r7, #4]
 6449 011c 1B68     		ldr	r3, [r3]
 6450 011e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 176


 6451 0120 FB60     		str	r3, [r7, #12]
 6452 0122 7B68     		ldr	r3, [r7, #4]
 6453 0124 1B68     		ldr	r3, [r3]
 6454 0126 5B68     		ldr	r3, [r3, #4]
 6455 0128 FB60     		str	r3, [r7, #12]
 6456 012a FB68     		ldr	r3, [r7, #12]
 6457              	.L285:
 6458              	.LBE12:
3623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
3624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 6459              		.loc 1 3630 9
 6460 012c 7B68     		ldr	r3, [r7, #4]
 6461 012e 9B8D     		ldrh	r3, [r3, #44]
 6462 0130 1946     		mov	r1, r3
 6463 0132 7868     		ldr	r0, [r7, #4]
 6464 0134 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 6465 0138 02E0     		b	.L286
 6466              	.L284:
3631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif
3632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
3634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
3635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /* Standard reception API called */
3636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)		  
3637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /*Call registered Rx complete callback*/
3638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        huart->RxCpltCallback(huart);
3639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        /*Call legacy weak Rx complete callback*/
3641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        HAL_UART_RxCpltCallback(huart);
 6467              		.loc 1 3641 8
 6468 013a 7868     		ldr	r0, [r7, #4]
 6469 013c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 6470              	.L286:
3642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
3644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
 6471              		.loc 1 3645 14
 6472 0140 0023     		movs	r3, #0
 6473 0142 02E0     		b	.L287
 6474              	.L283:
3646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
3647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 6475              		.loc 1 3647 12
 6476 0144 0023     		movs	r3, #0
 6477 0146 00E0     		b	.L287
 6478              	.L277:
3648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 177


 6479              		.loc 1 3651 12
 6480 0148 0223     		movs	r3, #2
 6481              	.L287:
3652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6482              		.loc 1 3653 1
 6483 014a 1846     		mov	r0, r3
 6484 014c 1837     		adds	r7, r7, #24
 6485              		.cfi_def_cfa_offset 8
 6486 014e BD46     		mov	sp, r7
 6487              		.cfi_def_cfa_register 13
 6488              		@ sp needed
 6489 0150 80BD     		pop	{r7, pc}
 6490              		.cfi_endproc
 6491              	.LFE124:
 6493              		.section	.text.UART_SetConfig,"ax",%progbits
 6494              		.align	1
 6495              		.syntax unified
 6496              		.thumb
 6497              		.thumb_func
 6499              	UART_SetConfig:
 6500              	.LFB125:
3654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
3656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
3660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
3661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 6501              		.loc 1 3662 1
 6502              		.cfi_startproc
 6503              		@ args = 0, pretend = 0, frame = 16
 6504              		@ frame_needed = 1, uses_anonymous_args = 0
 6505 0000 80B5     		push	{r7, lr}
 6506              		.cfi_def_cfa_offset 8
 6507              		.cfi_offset 7, -8
 6508              		.cfi_offset 14, -4
 6509 0002 84B0     		sub	sp, sp, #16
 6510              		.cfi_def_cfa_offset 24
 6511 0004 00AF     		add	r7, sp, #0
 6512              		.cfi_def_cfa_register 7
 6513 0006 7860     		str	r0, [r7, #4]
3663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg;
3664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t pclk;
3665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
3667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      according to huart->Init.StopBits value */
3675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 178


 6514              		.loc 1 3675 3
 6515 0008 7B68     		ldr	r3, [r7, #4]
 6516 000a 1B68     		ldr	r3, [r3]
 6517 000c 1B69     		ldr	r3, [r3, #16]
 6518 000e 23F44051 		bic	r1, r3, #12288
 6519 0012 7B68     		ldr	r3, [r7, #4]
 6520 0014 DA68     		ldr	r2, [r3, #12]
 6521 0016 7B68     		ldr	r3, [r7, #4]
 6522 0018 1B68     		ldr	r3, [r3]
 6523 001a 0A43     		orrs	r2, r2, r1
 6524 001c 1A61     		str	r2, [r3, #16]
3676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
3686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
3687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 6525              		.loc 1 3690 33
 6526 001e 7B68     		ldr	r3, [r7, #4]
 6527 0020 9A68     		ldr	r2, [r3, #8]
 6528              		.loc 1 3690 58
 6529 0022 7B68     		ldr	r3, [r7, #4]
 6530 0024 1B69     		ldr	r3, [r3, #16]
 6531              		.loc 1 3690 45
 6532 0026 1A43     		orrs	r2, r2, r3
 6533              		.loc 1 3690 79
 6534 0028 7B68     		ldr	r3, [r7, #4]
 6535 002a 5B69     		ldr	r3, [r3, #20]
 6536              		.loc 1 3690 10
 6537 002c 1343     		orrs	r3, r3, r2
 6538 002e BB60     		str	r3, [r7, #8]
3691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 6539              		.loc 1 3691 3
 6540 0030 7B68     		ldr	r3, [r7, #4]
 6541 0032 1B68     		ldr	r3, [r3]
 6542 0034 DB68     		ldr	r3, [r3, #12]
 6543 0036 23F4B053 		bic	r3, r3, #5632
 6544 003a 23F00C03 		bic	r3, r3, #12
 6545 003e 7A68     		ldr	r2, [r7, #4]
 6546 0040 1268     		ldr	r2, [r2]
 6547 0042 B968     		ldr	r1, [r7, #8]
 6548 0044 0B43     		orrs	r3, r3, r1
 6549 0046 D360     		str	r3, [r2, #12]
3692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE),
3693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
3694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 179


3697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 6550              		.loc 1 3698 3
 6551 0048 7B68     		ldr	r3, [r7, #4]
 6552 004a 1B68     		ldr	r3, [r3]
 6553 004c 5B69     		ldr	r3, [r3, #20]
 6554 004e 23F44071 		bic	r1, r3, #768
 6555 0052 7B68     		ldr	r3, [r7, #4]
 6556 0054 9A69     		ldr	r2, [r3, #24]
 6557 0056 7B68     		ldr	r3, [r7, #4]
 6558 0058 1B68     		ldr	r3, [r3]
 6559 005a 0A43     		orrs	r2, r2, r1
 6560 005c 5A61     		str	r2, [r3, #20]
3699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 6561              		.loc 1 3701 11
 6562 005e 7B68     		ldr	r3, [r7, #4]
 6563 0060 1B68     		ldr	r3, [r3]
 6564              		.loc 1 3701 5
 6565 0062 2C4A     		ldr	r2, .L291
 6566 0064 9342     		cmp	r3, r2
 6567 0066 03D1     		bne	.L289
3702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK2Freq();
 6568              		.loc 1 3703 12
 6569 0068 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6570 006c F860     		str	r0, [r7, #12]
 6571 006e 02E0     		b	.L290
 6572              	.L289:
3704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     pclk = HAL_RCC_GetPCLK1Freq();
 6573              		.loc 1 3707 12
 6574 0070 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6575 0074 F860     		str	r0, [r7, #12]
 6576              	.L290:
3708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
3710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
3712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
3713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
3715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
3717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
3718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
3720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
3721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 6577              		.loc 1 3721 26
 6578 0076 FA68     		ldr	r2, [r7, #12]
 6579 0078 1346     		mov	r3, r2
 6580 007a 9B00     		lsls	r3, r3, #2
 6581 007c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 180


 6582 007e 9A00     		lsls	r2, r3, #2
 6583 0080 1A44     		add	r2, r2, r3
 6584 0082 7B68     		ldr	r3, [r7, #4]
 6585 0084 5B68     		ldr	r3, [r3, #4]
 6586 0086 9B00     		lsls	r3, r3, #2
 6587 0088 B2FBF3F3 		udiv	r3, r2, r3
 6588 008c 224A     		ldr	r2, .L291+4
 6589 008e A2FB0323 		umull	r2, r3, r2, r3
 6590 0092 5B09     		lsrs	r3, r3, #5
 6591 0094 1901     		lsls	r1, r3, #4
 6592 0096 FA68     		ldr	r2, [r7, #12]
 6593 0098 1346     		mov	r3, r2
 6594 009a 9B00     		lsls	r3, r3, #2
 6595 009c 1344     		add	r3, r3, r2
 6596 009e 9A00     		lsls	r2, r3, #2
 6597 00a0 1A44     		add	r2, r2, r3
 6598 00a2 7B68     		ldr	r3, [r7, #4]
 6599 00a4 5B68     		ldr	r3, [r3, #4]
 6600 00a6 9B00     		lsls	r3, r3, #2
 6601 00a8 B2FBF3F2 		udiv	r2, r2, r3
 6602 00ac 1A4B     		ldr	r3, .L291+4
 6603 00ae A3FB0203 		umull	r0, r3, r3, r2
 6604 00b2 5B09     		lsrs	r3, r3, #5
 6605 00b4 6420     		movs	r0, #100
 6606 00b6 00FB03F3 		mul	r3, r0, r3
 6607 00ba D31A     		subs	r3, r2, r3
 6608 00bc 1B01     		lsls	r3, r3, #4
 6609 00be 3233     		adds	r3, r3, #50
 6610 00c0 154A     		ldr	r2, .L291+4
 6611 00c2 A2FB0323 		umull	r2, r3, r2, r3
 6612 00c6 5B09     		lsrs	r3, r3, #5
 6613 00c8 03F0F003 		and	r3, r3, #240
 6614 00cc 1944     		add	r1, r1, r3
 6615 00ce FA68     		ldr	r2, [r7, #12]
 6616 00d0 1346     		mov	r3, r2
 6617 00d2 9B00     		lsls	r3, r3, #2
 6618 00d4 1344     		add	r3, r3, r2
 6619 00d6 9A00     		lsls	r2, r3, #2
 6620 00d8 1A44     		add	r2, r2, r3
 6621 00da 7B68     		ldr	r3, [r7, #4]
 6622 00dc 5B68     		ldr	r3, [r3, #4]
 6623 00de 9B00     		lsls	r3, r3, #2
 6624 00e0 B2FBF3F2 		udiv	r2, r2, r3
 6625 00e4 0C4B     		ldr	r3, .L291+4
 6626 00e6 A3FB0203 		umull	r0, r3, r3, r2
 6627 00ea 5B09     		lsrs	r3, r3, #5
 6628 00ec 6420     		movs	r0, #100
 6629 00ee 00FB03F3 		mul	r3, r0, r3
 6630 00f2 D31A     		subs	r3, r2, r3
 6631 00f4 1B01     		lsls	r3, r3, #4
 6632 00f6 3233     		adds	r3, r3, #50
 6633 00f8 074A     		ldr	r2, .L291+4
 6634 00fa A2FB0323 		umull	r2, r3, r2, r3
 6635 00fe 5B09     		lsrs	r3, r3, #5
 6636 0100 03F00F02 		and	r2, r3, #15
 6637              		.loc 1 3721 8
 6638 0104 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 181


 6639 0106 1B68     		ldr	r3, [r3]
 6640              		.loc 1 3721 26
 6641 0108 0A44     		add	r2, r2, r1
 6642              		.loc 1 3721 24
 6643 010a 9A60     		str	r2, [r3, #8]
3722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
3723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 6644              		.loc 1 3723 1
 6645 010c 00BF     		nop
 6646 010e 1037     		adds	r7, r7, #16
 6647              		.cfi_def_cfa_offset 8
 6648 0110 BD46     		mov	sp, r7
 6649              		.cfi_def_cfa_register 13
 6650              		@ sp needed
 6651 0112 80BD     		pop	{r7, pc}
 6652              	.L292:
 6653              		.align	2
 6654              	.L291:
 6655 0114 00380140 		.word	1073821696
 6656 0118 1F85EB51 		.word	1374389535
 6657              		.cfi_endproc
 6658              	.LFE125:
 6660              		.text
 6661              	.Letext0:
 6662              		.file 2 "c:\\st\\stm32cubeide_1.10.1\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 6663              		.file 3 "c:\\st\\stm32cubeide_1.10.1\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 6664              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 6665              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 6666              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 6667              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 6668              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 6669              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 6670              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 182


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:18     .text.HAL_UART_Init:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:24     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:615    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6499   .text.UART_SetConfig:0000000000000000 UART_SetConfig
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:129    .text.HAL_HalfDuplex_Init:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:135    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:247    .text.HAL_LIN_Init:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:253    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:383    .text.HAL_MultiProcessor_Init:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:389    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:530    .text.HAL_UART_DeInit:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:536    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:651    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:609    .text.HAL_UART_MspInit:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:645    .text.HAL_UART_MspDeInit:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:681    .text.HAL_UART_Transmit:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:687    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5293   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:902    .text.HAL_UART_Receive:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:908    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1147   .text.HAL_UART_Transmit_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1153   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1258   .text.HAL_UART_Receive_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1264   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5406   .text.UART_Start_Receive_IT:0000000000000000 UART_Start_Receive_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1343   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1349   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1497   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4901   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4974   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5183   .text.UART_DMAError:0000000000000000 UART_DMAError
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1504   .text.HAL_UART_Receive_DMA:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1510   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5495   .text.UART_Start_Receive_DMA:0000000000000000 UART_Start_Receive_DMA
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1589   .text.HAL_UART_DMAPause:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1595   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1728   .text.HAL_UART_DMAResume:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1734   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1846   .text.HAL_UART_DMAStop:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1852   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5637   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5684   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1978   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:1984   .text.HAL_UARTEx_ReceiveToIdle:0000000000000000 HAL_UARTEx_ReceiveToIdle
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2299   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2305   .text.HAL_UARTEx_ReceiveToIdle_IT:0000000000000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2425   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2431   .text.HAL_UARTEx_ReceiveToIdle_DMA:0000000000000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2551   .text.HAL_UART_Abort:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2557   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2750   .text.HAL_UART_AbortTransmit:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2756   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2856   .text.HAL_UART_AbortReceive:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2862   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2989   .text.HAL_UART_Abort_IT:0000000000000000 $t
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 183


C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:2995   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4268   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3236   .text.HAL_UART_Abort_IT:0000000000000160 $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5805   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5893   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3242   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3248   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4304   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3360   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5981   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3365   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3371   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4340   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3514   .text.HAL_UART_AbortReceive_IT:00000000000000d0 $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6028   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3519   .text.HAL_UART_IRQHandler:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:3525   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6258   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4232   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4376   .text.HAL_UARTEx_RxEventCallback:0000000000000000 HAL_UARTEx_RxEventCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6079   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6209   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4077   .text.HAL_UART_IRQHandler:0000000000000350 $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5758   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4082   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4088   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4118   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4124   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4154   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4160   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4190   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4196   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4226   .text.HAL_UART_ErrorCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4262   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4298   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4334   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4370   .text.HAL_UARTEx_RxEventCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4408   .text.HAL_LIN_SendBreak:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4414   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4480   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4486   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4552   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4558   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4624   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4630   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4710   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4716   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4796   .text.HAL_UART_GetState:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4802   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4857   .text.HAL_UART_GetError:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4863   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4896   .text.UART_DMATransmitCplt:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:4969   .text.UART_DMATxHalfCplt:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5008   .text.UART_DMAReceiveCplt:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5013   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5120   .text.UART_DMARxHalfCplt:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5125   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 184


C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5178   .text.UART_DMAError:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5288   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5400   .text.UART_Start_Receive_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5489   .text.UART_Start_Receive_DMA:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5625   .text.UART_Start_Receive_DMA:00000000000000bc $d
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5632   .text.UART_EndTxTransfer:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5679   .text.UART_EndRxTransfer:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5753   .text.UART_DMAAbortOnError:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5800   .text.UART_DMATxAbortCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5888   .text.UART_DMARxAbortCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:5976   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6023   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6074   .text.UART_Transmit_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6204   .text.UART_EndTransmit_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6253   .text.UART_Receive_IT:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6494   .text.UART_SetConfig:0000000000000000 $t
C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s:6655   .text.UART_SetConfig:0000000000000114 $d
                           .group:0000000000000000 wm4.0.cb5f01749778df26340c4505df3d34d0
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.21.98635006afa9a018cfa5e0632ed4968b
                           .group:0000000000000000 wm4.stm32f1xx.h.39.208bb8a61c892b7c37d899c49a031330
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.18d01ce1aa74e9fb44dbf16f821a574a
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.22.a16e206564e97dbace9faae59a0d6008
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.22.5f7992e497faa36aa98f09f7214f4dbb
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
ARM GAS  C:\Users\ULTIMA~1\AppData\Local\Temp\ccZ9CheH.s 			page 185


HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
